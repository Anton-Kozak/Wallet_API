{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/_directives/hasRole.directive.ts","webpack:///src/app/_guards/admin.guard.ts","webpack:///src/app/_guards/main.guard.ts","webpack:///src/app/_guards/navigation.guard.ts","webpack:///src/app/_routes.ts","webpack:///src/app/_services/admin.service.ts","webpack:///src/app/_services/alertify.service.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/_services/expense.service.ts","webpack:///src/app/_services/invite.service.ts","webpack:///src/app/_services/notification.service.ts","webpack:///src/app/_services/request.service.ts","webpack:///src/app/_services/wallet.service.ts","webpack:///src/app/admin/wallet-admin/wallet-admin.component.ts","webpack:///src/app/admin/wallet-admin/wallet-admin.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/expenses/create-expense/create-expense.component.ts","webpack:///src/app/expenses/create-expense/create-expense.component.html","webpack:///src/app/expenses/edit-expense-modal/edit-expense-modal.component.ts","webpack:///src/app/expenses/edit-expense-modal/edit-expense-modal.component.html","webpack:///src/app/graphs/bar-category-comparison/bar-category-comparison.component.ts","webpack:///src/app/graphs/bar-category-comparison/bar-category-comparison.component.html","webpack:///src/app/graphs/bar-comparison/bar-comparison.component.ts","webpack:///src/app/graphs/bar-comparison/bar-comparison.component.html","webpack:///src/app/graphs/donut-chart-categories/donut-chart-categories.component.ts","webpack:///src/app/graphs/donut-chart-categories/donut-chart-categories.component.html","webpack:///src/app/graphs/donut-chart/donut-chart.component.ts","webpack:///src/app/graphs/donut-chart/donut-chart.component.html","webpack:///src/app/graphs/line-chart/line-chart.component.ts","webpack:///src/app/graphs/line-chart/line-chart.component.html","webpack:///src/app/graphs/pie-graph/pie-graph.component.ts","webpack:///src/app/graphs/pie-graph/pie-graph.component.html","webpack:///src/app/graphs/single-bar-chart/single-bar-chart.component.ts","webpack:///src/app/graphs/single-bar-chart/single-bar-chart.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/invites/check-invites/check-invites.component.ts","webpack:///src/app/invites/check-invites/check-invites.component.html","webpack:///src/app/invites/create-invite/create-invite.component.ts","webpack:///src/app/invites/create-invite/create-invite.component.html","webpack:///src/app/layout/navbar/navbar.component.ts","webpack:///src/app/layout/navbar/navbar.component.html","webpack:///src/app/layout/sidebar/sidebar.component.ts","webpack:///src/app/layout/sidebar/sidebar.component.html","webpack:///src/app/main-page/main-page.component.ts","webpack:///src/app/main-page/main-page.component.html","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/photo/photo.component.ts","webpack:///src/app/photo/photo.component.html","webpack:///src/app/registration/signup-signin/signup-signin.component.ts","webpack:///src/app/registration/signup-signin/signup-signin.component.html","webpack:///src/app/request/check-requests/check-requests.component.ts","webpack:///src/app/request/check-requests/check-requests.component.html","webpack:///src/app/request/request-access/request-access.component.ts","webpack:///src/app/request/request-access/request-access.component.html","webpack:///src/app/wallet/category-statistics/category-statistics.component.ts","webpack:///src/app/wallet/category-statistics/category-statistics.component.html","webpack:///src/app/wallet/create-wallet/create-wallet.component.ts","webpack:///src/app/wallet/create-wallet/create-wallet.component.html","webpack:///src/app/wallet/edit-wallet/edit-wallet.component.ts","webpack:///src/app/wallet/edit-wallet/edit-wallet.component.html","webpack:///src/app/wallet/show-previous-expenses/show-previous-expenses.component.ts","webpack:///src/app/wallet/show-previous-expenses/show-previous-expenses.component.html","webpack:///src/app/wallet/show-wallet-table/show-wallet-table.component.ts","webpack:///src/app/wallet/show-wallet-table/show-wallet-table.component.html","webpack:///src/app/wallet/user-statistics/user-statistics.component.ts","webpack:///src/app/wallet/user-statistics/user-statistics.component.html","webpack:///src/app/wallet/wallet-section/wallet-section.component.ts","webpack:///src/app/wallet/wallet-section/wallet-section.component.html","webpack:///src/app/wallet/wallet-statistics/wallet-statistics.component.ts","webpack:///src/app/wallet/wallet-statistics/wallet-statistics.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","HasRoleDirective","viewContainerRef","templateRef","authService","isVisible","userRoles","decodedToken","role","clear","roleMatch","appHasRole","createEmbeddedView","selector","AdminGuard","router","next","state","includes","navigate","providedIn","MainGuard","token","getToken","console","log","hasWallet","url","NavigationGuard","appRoutes","path","redirectTo","pathMatch","component","canActivate","children","AdminService","http","baseUrl","apiUrl","get","nameid","userId","post","responseType","expenseToEdit","put","AlertifyService","message","okCallback","alertify","confirm","success","error","warning","AuthService","jwtHelper","isLoggedIn","isTokenExpired","localStorage","getItem","checkUserWallet","username","userpass","password","pipe","response","setItem","removeItem","decodeToken","allowedRoles","isMatch","forEach","element","ExpenseService","initialExpenses","expensesSubject","categoryTitles","firstSubject","secondSubject","thirdSubject","fourthSubject","fifthSubject","sixthSubject","seventhSubject","eightthSubject","ninethSubject","tenthSubject","firstExpenses","categoryName","expenses","categoryId","secondExpenses","thirdExpenses","fourthExpenses","fifthExpenses","sixthExpenses","seventhExpenses","eightthExpenses","ninethExpenses","tenthExpenses","subscribe","categoriesCount","categories","push","title","length","month","expense","receivedExpense","expenseCategoryId","getValue","moneySpent","data","InviteService","email","walletId","NotificationService","RequestService","WalletService","walletCategories","currentCategories","walletToCreate","currentWallet","wallet","WalletAdminComponent","admService","dialog","adminService","columnsForExpenses","columnsForUsers","users","getAllExpenses","paginator","expensePaginator","getUsers","usersForAdmin","rowIndex","removeUser","el","document","getElementById","toString","remove","dialogRef","open","afterClosed","result","exp","find","x","isAdmin","width","undefined","expenseTitle","expenseDescription","creationDate","onExpenseDelete","splice","$event","sendInvitation","addUserFromRequest","templateUrl","styleUrls","AppComponent","isAuthorized","res","tokenGetter","AppModule","forRoot","config","whitelistedDomains","blacklistedRoutes","declarations","imports","entryComponents","providers","bootstrap","CreateExpenseComponent","expenseService","walletService","newExpenseForm","required","minLength","maxLength","getWalletsCategories","value","errors","Date","getFullYear","getMonth","createExpense","close","back","EditExpenseModalComponent","expService","isAdminEdit","editExpense","valid","expToEdit","userName","onExpenseEdit","editedExpense","onEdit","onAdminEdit","BarCategoryComparisonComponent","barChartOptions","responsive","scales","xAxes","yAxes","plugins","datalabels","anchor","align","barChartLabels","barChartType","barChartLegend","barChartData","label","last","lastMonthbar","current","currentMonthbar","category","BarComparisonComponent","i","currentMonthbarExpensesList","lastMonthbarExpensesList","DonutChartCategoriesComponent","doughnutChartLabels","doughnutChartData","doughnutChartType","barExpensesList","DonutChartComponent","LineChartComponent","lineChartData","lineChartLabels","lineChartOptions","maintainAspectRatio","position","gridLines","color","ticks","fontColor","annotation","annotations","type","mode","scaleID","borderColor","borderWidth","enabled","content","lineChartColors","backgroundColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","lineChartLegend","lineChartType","lastSixMonths","reverse","PieGraphComponent","pieChartOptions","aspectRatio","legend","formatter","ctx","chart","labels","dataIndex","pieChartLabels","pieChartData","pieChartType","pieChartLegend","pieChartColors","topFiveUsers","SingleBarChartComponent","HomeComponent","noteService","categoriesToAdd","getCurrentWallet","CheckInvitesComponent","invService","checkInvites","inv","invites","accept","decline","CreateInviteComponent","createInvite","onSubmit","goBack","NavbarComponent","notificationCount","notifications","toggleDrawer","toggleState","currentUserName","unique_name","getNotifications","logout","emit","deleteNotifications","onToggle","test","SidebarComponent","getIcons","sidenav","icon","MainPageComponent","NotFoundComponent","uploader","PhotoComponent","hasBaseDropZoneOver","initialeUploader","authToken","isHTML5","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","status","header","JSON","parse","photo","dateAdded","getPhoto","deletePhoto","fileOverBase","SignupSigninComponent","isSignUp","isSignedIn","signUpForm","pattern","signInForm","register","reset","login","user","CheckRequestsComponent","reqService","onUserAdd","columns","requests","getRequests","acceptRequest","declineRequest","RequestAccessComponent","createRequestForAccess","CategoryStatisticsComponent","route","showComparisonData","mostSpentUser","mostUsedUser","showData","params","chosenCategory","chosenCategoryName","isLoading","getCategoryStatistics","setTimeout","largestExpense","currentMonthLargestExpense","currentMonthData","lastMonthData","spentThisMonth","spentAll","CreateWalletComponent","finalCategories","isActive","walletForm","min","n","findIndex","monthlyLimit","createNewWallet","addCategoriesToWallet","statusText","createWallet","toggleCategory","EditWalletComponent","editWalletForm","walletToEdit","editWallet","ShowPreviousExpensesComponent","first","second","third","fourth","fifth","sixth","seventh","eigth","nineth","tenth","monthNumber","monthName","date","now","setMonth","toLocaleString","getData","getPreviousExpenses","barExpenses","clearData","ShowWalletTableComponent","getWalletData","walletData","walletTitle","expData","walletExpenses","expensesToShow","checkLimit","walletLimit","showAllExpenses","UserStatisticsComponent","avgDailyExpenses","amountOfMoneySpent","routeReuseStrategy","shouldReuseRoute","isThisUser","snapshot","getUserStatistics","getUserExpenses","expensesRecieved","showCurrentComparison","currentMonthDataToCompare","categoryExpenses","showPreviousComparison","lastMonthDataToCompare","mostUsedCategory","mostSpentCategory","WalletSectionComponent","drawer","toggle","WalletStatisticsComponent","getWalletStatistics","walletMembers","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;ACZA,QAAIC,GAAG,GAAG;AACT,cAAQ,oCADC;AAET,iBAAW,oCAFF;AAGT,cAAQ,oCAHC;AAIT,iBAAW,uCAJF;AAKT,oBAAc,uCALL;AAMT,iBAAW,uCANF;AAOT,oBAAc,uCAPL;AAQT,iBAAW,uCARF;AAST,oBAAc,uCATL;AAUT,iBAAW,uCAVF;AAWT,oBAAc,uCAXL;AAYT,iBAAW,uCAZF;AAaT,oBAAc,uCAbL;AAcT,iBAAW,uCAdF;AAeT,oBAAc,uCAfL;AAgBT,iBAAW,oCAhBF;AAiBT,cAAQ,oCAjBC;AAkBT,iBAAW,oCAlBF;AAmBT,cAAQ,oCAnBC;AAoBT,iBAAW,oCApBF;AAqBT,cAAQ,oCArBC;AAsBT,iBAAW,oCAtBF;AAuBT,cAAQ,oCAvBC;AAwBT,iBAAW,oCAxBF;AAyBT,cAAQ,oCAzBC;AA0BT,iBAAW,oCA1BF;AA2BT,cAAQ,oCA3BC;AA4BT,iBAAW,oCA5BF;AA6BT,cAAQ,oCA7BC;AA8BT,iBAAW,oCA9BF;AA+BT,cAAQ,oCA/BC;AAgCT,iBAAW,oCAhCF;AAiCT,cAAQ,oCAjCC;AAkCT,iBAAW,oCAlCF;AAmCT,cAAQ,oCAnCC;AAoCT,iBAAW,oCApCF;AAqCT,cAAQ,oCArCC;AAsCT,iBAAW,oCAtCF;AAuCT,cAAQ,oCAvCC;AAwCT,iBAAW,oCAxCF;AAyCT,cAAQ,oCAzCC;AA0CT,iBAAW,oCA1CF;AA2CT,cAAQ,oCA3CC;AA4CT,iBAAW,uCA5CF;AA6CT,oBAAc,uCA7CL;AA8CT,iBAAW,uCA9CF;AA+CT,oBAAc,uCA/CL;AAgDT,iBAAW,oCAhDF;AAiDT,cAAQ,oCAjDC;AAkDT,iBAAW,oCAlDF;AAmDT,cAAQ,oCAnDC;AAoDT,iBAAW,oCApDF;AAqDT,iBAAW,uCArDF;AAsDT,oBAAc,uCAtDL;AAuDT,iBAAW,uCAvDF;AAwDT,oBAAc,uCAxDL;AAyDT,iBAAW,uCAzDF;AA0DT,oBAAc,uCA1DL;AA2DT,iBAAW,uCA3DF;AA4DT,oBAAc,uCA5DL;AA6DT,iBAAW,uCA7DF;AA8DT,oBAAc,uCA9DL;AA+DT,iBAAW,uCA/DF;AAgET,oBAAc,uCAhEL;AAiET,iBAAW,uCAjEF;AAkET,oBAAc,uCAlEL;AAmET,iBAAW,uCAnEF;AAoET,oBAAc,uCApEL;AAqET,cAAQ,oCArEC;AAsET,iBAAW,oCAtEF;AAuET,cAAQ,oCAvEC;AAwET,iBAAW,uCAxEF;AAyET,oBAAc,uCAzEL;AA0ET,iBAAW,uCA1EF;AA2ET,oBAAc,uCA3EL;AA4ET,iBAAW,oCA5EF;AA6ET,cAAQ,oCA7EC;AA8ET,iBAAW,oCA9EF;AA+ET,cAAQ,oCA/EC;AAgFT,iBAAW,oCAhFF;AAiFT,cAAQ,oCAjFC;AAkFT,iBAAW,oCAlFF;AAmFT,cAAQ,oCAnFC;AAoFT,iBAAW,oCApFF;AAqFT,eAAS,qCArFA;AAsFT,kBAAY,qCAtFH;AAuFT,cAAQ,oCAvFC;AAwFT,iBAAW,oCAxFF;AAyFT,cAAQ,oCAzFC;AA0FT,iBAAW,uCA1FF;AA2FT,oBAAc,uCA3FL;AA4FT,iBAAW,uCA5FF;AA6FT,oBAAc,uCA7FL;AA8FT,iBAAW,oCA9FF;AA+FT,cAAQ,oCA/FC;AAgGT,iBAAW,oCAhGF;AAiGT,cAAQ,oCAjGC;AAkGT,iBAAW,oCAlGF;AAmGT,cAAQ,oCAnGC;AAoGT,iBAAW,oCApGF;AAqGT,cAAQ,oCArGC;AAsGT,iBAAW,oCAtGF;AAuGT,oBAAc,0CAvGL;AAwGT,uBAAiB,0CAxGR;AAyGT,oBAAc,0CAzGL;AA0GT,uBAAiB,0CA1GR;AA2GT,cAAQ,oCA3GC;AA4GT,iBAAW,oCA5GF;AA6GT,cAAQ,oCA7GC;AA8GT,iBAAW,oCA9GF;AA+GT,cAAQ,oCA/GC;AAgHT,iBAAW,oCAhHF;AAiHT,cAAQ,oCAjHC;AAkHT,iBAAW,oCAlHF;AAmHT,cAAQ,oCAnHC;AAoHT,iBAAW,oCApHF;AAqHT,iBAAW,uCArHF;AAsHT,oBAAc,uCAtHL;AAuHT,cAAQ,oCAvHC;AAwHT,iBAAW,oCAxHF;AAyHT,cAAQ,oCAzHC;AA0HT,iBAAW,oCA1HF;AA2HT,cAAQ,oCA3HC;AA4HT,iBAAW,uCA5HF;AA6HT,oBAAc,uCA7HL;AA8HT,iBAAW,oCA9HF;AA+HT,cAAQ,oCA/HC;AAgIT,iBAAW,oCAhIF;AAiIT,cAAQ,oCAjIC;AAkIT,iBAAW,oCAlIF;AAmIT,cAAQ,oCAnIC;AAoIT,iBAAW,oCApIF;AAqIT,cAAQ,oCArIC;AAsIT,iBAAW,oCAtIF;AAuIT,cAAQ,oCAvIC;AAwIT,iBAAW,oCAxIF;AAyIT,cAAQ,oCAzIC;AA0IT,iBAAW,oCA1IF;AA2IT,cAAQ,oCA3IC;AA4IT,iBAAW,oCA5IF;AA6IT,cAAQ,oCA7IC;AA8IT,iBAAW,oCA9IF;AA+IT,cAAQ,oCA/IC;AAgJT,iBAAW,oCAhJF;AAiJT,cAAQ,oCAjJC;AAkJT,iBAAW,oCAlJF;AAmJT,cAAQ,oCAnJC;AAoJT,iBAAW,oCApJF;AAqJT,cAAQ,oCArJC;AAsJT,iBAAW,oCAtJF;AAuJT,cAAQ,oCAvJC;AAwJT,iBAAW,oCAxJF;AAyJT,cAAQ,oCAzJC;AA0JT,iBAAW,oCA1JF;AA2JT,cAAQ,oCA3JC;AA4JT,iBAAW,oCA5JF;AA6JT,cAAQ,oCA7JC;AA8JT,iBAAW,oCA9JF;AA+JT,cAAQ,oCA/JC;AAgKT,iBAAW,oCAhKF;AAiKT,cAAQ,oCAjKC;AAkKT,iBAAW,oCAlKF;AAmKT,cAAQ,oCAnKC;AAoKT,iBAAW,oCApKF;AAqKT,cAAQ,oCArKC;AAsKT,iBAAW,uCAtKF;AAuKT,oBAAc,uCAvKL;AAwKT,iBAAW,oCAxKF;AAyKT,cAAQ,oCAzKC;AA0KT,iBAAW,oCA1KF;AA2KT,cAAQ,oCA3KC;AA4KT,iBAAW,oCA5KF;AA6KT,cAAQ,oCA7KC;AA8KT,iBAAW,oCA9KF;AA+KT,cAAQ,oCA/KC;AAgLT,iBAAW,oCAhLF;AAiLT,cAAQ,oCAjLC;AAkLT,iBAAW,uCAlLF;AAmLT,oBAAc,uCAnLL;AAoLT,iBAAW,oCApLF;AAqLT,cAAQ,oCArLC;AAsLT,iBAAW,oCAtLF;AAuLT,kBAAY,wCAvLH;AAwLT,qBAAe,wCAxLN;AAyLT,iBAAW,uCAzLF;AA0LT,oBAAc,uCA1LL;AA2LT,cAAQ,oCA3LC;AA4LT,iBAAW,oCA5LF;AA6LT,cAAQ,oCA7LC;AA8LT,iBAAW,uCA9LF;AA+LT,oBAAc,uCA/LL;AAgMT,iBAAW,oCAhMF;AAiMT,cAAQ,oCAjMC;AAkMT,iBAAW,oCAlMF;AAmMT,cAAQ,oCAnMC;AAoMT,iBAAW,oCApMF;AAqMT,cAAQ,oCArMC;AAsMT,iBAAW,oCAtMF;AAuMT,cAAQ,oCAvMC;AAwMT,iBAAW,oCAxMF;AAyMT,cAAQ,oCAzMC;AA0MT,iBAAW,oCA1MF;AA2MT,cAAQ,oCA3MC;AA4MT,iBAAW,oCA5MF;AA6MT,cAAQ,oCA7MC;AA8MT,iBAAW,oCA9MF;AA+MT,cAAQ,oCA/MC;AAgNT,iBAAW,oCAhNF;AAiNT,cAAQ,oCAjNC;AAkNT,mBAAa,yCAlNJ;AAmNT,sBAAgB,yCAnNP;AAoNT,iBAAW,oCApNF;AAqNT,cAAQ,oCArNC;AAsNT,iBAAW,oCAtNF;AAuNT,cAAQ,oCAvNC;AAwNT,iBAAW,oCAxNF;AAyNT,cAAQ,oCAzNC;AA0NT,iBAAW,oCA1NF;AA2NT,cAAQ,oCA3NC;AA4NT,iBAAW,oCA5NF;AA6NT,cAAQ,oCA7NC;AA8NT,iBAAW,oCA9NF;AA+NT,eAAS,qCA/NA;AAgOT,kBAAY,qCAhOH;AAiOT,cAAQ,oCAjOC;AAkOT,iBAAW,oCAlOF;AAmOT,cAAQ,oCAnOC;AAoOT,iBAAW,oCApOF;AAqOT,iBAAW,uCArOF;AAsOT,oBAAc,uCAtOL;AAuOT,eAAS,qCAvOA;AAwOT,kBAAY,qCAxOH;AAyOT,cAAQ,oCAzOC;AA0OT,iBAAW,oCA1OF;AA2OT,eAAS,qCA3OA;AA4OT,kBAAY,qCA5OH;AA6OT,eAAS,qCA7OA;AA8OT,oBAAc,0CA9OL;AA+OT,uBAAiB,0CA/OR;AAgPT,kBAAY,qCAhPH;AAiPT,iBAAW,uCAjPF;AAkPT,oBAAc,uCAlPL;AAmPT,cAAQ,oCAnPC;AAoPT,iBAAW,oCApPF;AAqPT,cAAQ,oCArPC;AAsPT,iBAAW,oCAtPF;AAuPT,cAAQ,oCAvPC;AAwPT,mBAAa,yCAxPJ;AAyPT,sBAAgB,yCAzPP;AA0PT,iBAAW,oCA1PF;AA2PT,cAAQ,oCA3PC;AA4PT,iBAAW,oCA5PF;AA6PT,oBAAc,0CA7PL;AA8PT,uBAAiB,0CA9PR;AA+PT,cAAQ,oCA/PC;AAgQT,iBAAW,oCAhQF;AAiQT,iBAAW,uCAjQF;AAkQT,oBAAc,uCAlQL;AAmQT,iBAAW,uCAnQF;AAoQT,oBAAc,uCApQL;AAqQT,iBAAW,uCArQF;AAsQT,oBAAc,uCAtQL;AAuQT,iBAAW,uCAvQF;AAwQT,oBAAc;AAxQL,KAAV;;AA4QA,aAASC,cAAT,CAAwBZ,GAAxB,EAA6B;AAC5B,UAAIU,EAAE,GAAGG,qBAAqB,CAACb,GAAD,CAA9B;AACA,aAAOc,mBAAmB,CAACJ,EAAD,CAA1B;AACA;;AACD,aAASG,qBAAT,CAA+Bb,GAA/B,EAAoC;AACnC,UAAG,CAACc,mBAAmB,CAACC,CAApB,CAAsBJ,GAAtB,EAA2BX,GAA3B,CAAJ,EAAqC;AACpC,YAAII,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA;;AACD,aAAOO,GAAG,CAACX,GAAD,CAAV;AACA;;AACDY,kBAAc,CAACL,IAAf,GAAsB,SAASS,kBAAT,GAA8B;AACnD,aAAOC,MAAM,CAACV,IAAP,CAAYI,GAAZ,CAAP;AACA,KAFD;;AAGAC,kBAAc,CAACV,OAAf,GAAyBW,qBAAzB;AACAL,UAAM,CAACC,OAAP,GAAiBG,cAAjB;AACAA,kBAAc,CAACF,EAAf,GAAoB,wDAApB;;;;;;;;;;;;;;;;AC7RA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaQ,gB;;;AAIT,gCAAoBC,gBAApB,EAAgEC,WAAhE,EAAuGC,WAAvG,EAAiI;AAAA;;AAA7G,aAAAF,gBAAA,GAAAA,gBAAA;AAA4C,aAAAC,WAAA,GAAAA,WAAA;AAAuC,aAAAC,WAAA,GAAAA,WAAA,CAA0B,CAFjI;;AACA,aAAAC,SAAA,GAAY,KAAZ;AACoI;;;;mCAC5H;AACJ,cAAMC,SAAS,GAAG,KAAKF,WAAL,CAAiBG,YAAjB,CAA8BC,IAAhD,CADI,CAEJ;;AACA,cAAG,CAACF,SAAJ,EAAc;AACV,iBAAKJ,gBAAL,CAAsBO,KAAtB;AACH,WALG,CAOJ;;;AACA,cAAG,KAAKL,WAAL,CAAiBM,SAAjB,CAA2B,KAAKC,UAAhC,CAAH,EAA+C;AAC3C,gBAAG,CAAC,KAAKN,SAAT,EACA,KAAKA,SAAL,GAAiB,IAAjB;AACA,iBAAKH,gBAAL,CAAsBU,kBAAtB,CAAyC,KAAKT,WAA9C;AACH,WAJD,MAKI;AACA,iBAAKE,SAAL,GAAiB,KAAjB;AACA,iBAAKH,gBAAL,CAAsBO,KAAtB;AACH;AACJ;;;;;;;uBAtBQR,gB,EAAgB,+H,EAAA,0H,EAAA,mI;AAAA,K;;;YAAhBA,gB;AAAgB,yC;AAAA;AAAA;AAAA;;;;;sEAAhBA,gB,EAAgB;cAH5B,uDAG4B;eAHlB;AACPY,kBAAQ,EAAE,cADH,CACkB;;AADlB,S;AAGkB,Q;;;;;;;;;;gBACxB;;;;;;;;;;;;;;;;;;;;ACPL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,U;;;AACX,0BAAoBV,WAApB,EAAsDW,MAAtD,EAAsE;AAAA;;AAAlD,aAAAX,WAAA,GAAAA,WAAA;AAAkC,aAAAW,MAAA,GAAAA,MAAA;AAAmB;;;;oCAEvEC,I,EACAC,K,EAA0B;AAC1B,cAAMX,SAAS,GAAG,KAAKF,WAAL,CAAiBG,YAAjB,CAA8BC,IAAhD;;AACA,cAAIF,SAAS,CAACY,QAAV,CAAmB,OAAnB,CAAJ,EAAiC;AAC/B,mBAAO,IAAP;AACD;;AACD,eAAKH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACA,iBAAO,KAAP;AACD;;;;;;;uBAXUL,U,EAAU,0H,EAAA,8G;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVM,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;;;ACRvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,S;;;AACX,yBAAoBN,MAApB,EAA4CX,WAA5C,EAAsE;AAAA;;AAAlD,aAAAW,MAAA,GAAAA,MAAA;AAAwB,aAAAX,WAAA,GAAAA,WAAA;AAA6B;;;;oCAEvEY,I,EACAC,K,EAA0B;AAC1B,cAAIK,KAAK,GAAG,KAAKlB,WAAL,CAAiBmB,QAAjB,EAAZ;AACAC,iBAAO,CAACC,GAAR,CAAY,yBAAZ;;AAEA,cAAIH,KAAK,KAAK,IAAd,EAAoB;AAClB,gBAAIA,KAAK,CAACI,SAAN,KAAoB,MAAxB,EAAgC;AAC9B,kBAAI,KAAKX,MAAL,CAAYY,GAAZ,KAAoB,GAAxB,EACE,KAAKZ,MAAL,CAAYI,QAAZ,CAAqB,CAAC,KAAKJ,MAAL,CAAYY,GAAb,CAArB,EADF,KAGE,KAAKZ,MAAL,CAAYI,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACF,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AACD;;AACD,iBAAO,IAAP;AACD;;;;;;;uBAnBUE,S,EAAS,8G,EAAA,0H;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVD,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACRtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaQ,e;;;AACX,+BAAoBxB,WAApB,EAAsDW,MAAtD,EAAsE;AAAA;;AAAlD,aAAAX,WAAA,GAAAA,WAAA;AAAkC,aAAAW,MAAA,GAAAA,MAAA;AAAmB;;;;oCAEvEC,I,EACAC,K,EAA0B;AAC1B,cAAIK,KAAK,GAAG,KAAKlB,WAAL,CAAiBmB,QAAjB,EAAZ;AACAC,iBAAO,CAACC,GAAR,CAAY,+BAAZ;;AACA,cAAIH,KAAK,KAAK,IAAd,EAAoB;AAClB,gBAAIA,KAAK,CAACI,SAAN,KAAoB,MAAxB,EAAgC;AAC9B,qBAAO,IAAP;AACD;;AACD,iBAAKX,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA,mBAAO,KAAP;AACD;;AACD,eAAKJ,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA,iBAAO,KAAP;AACD;;;;;;;uBAhBUS,e,EAAe,0H,EAAA,8G;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVR,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAwBO,QAAMS,SAAS,GAAW,CAC/B;AAAEC,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,cAAxB;AAAwCC,eAAS,EAAE;AAAnD,KAD+B,EAG/B;AAAEF,UAAI,EAAE,MAAR;AAAgBG,eAAS,EAAE,iFAA3B;AAA8CC,iBAAW,EAAE,CAAC,6DAAD;AAA3D,KAH+B,EAI/B;AACEJ,UAAI,EAAE,QADR;AACkBG,eAAS,EAAE,uGAD7B;AACqDC,iBAAW,EAAE,CAAC,yEAAD,CADlE;AACqFC,cAAQ,EAAE,CAC3F;AAAEL,YAAI,EAAE,MAAR;AAAgBG,iBAAS,EAAE;AAA3B,OAD2F,EAE3F;AAAEH,YAAI,EAAE,eAAR;AAAyBG,iBAAS,EAAE;AAApC,OAF2F,EAG3F;AAAEH,YAAI,EAAE,eAAR;AAAyBG,iBAAS,EAAE;AAApC,OAH2F,EAI3F;AAAEH,YAAI,EAAE,cAAR;AAAwBG,iBAAS,EAAE;AAAnC,OAJ2F,EAK3F;AAAEH,YAAI,EAAE,cAAR;AAAwBG,iBAAS,EAAE;AAAnC,OAL2F,EAM3F;AAAEH,YAAI,EAAE,eAAR;AAAyBG,iBAAS,EAAE;AAApC,OAN2F,EAO3F;AAAEH,YAAI,EAAE,gBAAR;AAA0BG,iBAAS,EAAE,+GAArC;AAA+DC,mBAAW,EAAE,CAAC,yEAAD;AAA5E,OAP2F,EAQ3F;AAAEJ,YAAI,EAAE,kBAAR;AAA4BG,iBAAS,EAAE;AAAvC,OAR2F,EAS3F;AAAEH,YAAI,EAAE,qBAAR;AAA+BG,iBAAS,EAAE;AAA1C,OAT2F,EAU3F;AACA;AAAEH,YAAI,EAAE,aAAR;AAAuBG,iBAAS,EAAE;AAAlC,OAX2F,EAY3F;AAAEH,YAAI,EAAE,oBAAR;AAA8BG,iBAAS,EAAE;AAAzC,OAZ2F,EAa3F;AAAEH,YAAI,EAAE,iBAAR;AAA2BG,iBAAS,EAAE;AAAtC,OAb2F,EAc3F;AAAEH,YAAI,EAAE,YAAR;AAAsBG,iBAAS,EAAE;AAAjC,OAd2F,EAe3F;AAAEH,YAAI,EAAE,aAAR;AAAuBG,iBAAS,EAAE,gGAAlC;AAAwDC,mBAAW,EAAC,CAAC,+DAAD;AAApE,OAf2F;AAD/F,KAJ+B,EAwB/B;AAAEJ,UAAI,EAAE,IAAR;AAAcG,eAAS,EAAE;AAAzB,KAxB+B,EA0B/B;AAAEH,UAAI,EAAE,OAAR;AAAiBG,eAAS,EAAE;AAA5B,KA1B+B,CAA1B;;;;;;;;;;;;;;;;ACzBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaG,Y;;;AAKX,4BAAoBC,IAApB,EAA8CjC,WAA9C,EAAwE;AAAA;;AAApD,aAAAiC,IAAA,GAAAA,IAAA;AAA0B,aAAAjC,WAAA,GAAAA,WAAA;AAH9C,aAAAkC,OAAA,GAAkB,yEAAYC,MAAZ,GAAqB,QAAvC;AAG2E;;;;mCAGnE;AACN,iBAAO,KAAKF,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,WAAlE,CAAP;AACD;;;mCAEUC,M,EAAc;AACvB,iBAAO,KAAKL,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,cAApD,GAAqEC,MAApF,EAA4F,EAA5F,EAAgG;AAACE,wBAAY,EAAE;AAAf,WAAhG,CAAP;AACD;;;yCAEa;AACZ,iBAAO,KAAKP,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,kBAAlE,CAAP;AACD;;;wCAEehD,E,EAAY;AAC1B,iBAAO,KAAK4C,IAAL,WAAiB,KAAKC,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,iBAApD,GAAwEhD,EAAzF,EAA6F;AAAEmD,wBAAY,EAAE;AAAhB,WAA7F,CAAP;AACD;;;sCAEaC,a,EAAgC;AAC5C,iBAAO,KAAKR,IAAL,CAAUS,GAAV,CAAc,KAAKR,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,eAApD,GAAsEI,aAAa,CAACpD,EAAlG,EAAsGoD,aAAtG,CAAP;AACD;;;;;;;uBA1BUT,Y,EAAY,uH,EAAA,iH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVhB,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;;;ACTzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKa2B,e;;;AAEX,iCAAc;AAAA;AAAG;;;;gCAITC,O,EAAiBC,U,EAAuB;AAC9CC,kBAAQ,CAACC,OAAT,CAAiBH,OAAjB,EAA0B,UAAU7D,CAAV,EAAa;AACrC,gBAAIA,CAAJ,EAAO;AACL8D,wBAAU;AACX,aAFD,MAEO,CAAG;AACX,WAJD;AAKD;;;gCAEOD,O,EAAiB;AACvBE,kBAAQ,CAACE,OAAT,CAAiBJ,OAAjB;AACD;;;8BAEKA,O,EAAiB;AACrBE,kBAAQ,CAACG,KAAT,CAAeL,OAAf;AACD;;;gCAEOA,O,EAAiB;AACvBE,kBAAQ,CAACI,OAAT,CAAiBN,OAAjB;AACD;;;gCAEOA,Q,EAAiB;AACvBE,kBAAQ,CAACF,OAAT,CAAiBA,QAAjB;AACD;;;;;;;uBA5BUD,e;AAAe,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACV3B,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;ACL5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUamC,W;;;AASX,2BAAoBlB,IAApB,EAA8CtB,MAA9C,EAA8D;AAAA;;AAA1C,aAAAsB,IAAA,GAAAA,IAAA;AAA0B,aAAAtB,MAAA,GAAAA,MAAA;AAN9C,aAAAyC,SAAA,GAAY,IAAI,mEAAJ,EAAZ;AAEA,aAAAlB,OAAA,GAAkB,yEAAYC,MAAZ,GAAqB,OAAvC;AAEA,aAAAkB,UAAA,GAAa,IAAI,oDAAJ,CAA6B,CAAC,KAAKD,SAAL,CAAeE,cAAf,CAA8BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA9B,CAA9B,CAAb;AACA,aAAAlC,SAAA,GAAY,IAAI,oDAAJ,CAA6B,KAAKmC,eAAL,EAA7B,CAAZ;AACiE;;;;iCAExDC,Q,EAAkBC,Q,EAAkBvD,I,EAAc;AACzD,iBAAO,KAAK6B,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAe,UAA9B,EAA0C;AAAEwB,oBAAQ,EAAEA,QAAZ;AAAsBE,oBAAQ,EAAED,QAAhC;AAA0CvD,gBAAI,EAAEA;AAAhD,WAA1C,CAAP;AACD;;;8BAEKsD,Q,EAAkBC,Q,EAAkB;AAAA;;AACxC,iBAAO,KAAK1B,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAe,OAA9B,EAAuC;AAAEwB,oBAAQ,EAAEA,QAAZ;AAAsBE,oBAAQ,EAAED;AAAhC,WAAvC,EAAmFE,IAAnF,CAAwF,2DAAI,UAACC,QAAD,EAAmB;AACpH,gBAAIA,QAAJ,EAAc;AACZP,0BAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BD,QAAQ,CAAC5C,KAAvC;;AACA,mBAAI,CAACmC,UAAL,CAAgBzC,IAAhB,CAAqB,IAArB;;AACA,mBAAI,CAACU,SAAL,CAAeV,IAAf,CAAoB,KAAI,CAAC6C,eAAL,EAApB;AACD;;AACD,mBAAOK,QAAP;AACD,WAP8F,CAAxF,CAAP;AAQD;;;iCAEQ;AACPP,sBAAY,CAACS,UAAb,CAAwB,OAAxB;AACA,eAAKX,UAAL,CAAgBzC,IAAhB,CAAqB,KAArB;AACD;;;mCAEU;AACT,cAAMM,KAAK,GAAGqC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,cAAItC,KAAK,KAAK,IAAd,EAAoB;AAClB,iBAAKf,YAAL,GAAoB,KAAKiD,SAAL,CAAea,WAAf,CAA2B/C,KAA3B,CAApB;AACA,mBAAO,KAAKf,YAAZ;AACD;;AACD,iBAAO,IAAP;AACD;;;qCAEY;AACX,eAAKkD,UAAL,CAAgBzC,IAAhB,CAAqB,CAAC,KAAKwC,SAAL,CAAeE,cAAf,CAA8BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA9B,CAAtB;AACD;;;0CAEiB;AAChB,cAAMtC,KAAK,GAAGqC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,cAAItC,KAAK,KAAK,IAAd,EAAoB;AAClB,gBAAI,KAAKC,QAAL,GAAgBG,SAAhB,KAA8B,MAAlC,EACE,OAAO,IAAP;AACF,mBAAO,KAAP;AACD;;AACD,iBAAO,KAAP;AACD;;;kCAES4C,Y,EAAY;AACpB,cAAIC,OAAO,GAAG,KAAd;AACA,cAAMjE,SAAS,GAAG,KAAKC,YAAL,CAAkBC,IAApC;AACA8D,sBAAY,CAACE,OAAb,CAAqB,UAAAC,OAAO,EAAI;AAC9B,gBAAInE,SAAS,CAACY,QAAV,CAAmBuD,OAAnB,CAAJ,EAAiC;AAC/BF,qBAAO,GAAG,IAAV;AACA;AACD;AACF,WALD;AAMA,iBAAOA,OAAP;AACD,S,CAED;;;;mCACW;AACT,iBAAO,KAAKlC,IAAL,CAAUG,GAAV,CAAc,+BAA+B,QAA/B,GAA0C,KAAKjB,QAAL,GAAgBkB,MAAxE,CAAP;AACD;;;sCAEa;AACZ,iBAAO,KAAKJ,IAAL,WAAiB,+BAA+B,QAA/B,GAA0C,KAAKd,QAAL,GAAgBkB,MAA3E,CAAP;AACD;;;;;;;uBAzEUc,W,EAAW,uH,EAAA,8G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVnC,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACVxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaasD,c;;;AA+BX,8BAAoBrC,IAApB,EAA8CjC,WAA9C,EAAwE;AAAA;;AAApD,aAAAiC,IAAA,GAAAA,IAAA;AAA0B,aAAAjC,WAAA,GAAAA,WAAA;AA7B9C,aAAAkC,OAAA,GAAkB,yEAAYC,MAAZ,GAAqB,UAAvC;AAEA,aAAAoC,eAAA,GAAyB,EAAzB;AACA,aAAAC,eAAA,GAAkB,IAAI,oDAAJ,CAA4B,CAA5B,CAAlB;AAEA,aAAAC,cAAA,GAAiB,IAAI,4CAAJ,EAAjB;AAEA,aAAAC,YAAA,GAAe,IAAI,4CAAJ,EAAf;AACA,aAAAC,aAAA,GAAgB,IAAI,4CAAJ,EAAhB;AACA,aAAAC,YAAA,GAAe,IAAI,4CAAJ,EAAf;AACA,aAAAC,aAAA,GAAgB,IAAI,4CAAJ,EAAhB;AACA,aAAAC,YAAA,GAAe,IAAI,4CAAJ,EAAf;AACA,aAAAC,YAAA,GAAe,IAAI,4CAAJ,EAAf;AACA,aAAAC,cAAA,GAAiB,IAAI,4CAAJ,EAAjB;AACA,aAAAC,cAAA,GAAiB,IAAI,4CAAJ,EAAjB;AACA,aAAAC,aAAA,GAAgB,IAAI,4CAAJ,EAAhB;AACA,aAAAC,YAAA,GAAe,IAAI,4CAAJ,EAAf;AAEA,aAAAC,aAAA,GAAwC;AAAEC,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAxC;AACA,aAAAC,cAAA,GAAyC;AAAEH,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAzC;AACA,aAAAE,aAAA,GAAwC;AAAEJ,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAxC;AACA,aAAAG,cAAA,GAAyC;AAAEL,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAzC;AACA,aAAAI,aAAA,GAAwC;AAAEN,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAxC;AACA,aAAAK,aAAA,GAAwC;AAAEP,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAxC;AACA,aAAAM,eAAA,GAA0C;AAAER,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAA1C;AACA,aAAAO,eAAA,GAA0C;AAAET,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAA1C;AACA,aAAAQ,cAAA,GAAyC;AAAEV,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAzC;AACA,aAAAS,aAAA,GAAwC;AAAEX,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAxC;AAGC;;;;0CAIiB;AAAA;;AAChB,iBAAO,KAAKtD,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAAzD,EAAiE4D,SAAjE,CAA2E,UAACX,QAAD,EAAwC;AACxH,gBAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpBlE,qBAAO,CAACC,GAAR,CAAYiE,QAAZ;AACA,kBAAIY,eAAe,GAAG,CAAtB;AACA,kBAAIC,UAAU,GAAmB,EAAjC;AACA,oBAAI,CAACf,aAAL,CAAmBE,QAAnB,GAA8BA,QAAQ,CAAC,CAAD,CAAR,CAAY,UAAZ,CAA9B;AACA,oBAAI,CAACF,aAAL,CAAmBG,UAAnB,GAAgCD,QAAQ,CAAC,CAAD,CAAR,CAAY,YAAZ,CAAhC;AACA,oBAAI,CAACF,aAAL,CAAmBC,YAAnB,GAAkCC,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,CAAlC;;AACA,oBAAI,CAACZ,YAAL,CAAkB9D,IAAlB,CAAuB,MAAI,CAACwE,aAAL,CAAmBE,QAA1C;;AACAY,6BAAe;AACfC,wBAAU,CAACC,IAAX,CAAgB;AAAE/G,kBAAE,EAAE,MAAI,CAAC+F,aAAL,CAAmBG,UAAzB;AAAqCc,qBAAK,EAAE,MAAI,CAACjB,aAAL,CAAmBC;AAA/D,eAAhB;AAEA,oBAAI,CAACG,cAAL,CAAoBF,QAApB,GAA+BA,QAAQ,CAAC,CAAD,CAAR,CAAY,UAAZ,CAA/B;AACA,oBAAI,CAACE,cAAL,CAAoBD,UAApB,GAAiCD,QAAQ,CAAC,CAAD,CAAR,CAAY,YAAZ,CAAjC;AACA,oBAAI,CAACE,cAAL,CAAoBH,YAApB,GAAmCC,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,CAAnC;;AACA,oBAAI,CAACX,aAAL,CAAmB/D,IAAnB,CAAwB,MAAI,CAAC4E,cAAL,CAAoBF,QAA5C;;AACAY,6BAAe;AACfC,wBAAU,CAACC,IAAX,CAAgB;AAAE/G,kBAAE,EAAE,MAAI,CAACmG,cAAL,CAAoBD,UAA1B;AAAsCc,qBAAK,EAAE,MAAI,CAACb,cAAL,CAAoBH;AAAjE,eAAhB;AAEA,oBAAI,CAACI,aAAL,CAAmBH,QAAnB,GAA8BA,QAAQ,CAAC,CAAD,CAAR,CAAY,UAAZ,CAA9B;AACA,oBAAI,CAACG,aAAL,CAAmBF,UAAnB,GAAgCD,QAAQ,CAAC,CAAD,CAAR,CAAY,YAAZ,CAAhC;AACA,oBAAI,CAACG,aAAL,CAAmBJ,YAAnB,GAAkCC,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,CAAlC;;AACA,oBAAI,CAACV,YAAL,CAAkBhE,IAAlB,CAAuB,MAAI,CAAC6E,aAAL,CAAmBH,QAA1C;;AACAY,6BAAe;AACfC,wBAAU,CAACC,IAAX,CAAgB;AAAE/G,kBAAE,EAAE,MAAI,CAACoG,aAAL,CAAmBF,UAAzB;AAAqCc,qBAAK,EAAE,MAAI,CAACZ,aAAL,CAAmBJ;AAA/D,eAAhB;AAEA,oBAAI,CAACK,cAAL,CAAoBJ,QAApB,GAA+BA,QAAQ,CAAC,CAAD,CAAR,CAAY,UAAZ,CAA/B;AACA,oBAAI,CAACI,cAAL,CAAoBH,UAApB,GAAiCD,QAAQ,CAAC,CAAD,CAAR,CAAY,YAAZ,CAAjC;AACA,oBAAI,CAACI,cAAL,CAAoBL,YAApB,GAAmCC,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,CAAnC;;AACA,oBAAI,CAACT,aAAL,CAAmBjE,IAAnB,CAAwB,MAAI,CAAC8E,cAAL,CAAoBJ,QAA5C;;AACAY,6BAAe;AACfC,wBAAU,CAACC,IAAX,CAAgB;AAAE/G,kBAAE,EAAE,MAAI,CAACqG,cAAL,CAAoBH,UAA1B;AAAsCc,qBAAK,EAAE,MAAI,CAACX,cAAL,CAAoBL;AAAjE,eAAhB;AAEA,oBAAI,CAACM,aAAL,CAAmBL,QAAnB,GAA8BA,QAAQ,CAAC,CAAD,CAAR,CAAY,UAAZ,CAA9B;AACA,oBAAI,CAACK,aAAL,CAAmBJ,UAAnB,GAAgCD,QAAQ,CAAC,CAAD,CAAR,CAAY,YAAZ,CAAhC;AACA,oBAAI,CAACK,aAAL,CAAmBN,YAAnB,GAAkCC,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,CAAlC;;AACA,oBAAI,CAACR,YAAL,CAAkBlE,IAAlB,CAAuB,MAAI,CAAC+E,aAAL,CAAmBL,QAA1C;;AACAY,6BAAe;AACfC,wBAAU,CAACC,IAAX,CAAgB;AAAE/G,kBAAE,EAAE,MAAI,CAACsG,aAAL,CAAmBJ,UAAzB;AAAqCc,qBAAK,EAAE,MAAI,CAACV,aAAL,CAAmBN;AAA/D,eAAhB;;AAEA,kBAAIa,eAAe,GAAGZ,QAAQ,CAACgB,MAA/B,EAAuC;AACrC,sBAAI,CAACV,aAAL,CAAmBN,QAAnB,GAA8BA,QAAQ,CAAC,CAAD,CAAR,CAAY,UAAZ,CAA9B;AACA,sBAAI,CAACM,aAAL,CAAmBL,UAAnB,GAAgCD,QAAQ,CAAC,CAAD,CAAR,CAAY,YAAZ,CAAhC;AACA,sBAAI,CAACM,aAAL,CAAmBP,YAAnB,GAAkCC,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,CAAlC;;AACA,sBAAI,CAACP,YAAL,CAAkBnE,IAAlB,CAAuB,MAAI,CAACgF,aAAL,CAAmBN,QAA1C;;AACAY,+BAAe;AACfC,0BAAU,CAACC,IAAX,CAAgB;AAAE/G,oBAAE,EAAE,MAAI,CAACuG,aAAL,CAAmBL,UAAzB;AAAqCc,uBAAK,EAAE,MAAI,CAACT,aAAL,CAAmBP;AAA/D,iBAAhB;AACD;;AACD,kBAAIa,eAAe,GAAGZ,QAAQ,CAACgB,MAA/B,EAAuC;AACrC,sBAAI,CAACT,eAAL,CAAqBP,QAArB,GAAgCA,QAAQ,CAAC,CAAD,CAAR,CAAY,UAAZ,CAAhC;AACA,sBAAI,CAACO,eAAL,CAAqBN,UAArB,GAAkCD,QAAQ,CAAC,CAAD,CAAR,CAAY,YAAZ,CAAlC;AACA,sBAAI,CAACO,eAAL,CAAqBR,YAArB,GAAoCC,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,CAApC;;AACA,sBAAI,CAACN,cAAL,CAAoBpE,IAApB,CAAyB,MAAI,CAACiF,eAAL,CAAqBP,QAA9C;;AACAY,+BAAe;AACfC,0BAAU,CAACC,IAAX,CAAgB;AAAE/G,oBAAE,EAAE,MAAI,CAACwG,eAAL,CAAqBN,UAA3B;AAAuCc,uBAAK,EAAE,MAAI,CAACR,eAAL,CAAqBR;AAAnE,iBAAhB;AACD;;AACD,kBAAIa,eAAe,GAAGZ,QAAQ,CAACgB,MAA/B,EAAuC;AACrC,sBAAI,CAACR,eAAL,CAAqBR,QAArB,GAAgCA,QAAQ,CAAC,CAAD,CAAR,CAAY,UAAZ,CAAhC;AACA,sBAAI,CAACQ,eAAL,CAAqBP,UAArB,GAAkCD,QAAQ,CAAC,CAAD,CAAR,CAAY,YAAZ,CAAlC;AACA,sBAAI,CAACQ,eAAL,CAAqBT,YAArB,GAAoCC,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,CAApC;;AACA,sBAAI,CAACL,cAAL,CAAoBrE,IAApB,CAAyB,MAAI,CAACkF,eAAL,CAAqBR,QAA9C;;AACAY,+BAAe;AACfC,0BAAU,CAACC,IAAX,CAAgB;AAAE/G,oBAAE,EAAE,MAAI,CAACyG,eAAL,CAAqBP,UAA3B;AAAuCc,uBAAK,EAAE,MAAI,CAACP,eAAL,CAAqBT;AAAnE,iBAAhB;AACD;;AACD,kBAAIa,eAAe,GAAGZ,QAAQ,CAACgB,MAA/B,EAAuC;AACrC,sBAAI,CAACP,cAAL,CAAoBT,QAApB,GAA+BA,QAAQ,CAAC,CAAD,CAAR,CAAY,UAAZ,CAA/B;AACA,sBAAI,CAACS,cAAL,CAAoBR,UAApB,GAAiCD,QAAQ,CAAC,CAAD,CAAR,CAAY,YAAZ,CAAjC;AACA,sBAAI,CAACS,cAAL,CAAoBV,YAApB,GAAmCC,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,CAAnC;;AACA,sBAAI,CAACJ,aAAL,CAAmBtE,IAAnB,CAAwB,MAAI,CAACmF,cAAL,CAAoBT,QAA5C;;AACAY,+BAAe;AACfC,0BAAU,CAACC,IAAX,CAAgB;AAAE/G,oBAAE,EAAE,MAAI,CAAC0G,cAAL,CAAoBR,UAA1B;AAAsCc,uBAAK,EAAE,MAAI,CAACN,cAAL,CAAoBV;AAAjE,iBAAhB;AACD;;AACD,kBAAIa,eAAe,GAAGZ,QAAQ,CAACgB,MAA/B,EAAuC;AACrC,sBAAI,CAACN,aAAL,CAAmBV,QAAnB,GAA8BA,QAAQ,CAAC,CAAD,CAAR,CAAY,UAAZ,CAA9B;AACA,sBAAI,CAACU,aAAL,CAAmBT,UAAnB,GAAgCD,QAAQ,CAAC,CAAD,CAAR,CAAY,YAAZ,CAAhC;AACA,sBAAI,CAACU,aAAL,CAAmBX,YAAnB,GAAkCC,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAZ,CAAlC;;AACA,sBAAI,CAACH,YAAL,CAAkBvE,IAAlB,CAAuB,MAAI,CAACoF,aAAL,CAAmBV,QAA1C;;AACAY,+BAAe;AACfC,0BAAU,CAACC,IAAX,CAAgB;AAAE/G,oBAAE,EAAE,MAAI,CAAC2G,aAAL,CAAmBT,UAAzB;AAAqCc,uBAAK,EAAE,MAAI,CAACL,aAAL,CAAmBX;AAA/D,iBAAhB;AACD;;AACD,oBAAI,CAACZ,cAAL,CAAoB7D,IAApB,CAAyBuF,UAAzB;AACD;AACF,WAlFM,CAAP;AAmFD;;;4CAEmBI,K,EAAe;AACjC,iBAAO,KAAKtE,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,oBAApD,GAA2EkE,KAAzF,CAAP;AACD,S,CAED;AACA;AACA;AAEA;;;;sCACcC,O,EAAkB;AAAA;;AAC9B,iBAAO,KAAKvE,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,MAAnE,EAA2EmE,OAA3E,EAAoF3C,IAApF,CAAyF,2DAAI,UAAAC,QAAQ,EAAI;AAC9G,gBAAI2C,eAAe,GAAoB3C,QAAQ,CAAC,SAAD,CAA/C;;AACE,oBAAQ,CAAE0C,OAAO,CAACE,iBAAlB;AACA,mBAAK,MAAI,CAACtB,aAAL,CAAmBG,UAAxB;AACE,sBAAI,CAACH,aAAL,CAAmBE,QAAnB,CAA4Bc,IAA5B,CAAiCK,eAAjC;;AACA,sBAAI,CAAC/B,YAAL,CAAkB9D,IAAlB,CAAuB,MAAI,CAACwE,aAAL,CAAmBE,QAA1C;;AACA;;AACF,mBAAK,MAAI,CAACE,cAAL,CAAoBD,UAAzB;AACE,sBAAI,CAACC,cAAL,CAAoBF,QAApB,CAA6Bc,IAA7B,CAAkCK,eAAlC;;AACA,sBAAI,CAAC9B,aAAL,CAAmB/D,IAAnB,CAAwB,MAAI,CAAC4E,cAAL,CAAoBF,QAA5C;;AACA;;AACF,mBAAK,MAAI,CAACG,aAAL,CAAmBF,UAAxB;AACE,sBAAI,CAACE,aAAL,CAAmBH,QAAnB,CAA4Bc,IAA5B,CAAiCK,eAAjC;;AACA,sBAAI,CAAC7B,YAAL,CAAkBhE,IAAlB,CAAuB,MAAI,CAAC6E,aAAL,CAAmBH,QAA1C;;AACA;;AACF,mBAAK,MAAI,CAACI,cAAL,CAAoBH,UAAzB;AACE,sBAAI,CAACG,cAAL,CAAoBJ,QAApB,CAA6Bc,IAA7B,CAAkCK,eAAlC;;AACA,sBAAI,CAAC5B,aAAL,CAAmBjE,IAAnB,CAAwB,MAAI,CAAC8E,cAAL,CAAoBJ,QAA5C;;AACA;;AACF,mBAAK,MAAI,CAACK,aAAL,CAAmBJ,UAAxB;AACE,sBAAI,CAACI,aAAL,CAAmBL,QAAnB,CAA4Bc,IAA5B,CAAiCK,eAAjC;;AACA,sBAAI,CAAC3B,YAAL,CAAkBlE,IAAlB,CAAuB,MAAI,CAAC+E,aAAL,CAAmBL,QAA1C;;AACA;;AACA,mBAAK,MAAI,CAACM,aAAL,CAAmBL,UAAxB;AACA,sBAAI,CAACK,aAAL,CAAmBN,QAAnB,CAA4Bc,IAA5B,CAAiCK,eAAjC;;AACA,sBAAI,CAAC1B,YAAL,CAAkBnE,IAAlB,CAAuB,MAAI,CAACgF,aAAL,CAAmBN,QAA1C;;AACA;;AACA,mBAAK,MAAI,CAACO,eAAL,CAAqBN,UAA1B;AACA,sBAAI,CAACM,eAAL,CAAqBP,QAArB,CAA8Bc,IAA9B,CAAmCK,eAAnC;;AACA,sBAAI,CAACzB,cAAL,CAAoBpE,IAApB,CAAyB,MAAI,CAACiF,eAAL,CAAqBP,QAA9C;;AACA;;AACA,mBAAK,MAAI,CAACQ,eAAL,CAAqBP,UAA1B;AACA,sBAAI,CAACO,eAAL,CAAqBR,QAArB,CAA8Bc,IAA9B,CAAmCK,eAAnC;;AACA,sBAAI,CAACxB,cAAL,CAAoBrE,IAApB,CAAyB,MAAI,CAACkF,eAAL,CAAqBR,QAA9C;;AACA;;AACA,mBAAK,MAAI,CAACS,cAAL,CAAoBR,UAAzB;AACA,sBAAI,CAACQ,cAAL,CAAoBT,QAApB,CAA6Bc,IAA7B,CAAkCK,eAAlC;;AACA,sBAAI,CAACvB,aAAL,CAAmBtE,IAAnB,CAAwB,MAAI,CAACmF,cAAL,CAAoBT,QAA5C;;AACA;;AACA,mBAAK,MAAI,CAACU,aAAL,CAAmBT,UAAxB;AACA,sBAAI,CAACS,aAAL,CAAmBV,QAAnB,CAA4Bc,IAA5B,CAAiCK,eAAjC;;AACA,sBAAI,CAACtB,YAAL,CAAkBvE,IAAlB,CAAuB,MAAI,CAACoF,aAAL,CAAmBV,QAA1C;;AACA;AAxCF;;AA0CF,kBAAI,CAACd,eAAL,CAAqB5D,IAArB,CAA0B,MAAI,CAAC4D,eAAL,CAAqBmC,QAArB,KAAkCF,eAAe,CAACG,UAA5E;;AACA,mBAAO9C,QAAP;AACD,WA9C+F,CAAzF,CAAP;AA+CD;;;8CAEqB;AACpB,iBAAO,KAAK7B,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,qBAAlE,CAAP;AACD;;;8CAGqBkD,U,EAAoB;AACxC,iBAAO,KAAKtD,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,8BAApD,GAAqFkD,UAAnG,CAAP;AACD;;;4CAGmBA,U,EAAoB;AACtC,iBAAO,KAAKtD,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,uBAApD,GAA8EkD,UAA5F,CAAP;AACD;;;0CAEiBlG,E,EAAY;AAC5B,iBAAO,KAAK4C,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,0BAApD,GAAiFhD,EAA/F,CAAP;AACD;;;wCAEeA,E,EAAY;AAC1B,iBAAO,KAAK4C,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,mBAApD,GAA0EhD,EAAxF,CAAP;AACD;;;wCAGeA,E,EAAY;AAC1B,iBAAO,KAAK4C,IAAL,WAAiB,KAAKC,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,iBAApD,GAAwEhD,EAAzF,EAA6F;AAAEmD,wBAAY,EAAE;AAAhB,WAA7F,CAAP;AACD;;;sCAEaC,a,EAAgC;AAC5C,iBAAO,KAAKR,IAAL,CAAUS,GAAV,CAAc,KAAKR,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,eAApD,GAAsEI,aAAa,CAACpD,EAAlG,EAAsGoD,aAAtG,CAAP;AACD;;;sCAEaH,M,EAAgB;AAAA;;AAC5B,iBAAO,KAAKL,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAeI,MAAf,GAAwB,kBAAtC,EAA0DuB,IAA1D,CAA+D,2DAAI,UAAAgD,IAAI,EAAI;AAChF,kBAAI,CAACrC,eAAL,CAAqB5D,IAArB,CAA0BiG,IAAI,CAAC,iBAAD,CAA9B;;AACA,mBAAOA,IAAP;AACD,WAHqE,CAA/D,CAAP;AAID;;;;;;;uBAzNUvC,c,EAAc,uH,EAAA,iH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVtD,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;;;ACb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa8F,a;;;AAIX,6BAAoB7E,IAApB,EAA8CjC,WAA9C,EAAwE;AAAA;;AAApD,aAAAiC,IAAA,GAAAA,IAAA;AAA0B,aAAAjC,WAAA,GAAAA,WAAA;AAF9C,aAAAkC,OAAA,GAAkB,yEAAYC,MAAZ,GAAqB,SAAvC;AAE2E;;;;uCAG/D;AACV,iBAAO,KAAKF,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,aAAlE,CAAP;AACD;;;qCAEY0E,K,EAAa;AACxB,iBAAO,KAAK9E,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,UAApD,GAAiE0E,KAAhF,EAAuF,EAAvF,EAA2F;AAACvE,wBAAY,EAAC;AAAd,WAA3F,CAAP;AACD;;;+BAEMwE,Q,EAAgB;AACrB,iBAAO,KAAK/E,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,UAApD,GAAiE2E,QAAhF,EAA0F,EAA1F,EAA8F;AAACxE,wBAAY,EAAC;AAAd,WAA9F,CAAP;AACD;;;gCAGOwE,Q,EAAgB;AACtB,iBAAO,KAAK/E,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,WAApD,GAAkE2E,QAAjF,EAA2F,EAA3F,EAA+F;AAACxE,wBAAY,EAAC;AAAd,WAA/F,CAAP;AACD;;;;;;;uBAtBUsE,a,EAAa,uH,EAAA,iH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACV9F,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;;;ACR1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaiG,mB;;;AAEX,mCAAoBhF,IAApB,EAA8CjC,WAA9C,EAAwE;AAAA;;AAApD,aAAAiC,IAAA,GAAAA,IAAA;AAA0B,aAAAjC,WAAA,GAAAA,WAAA;AAE9C,aAAAkC,OAAA,GAAkB,yEAAYC,MAAZ,GAAqB,eAAvC;AAF2E;;;;2CAIxD;AACjB,iBAAO,KAAKF,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,mBAAlE,CAAP;AACD;;;8CAGqB;AACpB,iBAAO,KAAKJ,IAAL,WAAiB,KAAKC,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,qBAArE,CAAP;AACD;;;;;;;uBAbU4E,mB,EAAmB,uH,EAAA,iH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVjG,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACRhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQakG,c;;;AAIX,8BAAoBjF,IAApB,EAA8CjC,WAA9C,EAAwE;AAAA;;AAApD,aAAAiC,IAAA,GAAAA,IAAA;AAA0B,aAAAjC,WAAA,GAAAA,WAAA;AAF9C,aAAAkC,OAAA,GAAkB,yEAAYC,MAAZ,GAAqB,UAAvC;AAE2E;;;;+CAEpD4E,K,EAAa;AAClC,iBAAO,KAAK9E,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,WAApD,GAAkE0E,KAAjF,EAAwF,EAAxF,EAA4F;AAACvE,wBAAY,EAAC;AAAd,WAA5F,CAAP;AACD;;;oCAEWF,M,EAAc;AACxB,iBAAO,KAAKL,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAeI,MAAf,GAAwB,cAAtC,CAAP;AACD;;;sCAEayE,K,EAAezE,M,EAAc;AACzC,iBAAO,KAAKL,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAeI,MAAf,GAAwB,iBAAxB,GAA4CyE,KAA3D,EAAkE,EAAlE,EAAsE;AAACvE,wBAAY,EAAC;AAAd,WAAtE,CAAP;AACD;;;uCAEcuE,K,EAAa;AAC1B,iBAAO,KAAK9E,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,WAApD,GAAkE0E,KAAjF,EAAwF,EAAxF,EAA4F;AAACvE,wBAAY,EAAC;AAAd,WAA5F,CAAP;AACD;;;+BAEG;AACF,iBAAO,KAAKP,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,OAAnE,EAA4E,EAA5E,EAAgF;AAACG,wBAAY,EAAC;AAAd,WAAhF,CAAP;AACD;;;;;;;uBAxBU0E,c,EAAc,uH,EAAA,iH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVlG,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWamG,a;;;AAEX,6BAAoBlF,IAApB,EAA8CjC,WAA9C,EAAwE;AAAA;;AAApD,aAAAiC,IAAA,GAAAA,IAAA;AAA0B,aAAAjC,WAAA,GAAAA,WAAA;AAE9C,aAAAkC,OAAA,GAAkB,yEAAYC,MAAZ,GAAqB,SAAvC;AAEA,aAAAiF,gBAAA,GAAmC,EAAnC;AAIA,aAAAC,iBAAA,GAAoC,EAApC;AAPC;;;;2CASkB;AACjB,iBAAO,KAAKpF,IAAL,CAAUG,GAAV,CAAc,yEAAYD,MAAZ,GAAqB,UAArB,GAAkC,KAAKnC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA9D,GAAuE,mBAArF,CAAP;AACD;;;wCAEeiF,c,EAAwB;AACtC,iBAAO,KAAKrF,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,eAAnE,EAAoFiF,cAApF,CAAP;AACD;;;2CAEkB;AAAA;;AACjB,eAAKrF,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,mBAAlE,EAAuF4D,SAAvF,CAAiG,UAACsB,aAAD,EAA2B;AAC1H,kBAAI,CAACA,aAAL,GAAqBA,aAArB;AACD,WAFD;AAGD;;;+CAGsB;AACrB,iBAAO,KAAKtF,IAAL,CAAUG,GAAV,CAA8B,KAAKF,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,sBAAlF,CAAP;AACD;;;mCAGUmF,M,EAAgB;AACzB,iBAAO,KAAKvF,IAAL,CAAUS,GAAV,CAAc,KAAKR,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,aAAlE,EAAiFmF,MAAjF,EAAyF;AAAEhF,wBAAY,EAAE;AAAhB,WAAzF,CAAP;AACD;;;8CAGqB2D,U,EAAsB;AAC1C,iBAAO,KAAKlE,IAAL,CAAUM,IAAV,CAAe,KAAKL,OAAL,GAAe,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAA3C,GAAoD,gBAAnE,EAAqF8D,UAArF,CAAP;AACD;;;;;;;uBAvCUgB,a,EAAa,uH,EAAA,iH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVnG,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;;;ACX1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgCwC;;AAAuC;;AAAS;;;;;;AAChD;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAY;;;;;;AACnD;;AAAwC;;;;AACxC;;;;;;AADwC;;AAAA;;;;;;AAMxC;;AAAuC;;AAAM;;;;;;AAC7C;;AAAwC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAQ;;;;;;AAMvC;;AAEiB;;AAA+B;;;;;;AANpD;;AACI;;AAAwC;;AAA0B;;AAClE;;AAAyC;;AACJ;;AACrC;;AAGJ;;;;;;AAFQ;;AAAA;;;;;;AANZ;;AACI;;AAQJ;;;;;;AARS;;AAAA;;;;;;AAWb;;;;;;AACA;;;;;;AAkBhB;;AAAuC;;AAAQ;;;;;;AAC/C;;AAAwC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGxC;;AAAuC;;AAAS;;;;;;AAChD;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAGxC;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAGxC;;AAAuC;;AAAE;;;;;;AACzC;;AAAwC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGxC;;AAAuC;;AAAY;;;;;;AACnD;;AAAwC;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AAGxC;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;;;AAA0C;;;;;;AAA1C;;AAAA;;;;;;AAGxC;;AAAuC;;AAAQ;;;;;;;;AAC/C;;AACI;;AAAG;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AACI;;AACJ;;AACJ;;AACA;;AAAG;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AAEJ;;;;;;AACA;;;;;;;;QD3GHyG,oB;;;AAEX;AACA,oCAAoBC,UAApB,EACSC,MADT,EAEU7E,QAFV,EAGU8E,YAHV,EAGsC;AAAA;;AAHlB,aAAAF,UAAA,GAAAA,UAAA;AACX,aAAAC,MAAA,GAAAA,MAAA;AACC,aAAA7E,QAAA,GAAAA,QAAA;AACA,aAAA8E,YAAA,GAAAA,YAAA;AAEV,aAAAC,kBAAA,GAA+B,CAAC,cAAD,EAAiB,UAAjB,EAA6B,UAA7B,EAAyC,YAAzC,EAAuD,oBAAvD,EAA6E,cAA7E,EAA6F,SAA7F,CAA/B;AACA,aAAAC,eAAA,GAA4B,CAAC,UAAD,EAAa,YAAb,EAA2B,WAA3B,EAAwC,SAAxC,CAA5B;AACA,aAAAxC,QAAA,GAAW,IAAI,0EAAJ,EAAX;AACA,aAAAyC,KAAA,GAAQ,IAAI,0EAAJ,EAAR;AALyC;;;;mCASjC;AAAA;;AACN,eAAKL,UAAL,CAAgBM,cAAhB,GAAiC/B,SAAjC,CAA2C,UAACX,QAAD,EAAsC;AAC/E,kBAAI,CAACA,QAAL,CAAcuB,IAAd,GAAqBvB,QAArB;AACA,kBAAI,CAACA,QAAL,CAAc2C,SAAd,GAA0B,MAAI,CAACC,gBAA/B;AACD,WAHD;AAKA,eAAKR,UAAL,CAAgBS,QAAhB,GAA2BlC,SAA3B,CAAqC,UAACmC,aAAD,EAAmC;AACtE,kBAAI,CAACL,KAAL,CAAWlB,IAAX,GAAkBuB,aAAlB;AACD,WAFD;AAID;;;mCAEU9F,M,EAAgB+F,Q,EAAkB;AAAA;;AAC3C,eAAKX,UAAL,CAAgBY,UAAhB,CAA2BhG,MAA3B,EAAmC2D,SAAnC,CAA6C,UAAAnC,QAAQ,EAAI;AACvD,kBAAI,CAAChB,QAAL,CAAcE,OAAd,CAAsBc,QAAtB;;AACA,gBAAIyE,EAAE,GAASC,QAAQ,CAACC,cAAT,CAAwBJ,QAAQ,CAACK,QAAT,EAAxB,CAAf;AACAH,cAAE,CAACI,MAAH,CAAUN,QAAV;AACD,WAJD,EAIG,UAAApF,KAAK,EAAI;AACV,kBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,WAND;AAOD;;;yCAEgB;AACf,cAAM2F,SAAS,GAAG,KAAKjB,MAAL,CAAYkB,IAAZ,CAAiB,2GAAjB,CAAlB;AACAD,mBAAS,CAACE,WAAV,GAAwB7C,SAAxB,CAAkC,UAAA8C,MAAM,EAAI,CAC3C,CADD;AAED;;;mCAEU1J,E,EAAYgJ,Q,EAAgB;AAAA;;AACrC,cAAIW,GAAG,GAAG,KAAK1D,QAAL,CAAcuB,IAAd,CAAmBoC,IAAnB,CAAwB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC7J,EAAF,KAASA,EAAb;AAAA,WAAzB,CAAV;AACA2J,aAAG,CAACG,OAAJ,GAAc,IAAd;AACA,cAAMP,SAAS,GAAG,KAAKjB,MAAL,CAAYkB,IAAZ,CAAiB,0HAAjB,EAA4C;AAC5DO,iBAAK,EAAE,OADqD;AAE5DvC,gBAAI,EAAEmC;AAFsD,WAA5C,CAAlB;AAKAJ,mBAAS,CAACE,WAAV,GAAwB7C,SAAxB,CAAkC,UAAA8C,MAAM,EAAI;AAC1C,gBAAIA,MAAM,KAAKM,SAAX,IAAwBN,MAAM,KAAK,IAAvC,EAA6C;AAC3C,oBAAI,CAACzD,QAAL,CAAcuB,IAAd,CAAmBwB,QAAnB,EAA6BiB,YAA7B,GAA4CP,MAAM,CAAC,cAAD,CAAlD;AACA,oBAAI,CAACzD,QAAL,CAAcuB,IAAd,CAAmBwB,QAAnB,EAA6BkB,kBAA7B,GAAkDR,MAAM,CAAC,oBAAD,CAAxD;AACA,oBAAI,CAACzD,QAAL,CAAcuB,IAAd,CAAmBwB,QAAnB,EAA6BzB,UAA7B,GAA0CmC,MAAM,CAAC,YAAD,CAAhD;AACA,oBAAI,CAACzD,QAAL,CAAcuB,IAAd,CAAmBwB,QAAnB,EAA6BmB,YAA7B,GAA4CT,MAAM,CAAC,cAAD,CAAlD;AACD;AACF,WAPD;AAQD;;;sCAEa1J,E,EAAYgJ,Q,EAAkB;AAAA;;AAC1C,eAAKT,YAAL,CAAkB6B,eAAlB,CAAkCpK,EAAlC,EAAsC4G,SAAtC,CAAgD,UAACnC,QAAD,EAAmB;AACjE,kBAAI,CAAChB,QAAL,CAAcE,OAAd,CAAsBc,QAAtB;;AACA,kBAAI,CAACwB,QAAL,CAAcuB,IAAd,CAAmB6C,MAAnB,CAA0BrB,QAA1B,EAAoC,CAApC;;AACA,kBAAI,CAAC/C,QAAL,CAAcuB,IAAd,GAAqB,MAAI,CAACvB,QAAL,CAAcuB,IAAnC;AACD,WAJD,EAIG,UAAA5D,KAAK,EAAI;AACV,kBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,WAND;AAOD;;;2CAEkB0G,M,EAAQ;AAAA;;AACzB,eAAKjC,UAAL,CAAgBS,QAAhB,GAA2BlC,SAA3B,CAAqC,UAACmC,aAAD,EAAmC;AACtE,mBAAI,CAACL,KAAL,CAAWlB,IAAX,GAAkBuB,aAAlB;AACD,WAFD;AAGD;;;;;;;uBA3EUX,oB,EAAoB,4I,EAAA,mI,EAAA,kJ,EAAA,4I;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;;;;;;;;;;;;;;;ACfjC;;AACI;;AACI;;AAAQ;AAAA,mBAAS,IAAAmC,cAAA,EAAT;AAAyB,WAAzB;;AAA6D;;AAAY;;AACrF;;AACJ;;AACA;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAyB;;AAAqB;;AAClD;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAGI;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AAEJ;;AAGA;;AACI;;AACA;;AACJ;;AAGA;;AACI;;AACA;;AAUJ;;AAEA;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAoB;AAAA,mBAAa,IAAAC,kBAAA,QAAb;AAAuC,WAAvC;;AAAyC;;AACjE;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AAYJ;;AACA;;AACA;;AACJ;;AAEA;;AAEJ;;AACJ;;AACJ;;;;AArGsE;;AAAA;;AAoCf;;AAAA;;AACP;;AAAA;;AAgBE;;AAAA;;AAwCf;;AAAA;;AACP;;AAAA;;AAGa;;AAAA,6JAAwB,cAAxB,EAAwB,IAAxB;;;;;;;;;;sED9G5BpC,oB,EAAoB;cALhC,uDAKgC;eALtB;AACThH,kBAAQ,EAAE,kBADD;AAETqJ,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;gBAc9B,uD;iBAAU,c;;;;;;;;;;;;;;;;;;;;AE7Bb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,Y;;;AAGX,4BAAoBhK,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAEpB,aAAAsB,SAAA,GAAY,KAAZ;AACA,aAAA2I,YAAA,GAAe,KAAf;AAHiD;;;;mCAKzC;AAAA;;AACN,eAAKjK,WAAL,CAAiBsB,SAAjB,CAA2B2E,SAA3B,CAAqC,UAAAiE,GAAG,EAAI;AAC1C,mBAAI,CAAC5I,SAAL,GAAiB4I,GAAjB;AACD,WAFD;AAGA,eAAKlK,WAAL,CAAiBqD,UAAjB,CAA4B4C,SAA5B,CAAsC,UAAAiE,GAAG,EAAI;AAC3C,mBAAI,CAACD,YAAL,GAAoBC,GAApB;AACD,WAFD;AAGA9I,iBAAO,CAACC,GAAR,CAAY,KAAKC,SAAjB;AACAF,iBAAO,CAACC,GAAR,CAAY,KAAK4I,YAAjB;AAGD;;;;;;;uBAnBUD,Y,EAAY,mI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACRzB;;;;;;;;;sEDQaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTvJ,kBAAQ,EAAE,UADD;AAETqJ,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AERzoDO,aAASI,WAAT,GAAuB;AAC5B,aAAO5G,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACD;;QAwEY4G,S;;;;;YAAAA,S;AAAS,kBAFR,4DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAjCJ,CACP,uEADO,EAEP,6FAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,qEALO,EAMP,2EANO,EAOP,uDAPO,EAQP,gEARO,EASP,wEATO,EAUP,0EAVO,EAWP,uEAXO,EAYP,4FAZO,EAaP,uEAbO,EAcP,+EAdO,EAeP,6EAAkBC,OAAlB,EAfO,EAgBP,6DAAaA,OAAb,CAAqB,kDAArB,CAhBO,EAkBP,6DAAUA,OAAV,CAAkB;AAChBC,cAAM,EAAE;AACNH,qBAAW,EAAEA,WADP;AAENI,4BAAkB,EAAE,CAAC,gBAAD,CAFd;AAGNC,2BAAiB,EAAE,CAAC,yBAAD;AAHb;AADQ,OAAlB,CAlBO,EA0BP,6FA1BO,EA4BP,mFA5BO,CAiCI;;;;0HAGFJ,S,EAAS;AAAA,uBApElB,4DAoEkB,EAnElB,gFAmEkB,EAlElB,oGAkEkB,EAjElB,yGAiEkB,EAhElB,wGAgEkB,EA/DlB,qGA+DkB,EA9DlB,mEA8DkB,EA7DlB,+GA6DkB,EA5DlB,wGA4DkB,EA3DlB,qGA2DkB,EA1DlB,wFA0DkB,EAzDlB,0GAyDkB,EAxDlB,gHAwDkB,EAvDlB,4GAuDkB,EAtDlB,2FAsDkB,EArDlB,uGAqDkB,EApDlB,sHAoDkB,EAnDlB,iIAmDkB,EAlDlB,mFAkDkB,EAjDlB,oHAiDkB,EAhDlB,+EAgDkB,EA/ClB,8FA+CkB,EA9ClB,gGA8CkB,EA7ClB,sEA6CkB,EA5ClB,8HA4CkB,EA3ClB,uGA2CkB,EA1ClB,0GA0CkB,EAzClB,iFAyCkB,EAxClB,iFAwCkB,EAvClB,8FAuCkB,EAtClB,8HAsCkB;AAtCW,kBAG7B,uEAH6B,EAI7B,6FAJ6B,EAK7B,0DAL6B,EAM7B,kEAN6B,EAO7B,qEAP6B,EAQ7B,2EAR6B,EAS7B,uDAT6B,EAU7B,gEAV6B,EAW7B,wEAX6B,EAY7B,0EAZ6B,EAa7B,uEAb6B,EAc7B,4FAd6B,EAe7B,uEAf6B,EAgB7B,+EAhB6B,EAgBX,4EAhBW,EAgBX,4DAhBW,EAgBX,4DAhBW,EA4B7B,6FA5B6B,EA8B7B,mFA9B6B;AAsCX,O;AARD,K;;;;;sEAQRA,S,EAAS;cAtErB,sDAsEqB;eAtEZ;AACRK,sBAAY,EAAE,CACZ,4DADY,EAEZ,gFAFY,EAGZ,oGAHY,EAIZ,yGAJY,EAKZ,wGALY,EAMZ,qGANY,EAOZ,mEAPY,EAQZ,+GARY,EASZ,wGATY,EAUZ,qGAVY,EAWZ,wFAXY,EAYZ,0GAZY,EAaZ,gHAbY,EAcZ,4GAdY,EAeZ,2FAfY,EAgBZ,uGAhBY,EAiBZ,sHAjBY,EAkBZ,iIAlBY,EAmBZ,mFAnBY,EAoBZ,oHApBY,EAqBZ,+EArBY,EAsBZ,8FAtBY,EAuBZ,gGAvBY,EAwBZ,sEAxBY,EAyBZ,8HAzBY,EA0BZ,uGA1BY,EA2BZ,0GA3BY,EA4BZ,iFA5BY,EA6BZ,iFA7BY,EA8BZ,8FA9BY,EA+BZ,8HA/BY,CADN;AAkCRC,iBAAO,EAAE,CACP,uEADO,EAEP,6FAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,qEALO,EAMP,2EANO,EAOP,uDAPO,EAQP,gEARO,EASP,wEATO,EAUP,0EAVO,EAWP,uEAXO,EAYP,4FAZO,EAaP,uEAbO,EAcP,+EAdO,EAeP,6EAAkBL,OAAlB,EAfO,EAgBP,6DAAaA,OAAb,CAAqB,kDAArB,CAhBO,EAkBP,6DAAUA,OAAV,CAAkB;AAChBC,kBAAM,EAAE;AACNH,yBAAW,EAAEA,WADP;AAENI,gCAAkB,EAAE,CAAC,gBAAD,CAFd;AAGNC,+BAAiB,EAAE,CAAC,yBAAD;AAHb;AADQ,WAAlB,CAlBO,EA0BP,6FA1BO,EA4BP,mFA5BO,CAlCD;AAgERG,yBAAe,EAAE,CACf,yGADe,CAhET;AAmERC,mBAAS,EAAE,EAnEH;AAoERC,mBAAS,EAAE,CAAC,4DAAD;AApEH,S;AAsEY,Q;;;;;;;;;;;;;;;;;;AC9HtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYwB;;AAAoE;;AAAkB;;;;;;AAAtC;;AAAoB;;AAAA;;;;;;AAGxE;;AAEI;;AACJ;;;;;;AAaA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AAaA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AAaA;;AAEI;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;QDhEPC,sB;;;AAMX,sCAAoBC,cAApB,EACUC,aADV,EAEUlI,QAFV,EAGS8F,SAHT,EAG0D;AAAA;;AAHtC,aAAAmC,cAAA,GAAAA,cAAA;AACV,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAlI,QAAA,GAAAA,QAAA;AACD,aAAA8F,SAAA,GAAAA,SAAA;AALT,aAAAnE,cAAA,GAAiC,EAAjC;AAK6D;;;;mCAErD;AAAA;;AACN,eAAKwG,cAAL,GAAsB,IAAI,wDAAJ,CAAc;AAClC,qBAAS,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAApB,CADyB;AAElC,oBAAQ,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWD,SAAX,CAAqB,CAArB,CAAD,EAA0B,0DAAWC,SAAX,CAAqB,EAArB,CAA1B,CAApB,CAF0B;AAGlC,wBAAY,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWF,QAAZ,CAApB,CAHsB;AAIlC,qBAAS,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWA,QAA/B;AAJyB,WAAd,CAAtB;;AAMA,cAAI,KAAKF,aAAL,CAAmB3D,iBAAnB,CAAqCf,MAArC,KAAgD,CAApD,EAAuD;AACrD,iBAAK0E,aAAL,CAAmBK,oBAAnB,GAA0CpF,SAA1C,CAAoD,UAACY,IAAD,EAA0B;AAC5E,qBAAI,CAACmE,aAAL,CAAmB3D,iBAAnB,GAAuCR,IAAvC;AACA,qBAAI,CAACpC,cAAL,GAAsB,OAAI,CAACuG,aAAL,CAAmB3D,iBAAzC;AACD,aAHD;AAID,WALD,MAOE,KAAK5C,cAAL,GAAsB,KAAKuG,aAAL,CAAmB3D,iBAAzC;AACH;;;wCAEe;AAAA;;AACdjG,iBAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,iBAAO,CAACC,GAAR,CAAY,KAAK4J,cAAL,CAAoBK,KAApB,CAA0B,UAA1B,CAAZ;;AAEA,cAAI,KAAKL,cAAL,CAAoBM,MAApB,IAA8B,IAAlC,EAAwC;AACtC,iBAAK/E,OAAL,GAAe;AACbE,+BAAiB,EAAE,KAAKuE,cAAL,CAAoBK,KAApB,CAA0B,UAA1B,CADN;AAEbhC,0BAAY,EAAE,KAAK2B,cAAL,CAAoBK,KAApB,CAA0B,OAA1B,CAFD;AAGb/B,gCAAkB,EAAE,KAAK0B,cAAL,CAAoBK,KAApB,CAA0B,MAA1B,CAHP;AAIb1E,wBAAU,EAAE,KAAKqE,cAAL,CAAoBK,KAApB,CAA0B,OAA1B,CAJC;AAKb9B,0BAAY,EAAE,IAAIgC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,WAAX,EAAT,EAAmC,IAAID,IAAJ,GAAWE,QAAX,KAAwB,CAA3D,EAA8D,EAA9D,CALD,CAKoE;;AALpE,aAAf;AAOAtK,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,IAAImK,IAAJ,GAAWC,WAAX,EAApB,EAA8C,IAAID,IAAJ,GAAWE,QAAX,EAA9C,EAAqE,EAArE;AACA,iBAAKX,cAAL,CAAoBY,aAApB,CAAkC,KAAKnF,OAAvC,EAAgDP,SAAhD,CAA0D,UAACnC,QAAD,EAAmB;AAC3E,kBAAIA,QAAQ,CAAC,SAAD,CAAR,KAAwB,IAA5B,EAAkC;AAChC,uBAAI,CAAChB,QAAL,CAAcE,OAAd,CAAsB,2CAAtB;;AACA,uBAAI,CAAC4F,SAAL,CAAegD,KAAf;AACD,eAHD,MAIK;AACH,uBAAI,CAAC9I,QAAL,CAAcI,OAAd,CAAsBY,QAAQ,CAAC,SAAD,CAA9B;;AACA,uBAAI,CAAC8E,SAAL,CAAegD,KAAf;AACD;AACF,aATD,EASG,UAAA3I,KAAK,EAAI;AACV,qBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoB,+BAApB;AACD,aAXD;AAYD;AACF;;;+BAEM;AACL,eAAK2F,SAAL,CAAegD,KAAf;AACD;;;;;;;uBA1DUd,sB,EAAsB,gJ,EAAA,8I,EAAA,kJ,EAAA,sI;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,c;AAAA,6tB;AAAA;AAAA;ACdnC;;AACI;;AACI;;AAAmC;AAAA,mBAAY,IAAAa,aAAA,EAAZ;AAA2B,WAA3B;;AAC/B;;AACI;;AACI;;AACI;;AACkE;;AAAgB;;AACtF;;AACA;;AAGI;;AACJ;;AAEA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAC+D;;AAAa;;AAChF;;AACA;;AAIA;;AAIA;;AAIA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAC8D;;AAAW;;AAC7E;;AACA;;AAIA;;AAIA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAC+D;;AAAC;;AACpE;;AACA;;AAIA;;AAIJ;;AACJ;;AACA;;AACI;;AAC8D;;AAAc;;AAEhF;;AACJ;;AACA;;AAA0C;AAAA,mBAAS,IAAAE,IAAA,EAAT;AAAe,WAAf;;AAAiB;;AAAI;;AACnE;;AACJ;;;;AAvFc;;AAAA;;AAIyC;;AAAA;;AAG3B;;AAAA;;AAGI;;AAAA;;AAGP;;AAAA;;AAS8B;;AAAA;;AAG5B;;AAAA;;AAIF;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAS8B;;AAAA;;AAGzB;;AAAA;;AAIL;;AAAA;;AAIA;;AAAA;;AAS8B;;AAAA;;AAG5B;;AAAA;;AAIF;;AAAA;;AAO2C;;AAAA,2GAAmC,SAAnC,EAAmC,gGAAnC;;;;;;;;;sEDpEvDf,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTrK,kBAAQ,EAAE,oBADD;AAETqJ,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcwB;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AAaA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AAaA;;AAEI;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;QD/CX+B,yB;;;AAEX,yCAAmBlD,SAAnB,EACkC/B,IADlC,EAEUkF,UAFV,EAGUjJ,QAHV,EAIU8E,YAJV,EAIsC;AAAA;;AAJnB,aAAAgB,SAAA,GAAAA,SAAA;AACe,aAAA/B,IAAA,GAAAA,IAAA;AACxB,aAAAkF,UAAA,GAAAA,UAAA;AACA,aAAAjJ,QAAA,GAAAA,QAAA;AACA,aAAA8E,YAAA,GAAAA,YAAA;AAGV,aAAAoE,WAAA,GAAc,KAAd;AAHyC,O,CAKzC;;;;;mCAEQ;AAEN,eAAKhD,GAAL,GAAW,KAAKnC,IAAhB;AACA,cAAI,KAAKA,IAAL,CAAU,SAAV,MAAyBwC,SAA7B,EACE,KAAK2C,WAAL,GAAmB,IAAnB;AACF5K,iBAAO,CAACC,GAAR,CAAY,KAAK2K,WAAjB;AAGA,eAAKC,WAAL,GAAmB,IAAI,wDAAJ,CAAc;AAC/B,qBAAS,IAAI,0DAAJ,CAAgB,KAAKjD,GAAL,CAASM,YAAzB,EAAuC,CAAC,0DAAW4B,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAAvC,CADsB;AAE/B,qBAAS,IAAI,0DAAJ,CAAgB,KAAKpC,GAAL,CAASpC,UAAzB,EAAqC,CAAC,0DAAWsE,QAAZ,CAArC,CAFsB;AAG/B,oBAAQ,IAAI,0DAAJ,CAAgB,KAAKlC,GAAL,CAASO,kBAAzB,EAA6C,CAAC,0DAAW4B,SAAX,CAAqB,CAArB,CAAD,EAA0B,0DAAWC,SAAX,CAAqB,EAArB,CAA1B,CAA7C,CAHuB;AAI/B,oBAAQ,IAAI,0DAAJ,CAAgB,KAAKpC,GAAL,CAASQ,YAAzB,EAAuC,CAAC,0DAAW0B,QAAZ,CAAvC;AAJuB,WAAd,CAAnB;AAMD,S,CAED;;;;iCACS;AAAA;;AACP,cAAI,KAAKe,WAAL,CAAiBC,KAArB,EAA4B;AAC1B,gBAAIC,SAAS,GAAoB;AAC/B9M,gBAAE,EAAE,KAAK2J,GAAL,CAAS3J,EADkB;AAE/BmK,0BAAY,EAAE,KAAKyC,WAAL,CAAiBX,KAAjB,CAAuB,MAAvB,CAFiB;AAG/BhC,0BAAY,EAAE,KAAK2C,WAAL,CAAiBX,KAAjB,CAAuB,OAAvB,CAHiB;AAI/B/B,gCAAkB,EAAE,KAAK0C,WAAL,CAAiBX,KAAjB,CAAuB,MAAvB,CAJW;AAK/B1E,wBAAU,EAAE,KAAKqF,WAAL,CAAiBX,KAAjB,CAAuB,OAAvB,CALmB;AAM/Bc,sBAAQ,EAAE,KAAKpD,GAAL,CAASoD,QANY,CAMJ;;AANI,aAAjC;;AAQA,gBAAI,KAAKpD,GAAL,CAASoD,QAAT,IAAqBD,SAAS,CAACC,QAA/B,IAA2C,KAAKpD,GAAL,CAASQ,YAAT,KAA0B2C,SAAS,CAAC3C,YAA/E,IAA+F,KAAKR,GAAL,CAASM,YAAT,KAA0B6C,SAAS,CAAC7C,YAAnI,IAAmJ,KAAKN,GAAL,CAASpC,UAAT,KAAwBuF,SAAS,CAACvF,UAAzL,EAAqM;AACnM,mBAAK9D,QAAL,CAAcI,OAAd,CAAsB,gCAAtB;AACD,aAFD,MAGK;AACH,mBAAK6I,UAAL,CAAgBM,aAAhB,CAA8BF,SAA9B,EAAyClG,SAAzC,CAAmD,UAACqG,aAAD,EAAoC;AACrF,uBAAI,CAAC1D,SAAL,CAAegD,KAAf,CAAqBU,aAArB;AACD,eAFD;AAGD;AACF;AACF;;;sCAEa;AAAA;;AACZ,cAAI,KAAKL,WAAL,CAAiBC,KAArB,EAA4B;AAC1B,gBAAIC,SAAS,GAAoB;AAC/B9M,gBAAE,EAAE,KAAK2J,GAAL,CAAS3J,EADkB;AAE/BmK,0BAAY,EAAE,KAAKyC,WAAL,CAAiBX,KAAjB,CAAuB,MAAvB,CAFiB;AAG/BhC,0BAAY,EAAE,KAAK2C,WAAL,CAAiBX,KAAjB,CAAuB,OAAvB,CAHiB;AAI/B/B,gCAAkB,EAAE,KAAK0C,WAAL,CAAiBX,KAAjB,CAAuB,MAAvB,CAJW;AAK/B1E,wBAAU,EAAE,KAAKqF,WAAL,CAAiBX,KAAjB,CAAuB,OAAvB,CALmB;AAM/Bc,sBAAQ,EAAE,KAAKpD,GAAL,CAASoD;AANY,aAAjC;;AAQA,gBAAI,KAAKpD,GAAL,CAASoD,QAAT,IAAqBD,SAAS,CAACC,QAA/B,IAA2C,KAAKpD,GAAL,CAASQ,YAAT,KAA0B2C,SAAS,CAAC3C,YAA/E,IAA+F,KAAKR,GAAL,CAASM,YAAT,KAA0B6C,SAAS,CAAC7C,YAAnI,IAAmJ,KAAKN,GAAL,CAASpC,UAAT,KAAwBuF,SAAS,CAACvF,UAAzL,EAAqM;AACnM,mBAAK9D,QAAL,CAAcI,OAAd,CAAsB,gCAAtB;AACD,aAFD,MAGK;AACH,mBAAK0E,YAAL,CAAkByE,aAAlB,CAAgCF,SAAhC,EAA2ClG,SAA3C,CAAqD,UAACqG,aAAD,EAAoC;AACvFlL,uBAAO,CAACC,GAAR,CAAYiL,aAAZ;;AAEA,uBAAI,CAAC1D,SAAL,CAAegD,KAAf,CAAqBU,aAArB;AACD,eAJD;AAKD;AACF;AACF;;;+BAEG;AACF,eAAK1D,SAAL,CAAegD,KAAf,CAAqB,IAArB;AACD;;;;;;;uBA5EUE,yB,EAAyB,sI,EAAA,gEAG1B,wEAH0B,C,EAGX,gJ,EAAA,kJ,EAAA,4I;AAAA,K;;;YAHdA,yB;AAAyB,6C;AAAA,e;AAAA,c;AAAA,opB;AAAA;AAAA;ACdtC;;AACI;;AACI;;AACI;;AAAgC;AAAA,sCAA2B,IAA3B,GAAkC,IAAAS,MAAA,EAAlC,GAA6C,IAAAC,WAAA,EAA7C;AAA0D,WAA1D;;AAC5B;;AACI;;AACI;;AACI;;AACwD;;AAAa;;AACzE;;AACA;;AAIA;;AAIA;;AAIA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACuD;;AAAW;;AACtE;;AACA;;AAIA;;AAIA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACwD;;AAAC;;AAC7D;;AACA;;AAIA;;AAIJ;;AACJ;;AACA;;AACI;;AAC2D;;AAAY;;AAE3E;;AACJ;;AACA;;AAA0C;AAAA,mBAAS,IAAAX,IAAA,EAAT;AAAe,WAAf;;AAAiB;;AAAI;;AACnE;;AACJ;;AACJ;;;;AAtEkB;;AAAA;;AAIyC;;AAAA;;AAG5B;;AAAA;;AAIF;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAS8B;;AAAA;;AAGzB;;AAAA;;AAIL;;AAAA;;AAIA;;AAAA;;AAS8B;;AAAA;;AAG5B;;AAAA;;AAIF;;AAAA;;AAO2C;;AAAA,wGAAgC,SAAhC,EAAgC,6FAAhC;;;;;;;;;sEDnD3DC,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACTrL,kBAAQ,EAAE,wBADD;AAETqJ,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK2B,Q;;;;;;kBAGjC,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa0C,8B;;;AAyBX,gDAAc;AAAA;;AApBP,aAAAC,eAAA,GAAgC;AACrCC,oBAAU,EAAE,IADyB;AAErC;AACAC,gBAAM,EAAE;AAAEC,iBAAK,EAAE,CAAC,EAAD,CAAT;AAAeC,iBAAK,EAAE,CAAC,EAAD;AAAtB,WAH6B;AAIrCC,iBAAO,EAAE;AACPC,sBAAU,EAAE;AACVC,oBAAM,EAAE,KADE;AAEVC,mBAAK,EAAE;AAFG;AADL;AAJ4B,SAAhC;AAWA,aAAAC,cAAA,GAA0B,EAA1B;AACA,aAAAC,YAAA,GAA0B,KAA1B;AACA,aAAAC,cAAA,GAAiB,IAAjB;AAEA,aAAAC,YAAA,GAAgC,CACrC;AAAEzG,cAAI,EAAE,EAAR;AAAY0G,eAAK,EAAE;AAAnB,SADqC,EAErC;AAAE1G,cAAI,EAAE,EAAR;AAAY0G,eAAK,EAAE;AAAnB,SAFqC,CAAhC;AAKU;;;;mCAEN;AACT,cAAMC,IAAI,GAAG,KAAKC,YAAlB;AACA,eAAKH,YAAL,CAAkB,CAAlB,EAAqBzG,IAArB,GAA4B,CAAC,KAAK4G,YAAN,CAA5B;AAEA,cAAMC,OAAO,GAAG,KAAKC,eAArB;AACAvM,iBAAO,CAACC,GAAR,CAAY,KAAKsM,eAAjB;AACA,eAAKL,YAAL,CAAkB,CAAlB,EAAqBzG,IAArB,GAA4B,CAAC,EAAD,CAA5B;AACAzF,iBAAO,CAACC,GAAR,CAAY,KAAKiM,YAAjB;AACA,eAAKH,cAAL,CAAoB,CAApB,IAAyB,KAAKS,QAA9B;AACAxM,iBAAO,CAACC,GAAR,CAAY,KAAKsM,eAAjB;AAGD;;;;;;;uBAvCUlB,8B;AAA8B,K;;;YAA9BA,8B;AAA8B,kD;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,uI;AAAA;AAAA;ACT3C;;AACI;;AACI;;AAEJ;;AACJ;;;;AAH0B;;AAAA,iGAAyB,QAAzB,EAAyB,kBAAzB,EAAyB,SAAzB,EAAyB,mBAAzB,EAAyB,QAAzB,EAAyB,kBAAzB,EAAyB,WAAzB,EAAyB,gBAAzB;;;;;;;;;sEDObA,8B,EAA8B;cAL1C,uDAK0C;eALhC;AACThM,kBAAQ,EAAE,6BADD;AAETqJ,qBAAW,EAAE,0CAFJ;AAGTC,mBAAS,EAAE,CAAC,yCAAD;AAHF,S;AAKgC,Q;;;;gBAExC;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa8D,sB;;;AAsBX,wCAAc;AAAA;;AAjBP,aAAAnB,eAAA,GAAgC;AACrCC,oBAAU,EAAE,IADyB;AAErC;AACAC,gBAAM,EAAE;AAAEC,iBAAK,EAAE,CAAC,EAAD,CAAT;AAAeC,iBAAK,EAAE,CAAC,EAAD;AAAtB,WAH6B;AAIrCC,iBAAO,EAAE;AACPC,sBAAU,EAAE;AACVC,oBAAM,EAAE,KADE;AAEVC,mBAAK,EAAE;AAFG;AADL;AAJ4B,SAAhC;AAWA,aAAAC,cAAA,GAA0B,EAA1B;AACA,aAAAC,YAAA,GAA0B,KAA1B;AACA,aAAAC,cAAA,GAAiB,IAAjB;AAEA,aAAAC,YAAA,GAAgC,EAAhC;AAGL,aAAKA,YAAL,GAAoB,CAClB;AAAEzG,cAAI,EAAE,EAAR;AAAY0G,eAAK,EAAE;AAAnB,SADkB,EAElB;AAAE1G,cAAI,EAAE,EAAR;AAAY0G,eAAK,EAAE;AAAnB,SAFkB,CAApB;AAKD;;;;mCAEU;AACT,eAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK3H,UAAL,CAAgBG,MAApC,EAA4CwH,CAAC,EAA7C,EAAiD;AAC/C,iBAAKX,cAAL,CAAoB/G,IAApB,CAAyB,CAAC,KAAKD,UAAL,CAAgB2H,CAAhB,EAAmBzH,KAApB,CAAzB;AACA,iBAAKiH,YAAL,CAAkB,CAAlB,EAAqBzG,IAArB,CAA0BiH,CAA1B,IAA+B,KAAKC,2BAAL,CAAiCD,CAAjC,EAAoC,kBAApC,CAA/B;AACA,iBAAKR,YAAL,CAAkB,CAAlB,EAAqBzG,IAArB,CAA0BiH,CAA1B,IAA+B,KAAKE,wBAAL,CAA8BF,CAA9B,EAAiC,kBAAjC,CAA/B;AACD;AACF;;;;;;;uBApCUD,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,uI;AAAA;AAAA;ACXnC;;AAEI;;AACE;;AACE;;AAQF;;AAEF;;AACJ;;;;AAVU;;AAAA,iGAAyB,QAAzB,EAAyB,kBAAzB,EAAyB,SAAzB,EAAyB,mBAAzB,EAAyB,QAAzB,EAAyB,kBAAzB,EAAyB,WAAzB,EAAyB,gBAAzB;;;;;;;;;sEDMGA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTpN,kBAAQ,EAAE,oBADD;AAETqJ,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;gBAEhC;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEfH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWakE,6B;;;AAQX,+CAAc;AAAA;;AAJP,aAAAC,mBAAA,GAA+B,EAA/B;AACA,aAAAC,iBAAA,GAAoB,EAApB;AACA,aAAAC,iBAAA,GAA+B,UAA/B;AAEU;;;;mCAET;AACN,eAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK3H,UAAL,CAAgBG,MAApC,EAA4CwH,CAAC,EAA7C,EAAiD;AAC/C,iBAAKI,mBAAL,CAAyB9H,IAAzB,CAA8B,CAAC,KAAKD,UAAL,CAAgB2H,CAAhB,EAAmBzH,KAApB,CAA9B;AACA,iBAAK8H,iBAAL,CAAuBL,CAAvB,IAA4B,KAAKO,eAAL,CAAqBP,CAArB,EAAwB,kBAAxB,CAA5B;AACD;AACF;;;;;;;uBAfUG,6B;AAA6B,K;;;YAA7BA,6B;AAA6B,iD;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,4F;AAAA;AAAA;ACX1C;;AACI;;AAEJ;;;;AAFsB;;AAAA,kGAA0B,QAA1B,EAA0B,uBAA1B,EAA0B,WAA1B,EAA0B,qBAA1B;;;;;;;;;sEDUTA,6B,EAA6B;cALzC,uDAKyC;eAL/B;AACTxN,kBAAQ,EAAE,4BADD;AAETqJ,qBAAW,EAAE,yCAFJ;AAGTC,mBAAS,EAAE,CAAC,wCAAD;AAHF,S;AAK+B,Q;;;;gBAEvC;;;gBACA;;;;;;;;;;;;;;;;;;;;AEdH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASauE,mB;;;AASX,qCAAc;AAAA;;AAJP,aAAAJ,mBAAA,GAA+B,CAAC,eAAD,EAAkB,YAAlB,CAA/B;AACA,aAAAC,iBAAA,GAAoB,EAApB;AACA,aAAAC,iBAAA,GAA+B,UAA/B;AAEU;;;;mCAET;AACN,eAAKD,iBAAL,CAAuB/H,IAAvB,CAA4B,KAAKuH,eAAjC;AACA,eAAKQ,iBAAL,CAAuB/H,IAAvB,CAA4B,KAAKqH,YAAjC;AACD;;;;;;;uBAdUa,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,4F;AAAA;AAAA;ACThC;;AACI;;AAEJ;;;;AAFsB;;AAAA,kGAA0B,QAA1B,EAA0B,uBAA1B,EAA0B,WAA1B,EAA0B,qBAA1B;;;;;;;;;sEDQTA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT7N,kBAAQ,EAAE,iBADD;AAETqJ,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;gBAE7B;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUawE,kB;;;AAgFX,oCAAc;AAAA;;AA5EP,aAAAC,aAAA,GAAiC,CACtC;AAAE3H,cAAI,EAAE,EAAR;AAAY0G,eAAK,EAAE;AAAnB,SADsC,CAAjC;AAGA,aAAAkB,eAAA,GAA2B,EAA3B;AACA,aAAAC,gBAAA,GAAyD;AAC9D/B,oBAAU,EAAE,IADkD;AAE9DgC,6BAAmB,EAAE,KAFyC;AAG9D/B,gBAAM,EAAE;AACN;AACAC,iBAAK,EAAE,CAAC,EAAD,CAFD;AAGNC,iBAAK,EAAE,CACL;AACEzN,gBAAE,EAAE,UADN;AAEEuP,sBAAQ,EAAE;AAFZ,aADK,EAKL;AACEvP,gBAAE,EAAE,UADN;AAEEuP,sBAAQ,EAAE,OAFZ;AAGEC,uBAAS,EAAE;AACTC,qBAAK,EAAE;AADE,eAHb;AAMEC,mBAAK,EAAE;AACLC,yBAAS,EAAE;AADN;AANT,aALK;AAHD,WAHsD;AAuB9DC,oBAAU,EAAE;AACVC,uBAAW,EAAE,CACX;AACEC,kBAAI,EAAE,MADR;AAEEC,kBAAI,EAAE,UAFR;AAGEC,qBAAO,EAAE,UAHX;AAIE/D,mBAAK,EAAE,UAJT;AAKEgE,yBAAW,EAAE,QALf;AAMEC,yBAAW,EAAE,CANf;AAOEhC,mBAAK,EAAE;AACLiC,uBAAO,EAAE,IADJ;AAELR,yBAAS,EAAE,QAFN;AAGLS,uBAAO,EAAE;AAHJ;AAPT,aADW;AADH;AAvBkD,SAAzD;AAyCA,aAAAC,eAAA,GAA2B,CAChC;AACEC,yBAAe,EAAE,uBADnB;AAEEL,qBAAW,EAAE,qBAFf;AAGEM,8BAAoB,EAAE,qBAHxB;AAIEC,0BAAgB,EAAE,MAJpB;AAKEC,mCAAyB,EAAE,MAL7B;AAMEC,+BAAqB,EAAE;AANzB,SADgC,EAShC;AACEJ,yBAAe,EAAE,oBADnB;AAEEL,qBAAW,EAAE,kBAFf;AAGEM,8BAAoB,EAAE,kBAHxB;AAIEC,0BAAgB,EAAE,MAJpB;AAKEC,mCAAyB,EAAE,MAL7B;AAMEC,+BAAqB,EAAE;AANzB,SATgC,EAiBhC;AACEJ,yBAAe,EAAE,mBADnB;AAEEL,qBAAW,EAAE,KAFf;AAGEM,8BAAoB,EAAE,qBAHxB;AAIEC,0BAAgB,EAAE,MAJpB;AAKEC,mCAAyB,EAAE,MAL7B;AAMEC,+BAAqB,EAAE;AANzB,SAjBgC,CAA3B;AA0BA,aAAAC,eAAA,GAAkB,IAAlB;AACA,aAAAC,aAAA,GAAgB,MAAhB;AAIU;;;;mCAEN;AACT,eAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,OAAnB,EAArB;;AACA,eAAK,IAAIrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKoC,aAAL,CAAmB5J,MAAvC,EAA+CwH,CAAC,EAAhD,EAAoD;AAClD,iBAAKU,aAAL,CAAmB,CAAnB,EAAsB3H,IAAtB,CAA2BiH,CAA3B,IAAgC,CAAC,KAAKoC,aAAL,CAAmBpC,CAAnB,EAAsB,YAAtB,CAAD,EAAsC,CAAtC,CAAhC;AACA,iBAAKW,eAAL,CAAqBX,CAArB,IAA0B,KAAKoC,aAAL,CAAmBpC,CAAnB,EAAsB,OAAtB,CAA1B;AACD;AACF;;;;;;;uBAxFUS,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;0EA8ElB,6D,EAAoB,I;;;;;;;;;;;;;;;;;ACxFjC;;AACI;;AACE;;AACA;;AASA;;AAXF;;AADJ;;;;AAIkB;;AAAA,kGAA0B,QAA1B,EAA0B,mBAA1B,EAA0B,SAA1B,EAA0B,oBAA1B,EAA0B,QAA1B,EAA0B,mBAA1B,EAA0B,QAA1B,EAA0B,mBAA1B,EAA0B,WAA1B,EAA0B,iBAA1B;;;;;;;;;sEDMLA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT9N,kBAAQ,EAAE,gBADD;AAETqJ,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;gBAE5B;;;gBA4EA,uD;iBAAU,6D,EAAoB;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AExFjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaqG,iB;;;AA+BX,mCAAc;AAAA;;AA3BP,aAAAC,eAAA,GAAgC;AACrC1D,oBAAU,EAAE,IADyB;AAErCgC,6BAAmB,EAAE,KAFgB;AAGrC2B,qBAAW,EAAE,GAHwB;AAIrCC,gBAAM,EAAE;AACN3B,oBAAQ,EAAE;AADJ,WAJ6B;AAOrC7B,iBAAO,EAAE;AACPC,sBAAU,EAAE;AACVwD,uBAAS,EAAE,mBAAClF,KAAD,EAAQmF,GAAR,EAAgB;AACzB,oBAAMlD,KAAK,GAAGkD,GAAG,CAACC,KAAJ,CAAU7J,IAAV,CAAe8J,MAAf,CAAsBF,GAAG,CAACG,SAA1B,CAAd;AACA,uBAAOrD,KAAP;AACD;AAJS;AADL;AAP4B,SAAhC;AAgBA,aAAAsD,cAAA,GAA0B,EAA1B;AACA,aAAAC,YAAA,GAAyB,EAAzB;AACA,aAAAC,YAAA,GAA0B,KAA1B;AACA,aAAAC,cAAA,GAAiB,IAAjB,CAQO,CAPd;;AACO,aAAAC,cAAA,GAAiB,CACtB;AACEtB,yBAAe,EAAE,CAAC,mBAAD,EAAsB,mBAAtB,EAA2C,qBAA3C,EAAkE,uBAAlE,EAA2F,sBAA3F,EAAmH,qBAAnH;AADnB,SADsB,CAAjB;AAMU;;;;mCAET;AACN,eAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKoD,YAAL,CAAkB5K,MAAtC,EAA8CwH,CAAC,EAA/C,EAAmD;AAC5C,iBAAKgD,YAAL,CAAkBhD,CAAlB,IAAuB,KAAKoD,YAAL,CAAkBpD,CAAlB,EAAqB,KAArB,CAAvB;AACA,iBAAK+C,cAAL,CAAoB/C,CAApB,IAAyB,KAAKoD,YAAL,CAAkBpD,CAAlB,EAAqB,UAArB,CAAzB;AACN;AACF;;;;;;;uBAtCUsC,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,qJ;AAAA;AAAA;ACT5B;;AACE;;AACE;;AAGF;;AACF;;;;AAJsB;;AAAA,6FAAqB,QAArB,EAAqB,kBAArB,EAAqB,WAArB,EAAqB,gBAArB,EAAqB,SAArB,EAAqB,mBAArB,EAAqB,QAArB,EAAqB,kBAArB,EAAqB,QAArB,EAAqB,kBAArB;;;;;;;;;sEDOXA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT3P,kBAAQ,EAAE,eADD;AAETqJ,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;gBAE3B;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AAEJ;;;;;;AAFsB;;AAAA,oGAAyB,QAAzB,EAAyB,uBAAzB,EAAyB,SAAzB,EAAyB,wBAAzB,EAAyB,QAAzB,EAAyB,uBAAzB,EAAyB,WAAzB,EAAyB,qBAAzB;;;;QDUToH,uB;;;AAyBX,yCAAc;AAAA;;AApBP,aAAAzE,eAAA,GAAgC;AACrCC,oBAAU,EAAE,IADyB;AAErCgC,6BAAmB,EAAE,KAFgB;AAGrC2B,qBAAW,EAAE,GAHwB;AAIrC;AACA1D,gBAAM,EAAE;AAAEC,iBAAK,EAAE,CAAC,EAAD,CAAT;AAAeC,iBAAK,EAAE,CAAC,EAAD;AAAtB,WAL6B;AAMrCC,iBAAO,EAAE;AACPC,sBAAU,EAAE;AACVC,oBAAM,EAAE,KADE;AAEVC,mBAAK,EAAE;AAFG;AADL;AAN4B,SAAhC;AAaA,aAAAC,cAAA,GAA0B,CAAC,eAAD,CAA1B;AACA,aAAAC,YAAA,GAA0B,KAA1B;AACA,aAAAC,cAAA,GAAiB,IAAjB;AAEA,aAAAC,YAAA,GAAgC,EAAhC;AAGU;;;;mCACN;AACT,eAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK3H,UAAL,CAAgBG,MAApC,EAA4CwH,CAAC,EAA7C,EAAiD;AAC/C,iBAAKR,YAAL,CAAkBlH,IAAlB,CAAuB;AAAES,kBAAI,EAAE,EAAR;AAAY0G,mBAAK,EAAE;AAAnB,aAAvB;AAEA,iBAAKD,YAAL,CAAkBQ,CAAlB,IAAuB;AAAEP,mBAAK,EAAE,KAAKpH,UAAL,CAAgB2H,CAAhB,EAAmBzH,KAA5B;AAAmCQ,kBAAI,EAAE,CAAC,KAAKwH,eAAL,CAAqBP,CAArB,EAAwB,kBAAxB,CAAD;AAAzC,aAAvB;AACD;AACF;;;;;;;uBAhCUqD,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,2C;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,8J;AAAA;AAAA;ACXpC;;;;AAAK;;;;;;;;;sEDWQA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT1Q,kBAAQ,EAAE,sBADD;AAETqJ,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKyB,Q;;;;gBAEjC;;;gBACA;;;;;;;;;;;;;;;;;;;;AEdH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaaqH,a;;;AAEX,6BAAoBpR,WAApB,EAAsDqR,WAAtD,EAAgGrG,aAAhG,EAA8H;AAAA;;AAA1G,aAAAhL,WAAA,GAAAA,WAAA;AAAkC,aAAAqR,WAAA,GAAAA,WAAA;AAA0C,aAAArG,aAAA,GAAAA,aAAA;AAEhG,aAAAf,YAAA,GAAe,KAAf;AACA,aAAAqH,eAAA,GAA4B,EAA5B;AAIA,aAAAnL,UAAA,GAA6B,EAA7B;AANC;;;;mCASO;AAAA;;AACN,eAAK6E,aAAL,CAAmBuG,gBAAnB;;AACA,cAAI,KAAKvG,aAAL,CAAmB3D,iBAAnB,CAAqCf,MAArC,KAAgD,CAApD,EAAuD;AACrD,iBAAK0E,aAAL,CAAmBK,oBAAnB,GAA0CpF,SAA1C,CAAoD,UAACY,IAAD,EAA0B;AAC5E,qBAAI,CAACmE,aAAL,CAAmB3D,iBAAnB,GAAuCR,IAAvC;AACA,qBAAI,CAACV,UAAL,GAAkB,OAAI,CAAC6E,aAAL,CAAmB3D,iBAArC;AACD,aAHD;AAID,WALD,MAME,KAAKlB,UAAL,GAAkB,KAAK6E,aAAL,CAAmB3D,iBAArC;AACH;;;oCAEW;AACV,cAAI,KAAKrH,WAAL,CAAiBmB,QAAjB,OAAgC,IAApC,EAA0C;AACxC,gBAAI,KAAKnB,WAAL,CAAiBmB,QAAjB,GAA4BG,SAA5B,KAA0C,MAA9C,EACE,OAAO,IAAP;AACF,mBAAO,KAAP;AACD;;AACD,iBAAO,KAAP;AACD;;;;;;;uBA9BU8P,a,EAAa,mI,EAAA,mJ,EAAA,uI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,k0I;AAAA;AAAA;ACb1B;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAO;;AAChC;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAS;;AAClC;;AACA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACA;;AACwB;;AAExB;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AAEwB;;AAIxB;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AAA8F;;AACvC;;AACzD;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AAEwB;;AAC2D;;AACrF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AAEwB;;AAExB;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AAAuF;;AACvD;;AAClC;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AAEwB;;AACjB;;AACT;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AAEwB;;AAAwH;;AAClJ;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;sEDvFaA,a,EAAa;cALzB,uDAKyB;eALf;AACT3Q,kBAAQ,EAAE,UADD;AAETqJ,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEb1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYgB;;AACI;;AAAgB;;AAA6B;;AAC7C;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAA6B;;AACjC;;AAAI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;AAAM;;AAClD;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyC;;AAAO;;AAC9F;;AAPA;;;;;;AACoB;;AAAA;;AACZ;;AAAA;;AACA;;AAAA;;;;QDHXyH,qB;;;AAEX,qCAAoBC,UAApB,EACU3O,QADV,EAES8F,SAFT,EAEyD;AAAA;;AAFrC,aAAA6I,UAAA,GAAAA,UAAA;AACV,aAAA3O,QAAA,GAAAA,QAAA;AACD,aAAA8F,SAAA,GAAAA,SAAA;AAAmD;;;;mCAGpD;AAAA;;AACN,eAAK6I,UAAL,CAAgBC,YAAhB,GAA+BzL,SAA/B,CAAyC,UAAC0L,GAAD,EAAmB;AAC1D,mBAAI,CAACC,OAAL,GAAeD,GAAf;AACAvQ,mBAAO,CAACC,GAAR,CAAY,OAAI,CAACuQ,OAAjB;AACD,WAHD;AAID;;;qCAEY5K,Q,EAAkB;AAAA;;AAC7B,eAAKyK,UAAL,CAAgBI,MAAhB,CAAuB7K,QAAvB,EAAiCf,SAAjC,CAA2C,UAAAnC,QAAQ,EAAI;AACrD,mBAAI,CAAChB,QAAL,CAAcE,OAAd,CAAsBc,QAAtB;;AACA,mBAAI,CAAChB,QAAL,CAAcE,OAAd,CAAsB,mCAAtB;;AACA,mBAAI,CAAC4F,SAAL,CAAegD,KAAf,CAAqB,IAArB;AACD,WAJD,EAIG,UAAA3I,KAAK,EAAI;AACV,mBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,WAND;AAOD;;;sCAEa+D,Q,EAAkB;AAAA;;AAC9B,eAAKyK,UAAL,CAAgBK,OAAhB,CAAwB9K,QAAxB,EAAkCf,SAAlC,CAA4C,UAAAnC,QAAQ,EAAI;AACtD,mBAAI,CAAChB,QAAL,CAAcE,OAAd,CAAsBc,QAAtB;AACD,WAFD,EAEG,UAAAb,KAAK,EAAI;AACV,mBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,WAJD;AAKD;;;+BAEM;AACL,eAAK2F,SAAL,CAAegD,KAAf,CAAqB,KAArB;AACD;;;;;;;uBAlCU4F,qB,EAAqB,8I,EAAA,kJ,EAAA,sI;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,mQ;AAAA;AAAA;ACZlC;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAI;;AACR;;AAAI;;AAAY;;AAChB;;AAAI;;AAAI;;AACR;;AAAI;;AAAC;;AACT;;AACJ;;AACA;;AACI;;AAQJ;;AACJ;;AACJ;;AACA;;AAAQ;AAAA,mBAAS,IAAA3F,IAAA,EAAT;AAAe,WAAf;;AAAyC;;AAAI;;AACzD;;;;AAZoB;;AAAA;;;;;;;;;sEDAP2F,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT/Q,kBAAQ,EAAE,mBADD;AAETqJ,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUagI,qB;;;AAEX,qCAAoBN,UAApB,EACU3O,QADV,EAES8F,SAFT,EAEyD;AAAA;;AAFrC,aAAA6I,UAAA,GAAAA,UAAA;AACV,aAAA3O,QAAA,GAAAA,QAAA;AACD,aAAA8F,SAAA,GAAAA,SAAA;AAEA,aAAA7B,KAAA,GAAgB,EAAhB;AAFmD;;;;mCAIpD,CACP;;;mCAEU;AAAA;;AACT,cAAI,KAAKA,KAAL,CAAWT,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,iBAAKmL,UAAL,CAAgBO,YAAhB,CAA6B,KAAKjL,KAAlC,EAAyCd,SAAzC,CAAmD,UAACnC,QAAD,EAAmB;AACpE,qBAAI,CAAChB,QAAL,CAAcE,OAAd,CAAsBc,QAAtB;;AACA1C,qBAAO,CAACC,GAAR,CAAYyC,QAAZ;AACD,aAHD,EAGG,UAAAb,KAAK,EAAI;AACV,qBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,aALD;AAMD,WAPD,MAQI;AACF,iBAAKH,QAAL,CAAcG,KAAd,CAAoB,qBAApB;AACD;AACF;;;iCAEQ;AACP,eAAK2F,SAAL,CAAegD,KAAf;AACD;;;;;;;uBA3BUmG,qB,EAAqB,8I,EAAA,kJ,EAAA,sI;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,6S;AAAA;AAAA;ACVlC;;AACI;;AACI;;AACI;;AAAoB;AAAA;AAAA;;AAApB;;AACA;;AAAQ;AAAA,mBAAS,IAAAE,QAAA,EAAT;AAAmB,WAAnB;;AAAsE;;AAAM;;AACpF;;AAA0C;AAAA,mBAAS,IAAAC,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAI;;AACrE;;AAEJ;;AACJ;;;;AANgC;;AAAA;;;;;;;;;sEDOnBH,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTtR,kBAAQ,EAAE,mBADD;AAETqJ,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;gBAM/B;;;;;;;;;;;;;;;;;;;;AEhBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC6BY;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AACzB;;;;;;AAWR;;AAAoE;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;;;QD3BnEoI,e;;;AAEX,+BAAoBnS,WAApB,EACUW,MADV,EAESgH,MAFT,EAGU0J,WAHV,EAG0C;AAAA;;AAHtB,aAAArR,WAAA,GAAAA,WAAA;AACV,aAAAW,MAAA,GAAAA,MAAA;AACD,aAAAgH,MAAA,GAAAA,MAAA;AACC,aAAA0J,WAAA,GAAAA,WAAA;AAGV,aAAAhO,UAAA,GAAa,KAAb;AACA,aAAA+O,iBAAA,GAA4B,CAA5B;AACA,aAAAC,aAAA,GAAgC,EAAhC;AAEU,aAAAC,YAAA,GAAe,IAAI,0DAAJ,EAAf;AACV,aAAAC,WAAA,GAAc,KAAd;AARgD;;;;mCAWxC;AAAA;;AACN,eAAKC,eAAL,GAAuB,KAAKxS,WAAL,CAAiBmB,QAAjB,GAA4BsR,WAAnD;AACA,eAAKpB,WAAL,CAAiBqB,gBAAjB,GAAoCzM,SAApC,CAA8C,UAACoM,aAAD,EAAmC;AAC/E,gBAAIA,aAAa,IAAI,IAArB,EAA2B;AACzBjR,qBAAO,CAACC,GAAR,CAAY,oBAAoBgR,aAAhC;AACA,qBAAI,CAACA,aAAL,GAAqBA,aAArB;AACA,qBAAI,CAACD,iBAAL,GAAyBC,aAAa,CAAC/L,MAAvC;AACD;AACF,WAND;AAQD;;;iCAEQ;AACP,eAAKtG,WAAL,CAAiB2S,MAAjB;AACA,eAAKhS,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;mCAGU;AACTK,iBAAO,CAACC,GAAR,CAAY,WAAZ;AACA,eAAKkR,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACA,eAAKD,YAAL,CAAkBM,IAAlB;AACD,S,CAED;;;;6CACqB;AACnB,cAAMhK,SAAS,GAAG,KAAKjB,MAAL,CAAYkB,IAAZ,CAAiB,oGAAjB,CAAlB;AACAD,mBAAS,CAACE,WAAV,GAAwB7C,SAAxB,CAAkC,UAAA8C,MAAM,EAAI;AAC1C3H,mBAAO,CAACC,GAAR,0BAA8B0H,MAA9B;AACD,WAFD;AAGD;;;+BAEM;AACL,eAAKsI,WAAL,CAAiBwB,mBAAjB,GAAuC5M,SAAvC;AACD;;;;;;;uBAlDUkM,e,EAAe,mI,EAAA,uH,EAAA,mI,EAAA,0J;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,stD;AAAA;AAAA;ACf5B;;AACE;;AACE;;AACE;;AACE;;AACE;;AAEF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAqE;AAAA,mBAAS,IAAAW,QAAA,EAAT;AAAmB,WAAnB;;AACnE;;AACF;;AACF;;AACA;;AACE;;AACE;;AAEE;;AACF;;AACA;;AACE;;AAAkC;;AAAY;;AAC9C;;AAGA;;AAAkC;;AAAmB;;AACvD;;AACF;;AACA;;AACE;;AAAsB;AAAA,mBAAS,IAAAC,IAAA,EAAT;AAAe,WAAf;;AAEpB;;AAEF;;AACA;;AACE;;AACF;;AACF;;AAEE;;AAAiC;;AAAyB;;AAE5D;;AAEE;;AAAQ;AAAA,mBAAS,IAAAJ,MAAA,EAAT;AAAiB,WAAjB;;AAA0D;;AAAM;;AAC1E;;AACF;;AACF;;AACF;;AACF;;;;AArC6B;;AAAA;;AAWd;;AAAA;;AAS0D;;AAAA;;AAA1D;;AAIA;;AAAA;;AAI4B;;AAAA;;;;;;;;;sED/B9BR,e,EAAe;cAL3B,uDAK2B;eALjB;AACT1R,kBAAQ,EAAE,YADD;AAETqJ,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;gBAYzB;;;;;;;;;;;;;;;;;;;;AE3BH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACsCgB;;AACI;;AACI;;AACI;;AACI;;AACA;;AAA8C;;AAAkB;;AACpE;;AACJ;;AACJ;;AACJ;;;;;;AANwC;;AAAA;;AACrB;;AAAA;;AACA;;AAAA;;AAA2C;;AAAA;;;;;;;;;;AAalE;;AACI;;AACI;;AACA;;AAAoC;;AAAW;;AACnD;;AACJ;;;;AAJO;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QD7CNiJ,gB;;;AAEX,gCAAoBhT,WAApB,EACUgL,aADV,EACwC;AAAA;;AADpB,aAAAhL,WAAA,GAAAA,WAAA;AACV,aAAAgL,aAAA,GAAAA,aAAA;AAEV,aAAAvG,cAAA,GAAiC,EAAjC;AAEU,aAAAkH,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAJiC;;;;mCAOnC;AAAA;;AACN,eAAK3L,WAAL,CAAiBqD,UAAjB,CAA4B4C,SAA5B,CAAsC,UAAAY,IAAI,EAAI;AAC5C,gBAAIA,IAAI,KAAK,KAAb,EACE,OAAI,CAACmE,aAAL,CAAmB3D,iBAAnB,GAAuC,EAAvC;AACH,WAHD;AAIA,eAAKhI,EAAL,GAAU,KAAKW,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAAtC;;AACA,cAAI,KAAK2I,aAAL,CAAmB3D,iBAAnB,CAAqCf,MAArC,KAAgD,CAApD,EAAuD;AACrD,iBAAK0E,aAAL,CAAmBK,oBAAnB,GAA0CpF,SAA1C,CAAoD,UAACY,IAAD,EAA0B;AAC5E,qBAAI,CAACmE,aAAL,CAAmB3D,iBAAnB,GAAuCR,IAAvC;AACA,qBAAI,CAACpC,cAAL,GAAsB,OAAI,CAACuG,aAAL,CAAmB3D,iBAAzC;;AACA,qBAAI,CAAC4L,QAAL;AACD,aAJD;AAKD,WAND,MAOK;AACH,iBAAKxO,cAAL,GAAsB,KAAKuG,aAAL,CAAmB3D,iBAAzC;AACA,iBAAK4L,QAAL;AACD;AAGF;;;gCACO;AACN,eAAKC,OAAL,CAAatH,KAAb;AACD;;;mCAEU;AACT,eAAK,IAAIkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrJ,cAAL,CAAoB6B,MAAxC,EAAgDwH,CAAC,EAAjD,EAAqD;AACnD,oBAAQ,KAAKrJ,cAAL,CAAoBqJ,CAApB,EAAuBzH,KAA/B;AACE,mBAAK,MAAL;AACE,qBAAK5B,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,aAA9B;AACA;;AACF,mBAAK,QAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,eAA9B;AACA;;AACF,mBAAK,QAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,cAA9B;AACA;;AACF,mBAAK,YAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,WAA9B;AACA;;AACF,mBAAK,MAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,mBAA9B;AACA;;AACF,mBAAK,SAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,eAA9B;AACA;;AACF,mBAAK,WAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,gBAA9B;AACA;;AACF,mBAAK,cAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,eAA9B;AACA;;AACF,mBAAK,aAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,SAA9B;AACA;;AACF,mBAAK,KAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,aAA9B;AACA;;AACF,mBAAK,OAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,WAA9B;AACA;;AACF,mBAAK,eAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,eAA9B;AACA;;AACF,mBAAK,mBAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,kBAA9B;AACA;;AACF,mBAAK,aAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,gBAA9B;AACA;;AACF,mBAAK,QAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,SAA9B;AACA;;AACF,mBAAK,SAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,kBAA9B;AACA;;AACF,mBAAK,SAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,YAA9B;AACA;;AACF,mBAAK,UAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,WAA9B;AACA;;AACF,mBAAK,aAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,YAA9B;AACA;;AACF,mBAAK,WAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,gBAA9B;AACA;;AACF,mBAAK,QAAL;AACA,mBAAK,oBAAL;AACA,mBAAK,iBAAL;AACA,mBAAK,mBAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,SAA9B;AACA;;AACF,mBAAK,OAAL;AACA,mBAAK,cAAL;AACA,mBAAK,gBAAL;AACA,mBAAK,iBAAL;AACA,mBAAK,kBAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,WAA9B;AACA;;AACF,mBAAK,gBAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,QAA9B;AACA;;AACF,mBAAK,oBAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,UAA9B;AACA;;AACF,mBAAK,qBAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,QAA9B;AACA;;AACF,mBAAK,OAAL;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,WAA9B;AACA;;AACF;AACE,qBAAK1O,cAAL,CAAoBqJ,CAApB,EAAuBqF,IAAvB,GAA8B,uBAA9B;AAvFJ;AAyFD;AACF;;;mCAEU;AACT,eAAKxH,aAAL,CAAmBiH,IAAnB,CAAwB,MAAxB;AACD;;;;;;;uBAlIUI,gB,EAAgB,0I,EAAA,8I;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACZ7B;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AAAkC;;AAAI;;AAC1C;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAkC;;AAAW;;AACjD;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAmC;;AAAiB;;AACxD;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAoC;;AAAiB;;AACzD;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAAyC;;AAAe;;AAC5D;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAA+B;;AAAU;;AAC7C;;AACA;;AAUJ;;AAEA;;AACI;;AACI;;AACA;;AAAG;;AAAO;;AACd;;AACJ;;AACA;;AAMJ;;AACJ;;AACJ;;;;AA9DY;;AAAA;;AAEO;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAUE;;AAAA;;AAaF;;AAAA;;AAKH;;AAAA;;;;;;;;;sED5CHA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTvS,kBAAQ,EAAE,aADD;AAETqJ,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;gBAM1B;;;gBACA;;;gBAEA,uD;iBAAU,S;;;;;;;;;;;;;;;;;;;;AErBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaqJ,iB;;;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA,c;AAAA,a;AAAA,oC;AAAA;AAAA;ACP9B;;;;;;;;;sEDOaA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT3S,kBAAQ,EAAE,eADD;AAETqJ,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQasJ,iB;;;AAEX,iCAAoB1S,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAmB;;;;mCAE/B;AACNS,iBAAO,CAACC,GAAR,CAAY,WAAZ;AAED;;;+BAEG;AACF,eAAKV,MAAL,CAAYI,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;;;;;uBAXUsS,iB,EAAiB,uH;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,c;AAAA,a;AAAA,mM;AAAA;AAAA;ACR9B;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAc;;AAClB;;AAAQ;AAAA,mBAAS,IAAAxH,IAAA,EAAT;AAAe,WAAf;;AAA2C;;AAAO;;AAC9D;;AACJ;;AACJ;;AACJ;;;;;;;;sEDDawH,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT5S,kBAAQ,EAAE,eADD;AAETqJ,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;AER9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmCoB;;AAA4C;;AAAoC;;;;;;AAApC;;AAAA;;;;;;AAHhD;;AACI;;AAAI;;AAAQ;;AAAsB;;AAAS;;AAE3C;;AACJ;;;;;;;;AAHgB;;AAAA;;AAER;;AAAA;;;;;;;;;;;;;;AAhBpB;;AAEI;;AAAI;;AAAY;;AAChB;;AAAG;;AAA2C;;AAE9C;;AACI;;AACI;;AACI;;AAAgB;;AAAI;;AACpB;;AAAI;;AAAI;;AACZ;;AACJ;;AACA;;AACI;;AAKJ;;AACJ;;AAEA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AAAoD;AAAA;;AAAA;;AAAA,iBAAS,SAAAuJ,QAAA,YAAT;AAA6B,SAA7B;;AAEhD;;AAAmC;;AACvC;;AACA;;AAAoD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,YAAT;AAA6B,SAA7B;;AAEhD;;AAAgC;;AACpC;;AACA;;AAAmD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,aAAT;AAA8B,SAA9B;;AAE/C;;AAAkC;;AACtC;;AACJ;;AAEJ;;;;;;AAvCO;;AAAA;;AAUS;;AAAA;;AAY6C;;AAAA;;AAIjD;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;;;;;AAcZ;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;;;QD3DAC,c;;;AAWX,8BAAoBvT,WAApB,EAAsD8C,QAAtD,EAAiF;AAAA;;AAA7D,aAAA9C,WAAA,GAAAA,WAAA;AAAkC,aAAA8C,QAAA,GAAAA,QAAA;AAPtD,aAAA0Q,mBAAA,GAAsB,KAAtB;AAIA,aAAAtR,OAAA,GAAU,yEAAYC,MAAtB;AAGoF;;;;mCAE5E;AACN,eAAKsR,gBAAL;AACD;;;qCAEY1U,C,EAAM;AACjB,eAAKyU,mBAAL,GAA2BzU,CAA3B;AACD;;;2CAGkB;AAAA;;AACjB,eAAKuU,QAAL,GAAgB,IAAI,4DAAJ,CAAiB;AAC/B/R,eAAG,EAAE,KAAKW,OAAL,GAAe,QAAf,GAA0B,KAAKlC,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAD5B;AAE/BqR,qBAAS,EAAE,YAAYnQ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFQ;AAG/BmQ,mBAAO,EAAE,IAHsB;AAI/BC,2BAAe,EAAE,CAAC,OAAD,CAJc;AAK/BC,6BAAiB,EAAE,IALY;AAM/BC,sBAAU,EAAE,KANmB;AAO/BC,uBAAW,EAAE,KAAK,IAAL,GAAY;AAPM,WAAjB,CAAhB;;AAUA,eAAKT,QAAL,CAAcU,iBAAd,GAAkC,UAACC,IAAD,EAAU;AAAEA,gBAAI,CAACC,eAAL,GAAuB,KAAvB;AAA+B,WAA7E;;AAGA,eAAKZ,QAAL,CAAca,aAAd,GAA8B,UAACC,IAAD,EAAOtQ,QAAP,EAAiBuQ,MAAjB,EAAyBC,MAAzB,EAAoC;AAChE,gBAAIxQ,QAAJ,EAAc;AACZ;AACA,kBAAMoG,GAAG,GAAUqK,IAAI,CAACC,KAAL,CAAW1Q,QAAX,CAAnB,CAFY,CAGZ;;AACA,kBAAM2Q,KAAK,GAAG;AACZpV,kBAAE,EAAE6K,GAAG,CAAC7K,EADI;AAEZkC,mBAAG,EAAE2I,GAAG,CAAC3I,GAFG;AAGZmT,yBAAS,EAAExK,GAAG,CAACwK;AAHH,eAAd;AAKA,qBAAI,CAACD,KAAL,GAAaA,KAAb;AACD;AACF,WAZD;AAaD,S,CACD;;;;mCACW;AAAA;;AACT,eAAKzU,WAAL,CAAiB2U,QAAjB,GAA4B1O,SAA5B,CAAsC,UAACY,IAAD,EAAiB;AACrD,mBAAI,CAAC4N,KAAL,GAAa5N,IAAb;AACD,WAFD;AAGD;;;sCAEa;AAAA;;AACZ,eAAK7G,WAAL,CAAiB4U,WAAjB,GAA+B3O,SAA/B,CAAyC,YAAM;AAC7C,mBAAI,CAACwO,KAAL,GAAa,IAAb;AACD,WAFD;AAGD;;;;;;;uBA7DUlB,c,EAAc,mI,EAAA,2I;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,qlC;AAAA;AAAA;ACZ3B;;AAEI;;AAEI;;AAAI;;AAAU;;AAEd;;AAAmE;AAAA,mBAAY,IAAAsB,YAAA,QAAZ;AAAgC,WAAhC;;AAE/D;;AACA;;AACJ;;AAEA;;AACA;;AAAkE;;AAElE;;AACA;;AACJ;;AAEA;;AA4CJ;;AAEA;;AACI;;AACI;;AAAgC;AAAA,mBAAS,IAAAF,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAS;;AAC9D;;AAA+B;AAAA,mBAAS,IAAAC,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAY;;AACvE;;AACA;;AAGJ;;;;AAnEyB;;AAAA,8KAAiD,UAAjD,EAAiD,YAAjD;;AAOgB;;AAAA;;AAGA;;AAAA;;AAGhC;;AAAA;;AAmDA;;AAAA;;;;;;;;;sED1DIrB,c,EAAc;cAL1B,uDAK0B;eALhB;AACT9S,kBAAQ,EAAE,WADD;AAETqJ,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACiBgB;;AACI;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAA6D;;AAAM;;AAC1E;;;;;;AA2DoC;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AAeA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AA+CA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AAeA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAnLxC;;AACI;;AACI;;AAAsC;;AAA0B;;AAChE;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AAEA;;AAEI;;AACI;;AACI;;AACI;;AACI;;AAA6B;;AAAa;;AAC1C;;AAAG;;AAAsC;;AACzC;;AACI;;AAA+B;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACI;;AACI;;AACI;;AAE4D;;AAAQ;;AACxE;;AACA;;AAIA;;AAIA;;AAIA;;AAIA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAGI;;AAAQ;;AAChB;;AACA;;AAIA;;AAIA;;AAIA;;AAIA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACkD;;AAAI;;AAC1D;;AACA;;AACI;;AAAqD;;AAAK;;AAC1D;;AAA2C;;AAAK;;AACpD;;AACJ;;AACJ;;AACA;;AACI;;AAEkD;;AACvC;;AACf;;AACJ;;AACA;;AACI;;AAAkC;;AAAmB;;AAAuB;AAAA;;AAAA;;AAAA;AAAA;;AACxB;;AAAQ;;AAC3C;;AAAS;;AAAI;;AAClC;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAkC;;AAAa;;AAC/C;;AAAkD;;AAAwC;;AAC1F;;AACI;;AAA+B;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACI;;AACI;;AACI;;AAE4D;;AAAQ;;AACxE;;AACA;;AAIA;;AAIA;;AAIA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAGI;;AAAQ;;AAChB;;AACA;;AAIA;;AAIA;;AAIA;;AAIJ;;AACJ;;AACA;;AACI;;AAEkD;;AAAO;;AAC7D;;AACJ;;AACA;;AACI;;AAA6B;;AAAuB;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AACnC;;AAAQ;;AAC3C;;AAAS;;AAAI;;AAClC;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAvKmC;;AAAA;;AAMD;;AAAA;;AAKc;;AAAA;;AAGD;;AAAA;;AAIyC;;AAAA;;AAIM;;AAAA;;AAIC;;AAAA;;AAIU;;AAAA;;AAUzD;;AAAA;;AAID;;AAAA;;AAI+B;;AAAA;;AAImB;;AAAA;;AAIA;;AAAA;;AAIW;;AAAA;;AASF;;AAAA;;AAWlE;;AAAA,0GAA+B,SAA/B,EAA+B,iGAA/B;;AAkBN;;AAAA;;AAKc;;AAAA;;AAGD;;AAAA;;AAIoC;;AAAA;;AAIwB;;AAAA;;AAIC;;AAAA;;AAU5D;;AAAA;;AAID;;AAAA;;AAI0B;;AAAA;;AAIwB;;AAAA;;AAIA;;AAAA;;AAQzD;;AAAA,0GAA+B,SAA/B,EAA+B,iGAA/B;;;;;;;;AAgBxC;;AACI;;AACI;;AAEA;;AACI;;AAAsE;;AAAsB;;AAC5F;;AAAqJ;;AAC1H;;AAC3B;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAAoE;;AAAM;;AAC9G;;AACJ;;AAEA;;AACI;;AAEA;;AACI;;AAAwE;;AAA8B;;AACtG;;AAA2I;;AAC/H;;AACZ;;AAA2G;AAAA;;AAAA;;AAAA;AAAA;;AAAoE;;AAAK;;AACxL;;AACJ;;AAEA;;AACI;;AAEA;;AACI;;AAAqF;;AAA6B;;AAClH;;AAAiK;;AAC1E;;AACvF;;AAAiC;AAAA;;AAAA;;AAAA;AAAA;;AAAqE;;AAAI;;AAC9G;;AACJ;;AACJ;;;;;;AAdkD;;AAAA;;;;QDtOjD+K,qB;;;AASX,qCAAoB9U,WAApB,EACU8C,QADV,EAES6E,MAFT,EAGUhH,MAHV,EAIU0Q,WAJV,EAI4C;AAAA;;AAJxB,aAAArR,WAAA,GAAAA,WAAA;AACV,aAAA8C,QAAA,GAAAA,QAAA;AACD,aAAA6E,MAAA,GAAAA,MAAA;AACC,aAAAhH,MAAA,GAAAA,MAAA;AACA,aAAA0Q,WAAA,GAAAA,WAAA;AAPV,aAAA0D,QAAA,GAAW,IAAX;AACA,aAAAC,UAAA,GAAa,KAAb;AACA,aAAApD,OAAA,GAAkB,CAAlB;AAK+C;;;;mCAEvC;AAAA;;AACN,eAAKqD,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9B,0BAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW/J,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,EAAyE,0DAAW8J,OAAX,CAAmB,qCAAnB,CAAzE,CAApB,CADgB;AAE9B,0BAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWhK,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,CAArB,CAA/C,EAAwE,0DAAW8J,OAAX,CAAmB,qCAAnB,CAAxE,CAApB,CAFgB;AAG9B,oBAAQ,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWhK,QAA/B;AAHsB,WAAd,CAAlB;AAKA,eAAKiK,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9B,0BAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWjK,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAApB,CADgB;AAE9B,0BAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWF,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,CAArB,CAA/C,CAApB;AAFgB,WAAd,CAAlB;AAIA,eAAKpL,WAAL,CAAiBqD,UAAjB,CAA4B4C,SAA5B,CAAsC,UAAAiE,GAAG,EAAI;AAC3C,mBAAI,CAAC8K,UAAL,GAAkB9K,GAAlB;AACD,WAFD;AAGD;;;mCAEU;AAAA;;AACT,cAAMxG,QAAQ,GAAG,KAAKuR,UAAL,CAAgB3J,KAAhB,CAAsB,YAAtB,CAAjB;AACA,cAAM1H,QAAQ,GAAG,KAAKqR,UAAL,CAAgB3J,KAAhB,CAAsB,YAAtB,CAAjB;AACA,cAAMlL,IAAI,GAAG,KAAK6U,UAAL,CAAgB3J,KAAhB,CAAsB,MAAtB,CAAb;AACA,eAAKtL,WAAL,CAAiBoV,QAAjB,CAA0B1R,QAA1B,EAAoCE,QAApC,EAA8CxD,IAA9C,EAAoD6F,SAApD,CAA8D,UAACY,IAAD,EAAe;AAC3E,mBAAI,CAAC/D,QAAL,CAAcE,OAAd,CAAsB6D,IAAI,CAACA,IAA3B;;AACA,mBAAI,CAACoO,UAAL,CAAgBI,KAAhB;;AACA,mBAAI,CAACF,UAAL,CAAgBE,KAAhB;;AACA,mBAAI,CAACN,QAAL,GAAgB,KAAhB;AACD,WALD,EAKG,UAAA9R,KAAK,EAAI;AACV,mBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,WAPD;AAQD;;;mCAEU;AAAA;;AACT,cAAMS,QAAQ,GAAG,KAAKyR,UAAL,CAAgB7J,KAAhB,CAAsB,YAAtB,CAAjB;AACA,cAAM1H,QAAQ,GAAG,KAAKuR,UAAL,CAAgB7J,KAAhB,CAAsB,YAAtB,CAAjB;AACA,eAAKtL,WAAL,CAAiBsV,KAAjB,CAAuB5R,QAAvB,EAAiCE,QAAjC,EAA2CqC,SAA3C,CAAqD,UAACY,IAAD,EAAe;AAClE,mBAAI,CAAC/D,QAAL,CAAcE,OAAd,CAAsB,cAAc6D,IAAI,CAAC0O,IAAL,CAAU,UAAV,CAApC;;AACA,gBAAI,OAAI,CAACjU,SAAL,EAAJ,EAAsB;AACpB,qBAAI,CAACtB,WAAL,CAAiBsB,SAAjB,CAA2BV,IAA3B,CAAgC,IAAhC;;AACA,qBAAI,CAACD,MAAL,CAAYI,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACD,aAHD,MAIK;AACH,qBAAI,CAACiU,UAAL,GAAkB,IAAlB;;AACA,qBAAI,CAAC3D,WAAL,CAAiBqB,gBAAjB,GAAoCzM,SAApC,CAA8C,UAACiE,GAAD,EAAyB;AACrE,uBAAI,CAAC0H,OAAL,GAAe1H,GAAG,CAAC5D,MAAnB;AACD,eAFD;AAGD;AACF,WAZD,EAYG,UAAArD,KAAK,EAAI;AACV,mBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,WAdD;AAeD;;;qCAEY;AACX,eAAK8R,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACA,eAAKE,UAAL,CAAgBI,KAAhB;AACA,eAAKF,UAAL,CAAgBE,KAAhB;AACD;;;oCAEW;AACV,cAAI,KAAKrV,WAAL,CAAiBmB,QAAjB,OAAgC,IAApC,EAA0C;AACxCC,mBAAO,CAACC,GAAR,CAAY,KAAKrB,WAAL,CAAiBmB,QAAjB,EAAZ;AACA,gBAAI,KAAKnB,WAAL,CAAiBmB,QAAjB,GAA4BG,SAA5B,KAA0C,MAA9C,EACE,OAAO,IAAP;AACF,mBAAO,KAAP;AACD;;AACD,iBAAO,KAAP;AACD;;;+CAEsB;AAAA;;AACrB,cAAMsH,SAAS,GAAG,KAAKjB,MAAL,CAAYkB,IAAZ,CAAiB,0GAAjB,CAAlB;AACAD,mBAAS,CAACE,WAAV,GAAwB7C,SAAxB,CAAkC,UAAC8C,MAAD,EAAqB;AACrD,gBAAIA,MAAJ,EACE,OAAI,CAAC4J,MAAL;AACH,WAHD;AAID;;;+CAEsB;AAAA;;AACrB,cAAM/J,SAAS,GAAG,KAAKjB,MAAL,CAAYkB,IAAZ,CAAiB,2GAAjB,CAAlB;AACAD,mBAAS,CAACE,WAAV,GAAwB7C,SAAxB,CAAkC,UAAC8C,MAAD,EAAqB;AACrD,gBAAIA,MAAJ,EACE,OAAI,CAAC4J,MAAL;AACH,WAHD;AAID;;;gDAEuB;AACtB,cAAM/J,SAAS,GAAG,KAAKjB,MAAL,CAAYkB,IAAZ,CAAiB,8GAAjB,CAAlB;AACAD,mBAAS,CAACE,WAAV,GAAwB7C,SAAxB,CAAkC,UAAA8C,MAAM,EAAI,CAC3C,CADD;AAED;;;iCAEQ;AACP,eAAK/I,WAAL,CAAiB2S,MAAjB;AACD;;;;;;;uBAxGUmC,qB,EAAqB,0I,EAAA,kJ,EAAA,mI,EAAA,uH,EAAA,0J;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,2ra;AAAA;AAAA;ACjBlC;;AACI;;AACI;;AAAgC;;AAAM;;AACtC;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAA4B;;AAAI;;AACpC;;AACA;;AACI;;AAA4B;;AAAU;;AAC1C;;AACA;;AACI;;AAA4B;;AAAM;;AACtC;;AACA;;AAGJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAwMA;;AAkCJ;;AACJ;;AACJ;;AAIA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAAgB;;AACwD;;AACxE;;AAA6C;;AAAU;;AAC3D;;AACJ;;AACJ;;AACJ;;AAIA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAI;;AAAiB;;AACrB;;AAAG;;AACwD;;AAC3D;;AACI;;AACI;;AAEJ;;AACA;;AACI;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAEJ;;AACA;;AACI;;AAGJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAKA;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAM;;AACV;;AAAG;;AAAiB;;AAAgB;;AAAI;;AAAO;;AACnD;;AACJ;;AACJ;;AACJ;;;;AA7ToB;;AAAA;;AAWH;;AAAA;;AAwMA;;AAAA;;;;;;;;;sEDnNJA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTrU,kBAAQ,EAAE,mBADD;AAETqJ,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsBgC;;AAA2D;;AAAK;;;;;;AAChE;;AAAwC;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAGxC;;AAA2D;;AAAK;;;;;;AAChE;;AAAwC;;;;AACxC;;;;;;AADwC;;AAAA;;;;;;AAIxC;;AAA2D;;AAAQ;;;;;;;;AACnE;;AACI;;AACI;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAwD;;AAAM;;AAClE;;AACI;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAyD;;AAAO;;AACxE;;;;;;AAEJ;;;;;;AACA;;;;;;;;QD5BfyL,sB;;;AAGX,sCAAoBC,UAApB,EAAwDzV,WAAxD,EAA0F8C,QAA1F,EAAqH;AAAA;;AAAjG,aAAA2S,UAAA,GAAAA,UAAA;AAAoC,aAAAzV,WAAA,GAAAA,WAAA;AAAkC,aAAA8C,QAAA,GAAAA,QAAA;AAEhF,aAAA4S,SAAA,GAAY,IAAI,0DAAJ,EAAZ;AAEV,aAAAC,OAAA,GAAoB,CAAC,MAAD,EAAS,MAAT,EAAiB,SAAjB,CAApB;AACA,aAAAC,QAAA,GAAW,IAAI,0EAAJ,EAAX;AALwH;;;;mCAMhH;AAAA;;AACN,eAAKH,UAAL,CAAgBI,WAAhB,CAA4B,KAAK7V,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAAxD,EAAgE4D,SAAhE,CAA0E,UAACtH,GAAD,EAAoB;AAC5F,mBAAI,CAACiX,QAAL,CAAc/O,IAAd,GAAqBlI,GAArB;AACA,gBAAI,OAAI,CAACiX,QAAL,CAAc/O,IAAd,CAAmBP,MAAnB,IAA6B,CAAjC,EACE,OAAI,CAACxD,QAAL,CAAcG,KAAd,CAAoB,0BAApB;AACH,WAJD;AAKD,S,CACD;;;;sCACc8D,K,EAAesB,Q,EAAkB;AAAA;;AAC7C,eAAKoN,UAAL,CAAgBK,aAAhB,CAA8B/O,KAA9B,EAAqC,KAAK/G,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAAjE,EAAyE4D,SAAzE,CAAmF,UAACnC,QAAD,EAAc;AAC/F,mBAAI,CAAC8R,QAAL,CAAc/O,IAAd,CAAmB6C,MAAnB,CAA0BrB,QAA1B,EAAoC,CAApC;;AACA,mBAAI,CAACuN,QAAL,CAAc/O,IAAd,GAAqB,OAAI,CAAC+O,QAAL,CAAc/O,IAAnC;;AACA,mBAAI,CAAC/D,QAAL,CAAcE,OAAd,CAAsBc,QAAtB;;AACA,mBAAI,CAAC4R,SAAL,CAAe9C,IAAf;AACD,WALD,EAKG,UAAA3P,KAAK,EAAI;AACV,mBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,WAPD;AAQD;;;uCAEc8D,K,EAAesB,Q,EAAkB;AAAA;;AAC9C,eAAKoN,UAAL,CAAgBM,cAAhB,CAA+BhP,KAA/B,EAAsCd,SAAtC,CAAgD,UAACnC,QAAD,EAAc;AAC5D,mBAAI,CAAC8R,QAAL,CAAc/O,IAAd,CAAmB6C,MAAnB,CAA0BrB,QAA1B,EAAoC,CAApC;;AACA,mBAAI,CAACuN,QAAL,CAAc/O,IAAd,GAAqB,OAAI,CAAC+O,QAAL,CAAc/O,IAAnC;;AACA,mBAAI,CAAC/D,QAAL,CAAcE,OAAd,CAAsBc,QAAtB;AACD,WAJD,EAIG,UAAAb,KAAK,EAAI;AACV,mBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,WAND;AAOD;;;;;;;uBApCUuS,sB,EAAsB,gJ,EAAA,0I,EAAA,kJ;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,mzC;AAAA;AAAA;ACZnC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAyB;;AAAY;;AACzC;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AAEJ;;AACA;;AACI;;AACA;;AAMJ;;AACA;;AACA;;AACJ;;AAEA;;AAGJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA/B8D;;AAAA;;AAmBf;;AAAA;;AACP;;AAAA;;AAG0B;;AAAA,6JAAuB,cAAvB,EAAuB,IAAvB;;;;;;;;;;sED/BrDA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT/U,kBAAQ,EAAE,oBADD;AAETqJ,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;gBAKhC;;;;;;;;;;;;;;;;;;;;AEjBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaiM,sB;;;AAEX,sCAAoBP,UAApB,EACU9U,MADV,EAEUmC,QAFV,EAGS8F,SAHT,EAG0D;AAAA;;AAHtC,aAAA6M,UAAA,GAAAA,UAAA;AACV,aAAA9U,MAAA,GAAAA,MAAA;AACA,aAAAmC,QAAA,GAAAA,QAAA;AACD,aAAA8F,SAAA,GAAAA,SAAA;AAEA,aAAA7B,KAAA,GAAgB,EAAhB;AAFoD;;;;mCAIrD,CACP;;;mCAEU;AAAA;;AACT,cAAI,KAAKA,KAAL,CAAWT,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,iBAAKmP,UAAL,CAAgBQ,sBAAhB,CAAuC,KAAKlP,KAA5C,EAAmDd,SAAnD,CAA6D,UAACnC,QAAD,EAAmB;AAC9E,qBAAI,CAAChB,QAAL,CAAcE,OAAd,CAAsBc,QAAtB;;AACA1C,qBAAO,CAACC,GAAR,CAAYyC,QAAZ;AACD,aAHD,EAGG,UAAAb,KAAK,EAAI;AACV,qBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,aALD;AAMD,WAPD,MAQI;AACF,iBAAKH,QAAL,CAAcG,KAAd,CAAoB,qBAApB;AACD;AACF;;;+BAEM;AACL,eAAK2F,SAAL,CAAegD,KAAf;AACD;;;+BAEM;AAAA;;AACL,eAAK6J,UAAL,CAAgB1C,IAAhB,GAAuB9M,SAAvB,CAAiC,UAAAnC,QAAQ,EAAI;AAC3C,mBAAI,CAAChB,QAAL,CAAcE,OAAd,CAAsBc,QAAtB;AACD,WAFD,EAEG,UAAAb,KAAK,EAAI;AACV,mBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,WAJD;AAKD;;;;;;;uBApCU+S,sB,EAAsB,gJ,EAAA,uH,EAAA,kJ,EAAA,sI;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,yT;AAAA;AAAA;ACXnC;;AACI;;AACI;;AACI;;AAAoB;AAAA;AAAA;;AAApB;;AACA;;AAAQ;AAAA,mBAAS,IAAA/D,QAAA,EAAT;AAAmB,WAAnB;;AAAsE;;AAAO;;AACrF;;AAA0C;AAAA,mBAAS,IAAApG,IAAA,EAAT;AAAe,WAAf;;AAAiB;;AAAI;;AACnE;;AACJ;;AACJ;;;;AALgC;;AAAA;;;;;;;;;sEDQnBmK,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTvV,kBAAQ,EAAE,oBADD;AAETqJ,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;gBAOhC;;;;;;;;;;;;;;;;;;;;AElBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AAiBwC;;AACI;;AAAsB;;AACtB;;AACJ;;;;;;AAF0B;;AAAA;;;;;;AAG1B;;AACI;;AAAsB;;AAAG;;AAC7B;;;;;;AAwBA;;AACI;;AAAsB;;AAA0B;;AACpD;;;;;;AAD0B;;AAAA;;;;;;AAE1B;;AACI;;AAAsB;;AAAG;;AAC7B;;;;;;AA0BA;;AAAiD;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AACjD;;AAAmD;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AA0BnD;;AACI;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AACJ;;AACI;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AAsBpB;;AACI;;AACJ;;;;;;AADmB;;AAAA;;;;;;AAEnB;;AACI;;AACJ;;;;;;AAiBA;;AACI;;AACI;;AACJ;;AACJ;;;;;;AAFwB;;AAAA;;;;;;AAGxB;;AACI;;AACI;;AACJ;;AACJ;;;;;;AAiBA;;AAGI;;AACJ;;;;;;AADqB;;AAAA,8GAAoC,cAApC,EAAoC,qBAApC,EAAoC,UAApC,EAAoC,0BAApC;;;;;;AAVjC;;AACI;;AACI;;AACI;;AACI;;AAAuB;;AAAmB;;AAC1C;;AAAyB;;AAAuB;;AACpD;;AACA;;AAKA;;AACI;;AACA;;AACI;;AAA+B;;AACnC;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAbiB;;AAAA;;;;;;AAoBD;;AAA2D;;AAAQ;;;;;;AACnE;;AAAwC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGxC;;AAA2D;;AAAK;;;;;;AAChE;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAGxC;;AAA2D;;AAAE;;;;;;AAC7D;;AAAwC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGxC;;AACI;;AAAY;;;;;;AAChB;;AACI;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AAGJ;;AAA2D;;AAAK;;;;;;AAChE;;AAAwC;;;;AACxC;;;;;;AADwC;;AAAA;;;;;;AAG5C;;;;;;AACA;;;;;;;;;;AA5BhB;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AAEA;;AAEJ;;AACA;;AACI;;AACA;;AAEJ;;AACA;;AACA;;AACJ;;AACA;;AAEJ;;AACJ;;AACJ;;;;;;AA/BkD;;AAAA;;AAwBf;;AAAA;;AACP;;AAAA;;AAEU;;AAAA,2JAAwB,cAAxB,EAAwB,IAAxB;;;;;;AA9N9C;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAc;;AAC5C;;AAIA;;AAGJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAc;;AAC5C;;AAGA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAe;;AAC7C;;AACA;;AACA;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAuB;;AACrD;;AAEA;;AAEA;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAuB;;AAAW;;AAClC;;AAAyB;;AAAwB;;AACrD;;AACA;;AAGA;;AAGA;;AACI;;AACA;;AACI;;AAA4B;;AAChC;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAuB;;AAAa;;AACpC;;AAAyB;;AAAe;;AAC5C;;AACA;;AAKA;;AAKA;;AACI;;AACA;;AACI;;AAA+B;;AACnC;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAqBJ;;AACA;;AAmCJ;;AACJ;;;;;;AApN6C;;AAAA;;AAIA;;AAAA;;AA0BA;;AAAA;;AAGA;;AAAA;;AA4BF;;AAAA;;AACA;;AAAA;;AA0BA;;AAAA;;AAEA;;AAAA;;AAuBd;;AAAA;;AAGA;;AAAA;;AAmBA;;AAAA;;AAKA;;AAAA;;AAcA;;AAAA;;AAsBhB;;AAAA;;;;;;AAqCb;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAsB;;AACpD;;AAAsB;;AAAW;;AACjC;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AAA8B;;AAClC;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAjB8D;;AAAA;;;;QDvPjDmM,2B;;;AAEX,2CAAoBnK,UAApB,EACUoK,KADV,EAEUnL,aAFV,EAEwC;AAAA;;AAFpB,aAAAe,UAAA,GAAAA,UAAA;AACV,aAAAoK,KAAA,GAAAA,KAAA;AACA,aAAAnL,aAAA,GAAAA,aAAA;AAMV,aAAAoL,kBAAA,GAAqB,KAArB;AAYA,aAAAC,aAAA,GAA8B,IAA9B,CAlBwC,CAmBxC;;AACA,aAAAC,YAAA,GAA6B,IAA7B;AAIA,aAAAhR,QAAA,GAAW,IAAI,0EAAJ,EAAX;AACA,aAAAuC,kBAAA,GAA+B,CAAC,cAAD,EAAiB,UAAjB,EAA6B,YAA7B,EAA2C,oBAA3C,EAAiE,cAAjE,CAA/B;AAEA,aAAA0O,QAAA,GAAW,IAAX,CA3BwC,CACtC;AACA;AACA;AACD;;;;mCA2BO;AAAA;;AAEN,eAAKJ,KAAL,CAAWK,MAAX,CAAkBvQ,SAAlB,CAA4B,UAAAuQ,MAAM,EAAI;AAEpC,mBAAI,CAACxL,aAAL,CAAmBuG,gBAAnB;;AAGA,mBAAI,CAACkF,cAAL,GAAsB,CAACD,MAAM,CAAC,IAAD,CAAP,IAAiB,CAAvC;;AACA,gBAAI,OAAI,CAACxL,aAAL,CAAmB3D,iBAAnB,CAAqCf,MAArC,KAAgD,CAApD,EAAuD;AACrD,qBAAI,CAAC0E,aAAL,CAAmBK,oBAAnB,GAA0CpF,SAA1C,CAAoD,UAACY,IAAD,EAA0B;AAC5E,uBAAI,CAACmE,aAAL,CAAmB3D,iBAAnB,GAAuCR,IAAvC;AACA,uBAAI,CAAC6P,kBAAL,GAA0B,OAAI,CAAC1L,aAAL,CAAmB3D,iBAAnB,CAAqC4B,IAArC,CAA0C,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAAC7J,EAAF,KAAS,OAAI,CAACoX,cAAlB;AAAA,iBAA3C,EAA6EpQ,KAAvG;AACD,eAHD;AAID,aALD,MAKO;AACL,qBAAI,CAACqQ,kBAAL,GAA0B,OAAI,CAAC1L,aAAL,CAAmB3D,iBAAnB,CAAqC4B,IAArC,CAA0C,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAAC7J,EAAF,KAAS,OAAI,CAACoX,cAAlB;AAAA,eAA3C,EAA6EpQ,KAAvG;AACD;;AACD,mBAAI,CAACsQ,SAAL,GAAiB,IAAjB;;AACA,mBAAI,CAAC5K,UAAL,CAAgB6K,qBAAhB,CAAsC,OAAI,CAACH,cAA3C,EAA2DxQ,SAA3D,CAAqE,UAAAY,IAAI,EAAI;AAC3E,kBAAIA,IAAI,CAAC,kBAAD,CAAJ,CAAyBP,MAAzB,KAAoC,CAAxC,EAA2C;AACzC,uBAAI,CAACiQ,QAAL,GAAgB,KAAhB;AACD,eAFD,MAGK;AACH;AACAnV,uBAAO,CAACC,GAAR,CAAYwF,IAAZ;AAEA,uBAAI,CAACvB,QAAL,CAAcuB,IAAd,GAAqBA,IAAI,CAAC,kBAAD,CAAzB;AACAgQ,0BAAU,CAAC;AAAA,yBAAM,OAAI,CAACvR,QAAL,CAAc2C,SAAd,GAA0B,OAAI,CAACA,SAArC;AAAA,iBAAD,CAAV;AACA,uBAAI,CAAC6O,cAAL,GAAsBjQ,IAAI,CAAC,gBAAD,CAA1B;AACA,uBAAI,CAACkQ,0BAAL,GAAkClQ,IAAI,CAAC,4BAAD,CAAtC;AACA,uBAAI,CAACwP,aAAL,GAAqBxP,IAAI,CAAC,eAAD,CAAzB;AACA,uBAAI,CAACyP,YAAL,GAAoBzP,IAAI,CAAC,cAAD,CAAxB;AACA,uBAAI,CAACmQ,gBAAL,GAAwBnQ,IAAI,CAAC,iCAAD,CAAJ,CAAwC,kBAAxC,CAAxB;AACA,uBAAI,CAACoQ,aAAL,GAAoBpQ,IAAI,CAAC,iCAAD,CAAJ,CAAwC,eAAxC,CAApB;;AAEA,oBAAI,OAAI,CAACmQ,gBAAL,GAAwB,CAAxB,IAA6B,OAAI,CAACC,aAAL,GAAqB,CAAtD,EAAwD;AACtD7V,yBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,OAAI,CAAC2V,gBAArC,EAAuD,OAAI,CAACC,aAA5D;AAEA,yBAAI,CAACb,kBAAL,GAA0B,IAA1B;AACD;;AACD,uBAAI,CAACc,cAAL,GAAsBrQ,IAAI,CAAC,gBAAD,CAA1B;AACA,uBAAI,CAACsQ,QAAL,GAAgBtQ,IAAI,CAAC,UAAD,CAApB;AACA,uBAAI,CAACqK,YAAL,GAAoBrK,IAAI,CAAC,cAAD,CAAxB;AACA,uBAAI,CAACqJ,aAAL,GAAqBrJ,IAAI,CAAC,eAAD,CAAzB;AAEA,uBAAI,CAAC0P,QAAL,GAAgB,IAAhB;AACD;;AACD,qBAAI,CAACI,SAAL,GAAiB,KAAjB;AACD,aA9BD;AA+BD,WA9CD;AAgDD;;;;;;;uBArFUT,2B,EAA2B,gJ,EAAA,+H,EAAA,8I;AAAA,K;;;YAA3BA,2B;AAA2B,8C;AAAA;AAAA;;;;;;;;;;;;;;;ACjBxC;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AACtE;;AACJ;;AACJ;;AACJ;;AACA;;AAUA;;AAqOA;;;;AApPmD;;AAAA;;AAK9C;;AAAA;;AAUA;;AAAA;;AAqOA;;AAAA;;;;;;;;;;sED1OQA,2B,EAA2B;cALvC,uDAKuC;eAL7B;AACTzV,kBAAQ,EAAE,yBADD;AAETqJ,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,qCAAD;AAHF,S;AAK6B,Q;;;;;;;;;;gBAkCrC,uD;iBAAU,W;;;;;;;;;;;;;;;;;;;;AEnDb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaU;;AAGE;;AACF;;;;;;AACA;;AAGE;;AACF;;;;;;AACA;;AAGE;;AACF;;;;;;AAiBA;;AAEE;;AACF;;;;;;;;;;;;;;;;;;;;;;;;QDhCGqN,qB;;;AAEX,qCAAoBpM,aAApB,EACUlI,QADV,EAEUnC,MAFV,EAGUX,WAHV,EAIS4I,SAJT,EAIuD;AAAA;;AAJnC,aAAAoC,aAAA,GAAAA,aAAA;AACV,aAAAlI,QAAA,GAAAA,QAAA;AACA,aAAAnC,MAAA,GAAAA,MAAA;AACA,aAAAX,WAAA,GAAAA,WAAA;AACD,aAAA4I,SAAA,GAAAA,SAAA;AAIT,aAAAyO,eAAA,GAA4B,EAA5B;AAGA,aAAAC,QAAA,GAA8C,EAA9C;AANK;;;;mCAQG;AACN,eAAK,IAAIxJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,iBAAKwJ,QAAL,CAAclR,IAAd,CAAmB;AAAE/G,gBAAE,EAAEyO,CAAN;AAASuG,oBAAM,EAAE;AAAjB,aAAnB;AACD;;AACDjT,iBAAO,CAACC,GAAR,CAAY,KAAKiW,QAAjB;AAEA,eAAKC,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9B;AACA,qBAAS,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWrM,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAApB,CAFqB;AAG9B,qBAAS,IAAI,0DAAJ,CAAgB,CAAhB,EAAmB,CAAC,0DAAWF,QAAZ,EAAsB,0DAAWsM,GAAX,CAAe,EAAf,CAAtB,CAAnB;AAHqB,WAAd,CAAlB;AAKD;;;uCAEcjS,U,EAAoB;AAEjC,cAAI,KAAK8R,eAAL,CAAqBpO,IAArB,CAA0B,UAAAwO,CAAC;AAAA,mBAAIA,CAAC,KAAKlS,UAAV;AAAA,WAA3B,MAAqD8D,SAAzD,EAAoE;AAClE,gBAAI,KAAKgO,eAAL,CAAqB/Q,MAArB,GAA8B,EAAlC,EAAsC;AACpC,mBAAK+Q,eAAL,CAAqBjR,IAArB,CAA0Bb,UAA1B;AACA,mBAAK+R,QAAL,CAAcrO,IAAd,CAAmB,UAAAwO,CAAC;AAAA,uBAAIA,CAAC,CAACpY,EAAF,KAASkG,UAAb;AAAA,eAApB,EAA6C8O,MAA7C,GAAsD,IAAtD;AACD;AACF,WALD,MAMK;AACH,iBAAKgD,eAAL,CAAqB3N,MAArB,CAA4B,KAAK2N,eAAL,CAAqBK,SAArB,CAA+B,UAAAD,CAAC;AAAA,qBAAIA,CAAC,KAAKlS,UAAV;AAAA,aAAhC,CAA5B,EAAmF,CAAnF;AACA,iBAAK+R,QAAL,CAAcrO,IAAd,CAAmB,UAAAwO,CAAC;AAAA,qBAAIA,CAAC,CAACpY,EAAF,KAASkG,UAAb;AAAA,aAApB,EAA6C8O,MAA7C,GAAsD,KAAtD;AACD;AACF;;;qCAEYhV,E,EAAY;AACvB,iBAAO,IAAP;AACD;;;uCAGc;AAAA;;AACb,eAAKmI,MAAL,GAAe;AACbnB,iBAAK,EAAE,KAAKkR,UAAL,CAAgBjM,KAAhB,CAAsB,OAAtB,CADM;AAEbqM,wBAAY,EAAE,KAAKJ,UAAL,CAAgBjM,KAAhB,CAAsB,OAAtB,CAFD;AAGblE,4BAAgB,EAAE;AAHL,WAAf;;AAKA,cAAI,KAAKiQ,eAAL,CAAqB/Q,MAArB,IAA+B,CAAnC,EAAsC;AACpC,iBAAK0E,aAAL,CAAmB4M,eAAnB,CAAmC,KAAKpQ,MAAxC,EAAgDvB,SAAhD,CAA0D,YAAM;AAC9D,qBAAI,CAAC+E,aAAL,CAAmB6M,qBAAnB,CAAyC,OAAI,CAACR,eAA9C,EAA+DpR,SAA/D,CAAyE,YAAM;AAC7E,uBAAI,CAACnD,QAAL,CAAcE,OAAd,CAAsB,wCAAtB;;AACA,uBAAI,CAAC4F,SAAL,CAAegD,KAAf,CAAqB,IAArB;AACD,eAHD,EAGG,UAAA3I,KAAK,EAAI;AACV,uBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAAC6U,UAA1B;AACD,eALD;AAMD,aAPD,EAOG,UAAA7U,KAAK,EAAI;AACV,qBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAAC6U,UAA1B;AACD,aATD;AAUD,WAXD,MAYK;AACH,iBAAKhV,QAAL,CAAcG,KAAd,CAAoB,0CAApB;AACD;AACF;;;+BAEM;AACL,eAAK2F,SAAL,CAAegD,KAAf,CAAqB,KAArB;AACD;;;;;;;uBAxEUwL,qB,EAAqB,8I,EAAA,kJ,EAAA,uH,EAAA,0I,EAAA,sI;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,gB;AAAA,c;AAAA,o9J;AAAA;AAAA;ACflC;;AACE;;AACE;;AAA+B;AAAA,mBAAY,IAAAW,YAAA,EAAZ;AAA0B,WAA1B;;AAC7B;;AACE;;AACE;;AACE;;AACuE;;AAAY;;AACrF;;AACA;;AAIA;;AAKA;;AAKA;;AAKF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACuE;;AAAK;;AAC9E;;AACA;;AAGA;;AACE;;AACuE;;AAAC;;AAC1E;;AACA;;AAIF;;AACF;;AAEA;;AACE;;AAEuF;;AAAa;;AACtG;;AACF;;AACA;;AACE;;AAA2B;AAAA,mBAAS,IAAAlM,IAAA,EAAT;AAAe,WAAf;;AAAiD;;AAAI;;AAClF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AAEA;;AACwB;;AACxB;;AACF;;AACF;;AAGA;;AAEE;;AACE;;AACA;;AAAK;AAAA,mBAAS,IAAAmM,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAC8B;;AAAI;;AACvC;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAC8B;;AAAU;;AAC7C;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAC8B;;AAAI;;AACvC;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAC8B;;AAAO;;AAC1C;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAC8B;;AAAM;;AACzC;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAC8B;;AAAS;;AAC5C;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAC8B;;AAAM;;AAC3C;;AAEA;;AACE;;AACA;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAC8B;;AAAY;;AAC/C;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAC8B;;AAAW;;AAC9C;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAG;;AACtC;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAK;;AAC1C;;AACA;;AACE;;AACA;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAa;;AAChD;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAiB;;AACpD;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAmB;;AACtD;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAM;;AACzC;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAO;;AAC1C;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAO;;AAC5C;;AACA;;AACE;;AACA;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAQ;;AAC3C;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAW;;AAC9C;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAS;;AAC9C;;AACA;;AACE;;AACA;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAM;;AACzC;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAkB;;AACrD;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAe;;AAClD;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAiB;;AAEtD;;AACA;;AACE;;AACA;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAK;;AACxC;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAY;;AAC/C;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAc;;AACjD;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAe;;AAClD;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAgB;;AACrD;;AACA;;AACE;;AACA;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAc;;AACjD;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAkB;;AACrD;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAmB;;AACxD;;AACA;;AACE;;AACA;;AAAK;AAAA,mBAAS,IAAAA,cAAA,CAAe,EAAf,CAAT;AAA2B,WAA3B;;AAC8B;;AAAK;;AAC1C;;AACF;;AAGF;;;;AAzKU;;AAAA;;AAIgE;;AAAA;;AAGzD;;AAAA;;AAKL;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAU2D;;AAAA;;AAGtD;;AAAA;;AAI0B;;AAAA;;AAI/B;;AAAA;;AAQF;;AAAA,yIAA+D,SAA/D,EAA+D,+HAA/D;;AAyB6B;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAMA;;AAAA;;AAEA;;AAAA;;AAEC;;AAAA;;AAEA;;AAAA;;AAKA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAKA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAKA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAMA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAKA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAKA;;AAAA;;;;;;;;;sEDtJ3BZ,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT3W,kBAAQ,EAAE,mBADD;AAETqJ,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEflC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaoB;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AAgBA;;AAEI;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAzCZ;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AACrD;;AACI;;AACI;;AACI;;AACmE;;AAAY;;AACnF;;AACA;;AAIA;;AAIA;;AAIA;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACmE;;AAAK;;AAC5E;;AACA;;AAGI;;AACI;;AAC+D;;AAAC;;AACpE;;AACJ;;AAIJ;;AACJ;;AAEA;;AACI;;AAC8D;;AAAW;;AAC7E;;AACJ;;;;;;AAjD4B;;AAImB;;AAAA;;AAG5B;;AAAA;;AAIF;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAS8B;;AAAA;;AAG5B;;AAAA;;AAIgC;;AAAA;;AAGlC;;AAAA;;AAQ2C;;AAAA,4GAAmC,SAAnC,EAAmC,mGAAnC;;;;QDpCvDkO,mB;;;AAEX,mCAAoBjN,aAApB,EACUlI,QADV,EAES8F,SAFT,EAEuD;AAAA;;AAFnC,aAAAoC,aAAA,GAAAA,aAAA;AACV,aAAAlI,QAAA,GAAAA,QAAA;AACD,aAAA8F,SAAA,GAAAA,SAAA;AAAiD;;;;mCAKlD;AACN,eAAKrB,aAAL,GAAqB,KAAKyD,aAAL,CAAmBzD,aAAxC;AACA,eAAK2Q,cAAL,GAAsB,IAAI,wDAAJ,CAAc;AAClC,qBAAS,IAAI,0DAAJ,CAAgB,KAAK3Q,aAAL,CAAmBlB,KAAnC,EAA0C,CAAC,0DAAW6E,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWC,SAAX,CAAqB,EAArB,CAA/C,CAA1C,CADyB;AAElC,qBAAS,IAAI,0DAAJ,CAAgB,KAAK7D,aAAL,CAAmBoQ,YAAnC,EAAiD,0DAAWH,GAAX,CAAe,EAAf,CAAjD;AAFyB,WAAd,CAAtB;AAID,S,CACD;AACA;;;;qCACa;AAAA;;AACX,eAAKW,YAAL,GAAqB;AACnB9R,iBAAK,EAAE,KAAK6R,cAAL,CAAoB5M,KAApB,CAA0B,OAA1B,CADY;AAEnBqM,wBAAY,EAAE,KAAKO,cAAL,CAAoB5M,KAApB,CAA0B,OAA1B,CAFK;AAGnBlE,4BAAgB,EAAE,KAAKG,aAAL,CAAmBH;AAHlB,WAArB;AAMA,eAAK4D,aAAL,CAAmBoN,UAAnB,CAA8B,KAAKD,YAAnC,EAAiDlS,SAAjD,CAA2D,UAAAnC,QAAQ,EAAI;AACrE,mBAAI,CAAChB,QAAL,CAAcE,OAAd,CAAsB,0CAAtB;AACD,WAFD,EAEG,UAAAC,KAAK,EAAI;AACV,mBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,WAJD;AAKD;;;iCAEQ;AACP,eAAK2F,SAAL,CAAegD,KAAf;AACD;;;;;;;uBAlCUqM,mB,EAAmB,8I,EAAA,kJ,EAAA,sI;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,c;AAAA,a;AAAA,8lB;AAAA;AAAA;ACZhC;;AACI;;AACI;;AAmDJ;;AACA;;AACI;;AAAQ;AAAA,mBAAS,IAAA/F,MAAA,EAAT;AAAiB,WAAjB;;AAAmD;;AAAI;;AACnE;;AACJ;;;;AAvDc;;AAAA;;;;;;;;;sEDUD+F,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTxX,kBAAQ,EAAE,iBADD;AAETqJ,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AA8EgD;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AACtE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAoC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAAgC;;AACvE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAqC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA5B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AACtE;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA7BmD;;AAAA;;AAgBQ;;AAAA;;;;;;AAoC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAAgC;;AACvE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAoC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AACtE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAsC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA7B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AAClE;;AAAyB;;AACzB;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA9BmD;;AAAA;;AACV;;AAAA;;AAgBkB;;AAAA;;;;;;AAqC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAAiC;;AACxE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAoC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AACtE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAqC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAAgC;;AACvE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAoC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AACtE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAuBvD;;AACI;;AACJ;;;;;;AADmB;;AAAA;;;;;;AAEnB;;AAAuD;;AACvD;;;;;;AADuD;;AAAA;;;;;;AAgBvD;;AACI;;AACJ;;;;;;AADgC;;AAAA,oGAAyB,iBAAzB,EAAyB,oBAAzB;;;;;;AAEhC;;AAAuD;;AACvD;;;;;;AADuD;;AAAA;;;;;;;;AAnc/E;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAsC;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAoE;;AAAQ;;AAC1H;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAsC;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAA2D;;AAAI;;AAC7G;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAoCA;;AAoCA;;AAqCA;;AAoCA;;AAoCA;;AAuCA;;AAoCA;;AAqCA;;AAoCA;;AAoCJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAuB;;AAAW;;AAClC;;AAAyB;;AAAgB;;AAC7C;;AACA;;AACI;;AAGA;;AAEJ;;AACA;;AACI;;AACA;;AACI;;AAA4B;;AAChC;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAuB;;AAAmB;;AAC1C;;AAAyB;;AAAgB;;AAC7C;;AACA;;AACI;;AAGA;;AAEJ;;AACA;;AACI;;AACA;;AACI;;AAA4B;;AAChC;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AACJ;;;;;;AA1ZyB;;AAAA;;AAoCA;;AAAA;;AAoCA;;AAAA;;AAqCA;;AAAA;;AAoCA;;AAAA;;AAoCA;;AAAA;;AAuCA;;AAAA;;AAoCA;;AAAA;;AAqCA;;AAAA;;AAoCA;;AAAA;;AA0CwB;;AAAA;;AAGpB;;AAAA;;AAGF;;AAAA;;AAasB;;AAAA;;AAGpB;;AAAA;;AAGF;;AAAA;;;;QD9bdsO,6B;;;AAEX,6CAAoBtN,cAApB,EAA4DC,aAA5D,EAA0F;AAAA;;AAAtE,aAAAD,cAAA,GAAAA,cAAA;AAAwC,aAAAC,aAAA,GAAAA,aAAA;AAE5D,aAAAsN,KAAA,GAAgC;AAAEjT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAhC;AACA,aAAAgT,MAAA,GAAiC;AAAElT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAjC;AACA,aAAAiT,KAAA,GAAgC;AAAEnT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAhC;AACA,aAAAkT,MAAA,GAAiC;AAAEpT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAjC;AACA,aAAAmT,KAAA,GAAgC;AAAErT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAhC;AACA,aAAAoT,KAAA,GAAgC;AAAEtT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAhC;AACA,aAAAqT,OAAA,GAAkC;AAAEvT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAlC;AACA,aAAAsT,KAAA,GAAgC;AAAExT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAhC;AACA,aAAAuT,MAAA,GAAiC;AAAEzT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAjC;AACA,aAAAwT,KAAA,GAAgC;AAAE1T,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAhC;AAIA,aAAAY,UAAA,GAA6B,EAA7B;AACA,aAAA6S,WAAA,GAAc,CAAd;AACA,aAAAC,SAAA,GAAoB,EAApB;AAjB6F;;;;mCAmBrF;AAAA;;AACN,eAAKC,IAAL,GAAY,IAAI1N,IAAJ,CAASA,IAAI,CAAC2N,GAAL,EAAT,CAAZ;AACA,eAAKD,IAAL,CAAUE,QAAV,CAAmB,KAAKF,IAAL,CAAUxN,QAAV,KAAuB,CAA1C;AACAtK,iBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAK6X,IAA/B;AAEA,eAAKD,SAAL,GAAiB,KAAKC,IAAL,CAAUG,cAAV,CAAyB,SAAzB,EAAoC;AAAE9S,iBAAK,EAAE;AAAT,WAApC,CAAjB;;AACA,cAAI,KAAKyE,aAAL,CAAmB3D,iBAAnB,CAAqCf,MAArC,KAAgD,CAApD,EAAuD;AACrD,iBAAK0E,aAAL,CAAmBK,oBAAnB,GAA0CpF,SAA1C,CAAoD,UAACY,IAAD,EAA0B;AAC5E,qBAAI,CAACmE,aAAL,CAAmB3D,iBAAnB,GAAuCR,IAAvC;AACA,qBAAI,CAACV,UAAL,GAAkB,OAAI,CAAC6E,aAAL,CAAmB3D,iBAArC;AACD,aAHD;AAID,WALD,MAKO;AACL,iBAAKlB,UAAL,GAAkB,KAAK6E,aAAL,CAAmB3D,iBAArC;AACD;;AACD,eAAKiS,OAAL;AACD;;;kCAGS;AAAA;;AACR,eAAKvO,cAAL,CAAoBwO,mBAApB,CAAwC,KAAKP,WAA7C,EAA0D/S,SAA1D,CAAoE,UAACX,QAAD,EAAwC;AAC1G,mBAAI,CAACqR,SAAL,GAAiB,IAAjB,CAD0G,CAE1G;;AACA,mBAAI,CAAC6C,WAAL,GAAmBlU,QAAQ,CAAC,sBAAD,CAA3B,CAH0G,CAI1G;;AAEA,mBAAI,CAAC4L,YAAL,GAAoB5L,QAAQ,CAAC,cAAD,CAA5B;;AACA,gBAAIA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,EAAiDgB,MAAjD,GAA0D,CAA9D,EAAiE;AAC/D,qBAAI,CAACgS,KAAL,CAAWhT,QAAX,GAAsBA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,CAAtB;AACA,qBAAI,CAACgT,KAAL,CAAW/S,UAAX,GAAwBD,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,YAArC,CAAxB;AACA,qBAAI,CAACgT,KAAL,CAAWjT,YAAX,GAA0BC,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,cAArC,CAA1B;AACD;;AACD,gBAAIA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,EAAiDgB,MAAjD,GAA0D,CAA9D,EAAiE;AAC/D,qBAAI,CAACiS,MAAL,CAAYjT,QAAZ,GAAuBA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,CAAvB;AACA,qBAAI,CAACiT,MAAL,CAAYhT,UAAZ,GAAyBD,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,YAArC,CAAzB;AACA,qBAAI,CAACiT,MAAL,CAAYlT,YAAZ,GAA2BC,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,cAArC,CAA3B;AACD;;AACD,gBAAIA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,EAAiDgB,MAAjD,GAA0D,CAA9D,EAAiE;AAC/D,qBAAI,CAACkS,KAAL,CAAWlT,QAAX,GAAsBA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,CAAtB;AACA,qBAAI,CAACkT,KAAL,CAAWjT,UAAX,GAAwBD,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,YAArC,CAAxB;AACA,qBAAI,CAACkT,KAAL,CAAWnT,YAAX,GAA0BC,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,cAArC,CAA1B;AACD;;AACD,gBAAIA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,EAAiDgB,MAAjD,GAA0D,CAA9D,EAAiE;AAC/D,qBAAI,CAACmS,MAAL,CAAYnT,QAAZ,GAAuBA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,CAAvB;AACA,qBAAI,CAACmT,MAAL,CAAYlT,UAAZ,GAAyBD,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,YAArC,CAAzB;AACA,qBAAI,CAACmT,MAAL,CAAYpT,YAAZ,GAA2BC,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,cAArC,CAA3B;AACD;;AACD,gBAAIA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,EAAiDgB,MAAjD,GAA0D,CAA9D,EAAiE;AAC/D,qBAAI,CAACoS,KAAL,CAAWpT,QAAX,GAAsBA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,CAAtB;AACA,qBAAI,CAACoT,KAAL,CAAWnT,UAAX,GAAwBD,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,YAArC,CAAxB;AACA,qBAAI,CAACoT,KAAL,CAAWrT,YAAX,GAA0BC,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,cAArC,CAA1B;AACD;;AACD,gBAAIA,QAAQ,CAAC,uBAAD,CAAR,CAAkCgB,MAAlC,GAA2C,CAA/C,EAAkD;AAChD,kBAAIhB,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,EAAiDgB,MAAjD,GAA0D,CAA9D,EAAiE;AAC/D,uBAAI,CAACqS,KAAL,CAAWrT,QAAX,GAAsBA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,CAAtB;AACA,uBAAI,CAACqT,KAAL,CAAWpT,UAAX,GAAwBD,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,YAArC,CAAxB;AACA,uBAAI,CAACqT,KAAL,CAAWtT,YAAX,GAA0BC,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,cAArC,CAA1B;AACD;;AACD,kBAAIA,QAAQ,CAAC,uBAAD,CAAR,CAAkCgB,MAAlC,GAA2C,CAA/C,EAAkD;AAChD,oBAAIhB,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,EAAiDgB,MAAjD,GAA0D,CAA9D,EAAiE;AAC/D,yBAAI,CAACsS,OAAL,CAAatT,QAAb,GAAwBA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,CAAxB;AACA,yBAAI,CAACsT,OAAL,CAAarT,UAAb,GAA0BD,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,YAArC,CAA1B;AACA,yBAAI,CAACsT,OAAL,CAAavT,YAAb,GAA4BC,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,cAArC,CAA5B;AACD;;AACD,oBAAIA,QAAQ,CAAC,uBAAD,CAAR,CAAkCgB,MAAlC,GAA2C,CAA/C,EAAkD;AAChD,sBAAIhB,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,EAAiDgB,MAAjD,GAA0D,CAA9D,EAAiE;AAC/D,2BAAI,CAACuS,KAAL,CAAWvT,QAAX,GAAsBA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,CAAtB;AACA,2BAAI,CAACuT,KAAL,CAAWtT,UAAX,GAAwBD,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,YAArC,CAAxB;AACA,2BAAI,CAACuT,KAAL,CAAWxT,YAAX,GAA0BC,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,cAArC,CAA1B;AACD;;AACD,sBAAIA,QAAQ,CAAC,uBAAD,CAAR,CAAkCgB,MAAlC,GAA2C,CAA/C,EAAkD;AAChD,wBAAIhB,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,EAAiDgB,MAAjD,GAA0D,CAA9D,EAAiE;AAC/D,6BAAI,CAACwS,MAAL,CAAYxT,QAAZ,GAAuBA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,CAAvB;AACA,6BAAI,CAACwT,MAAL,CAAYvT,UAAZ,GAAyBD,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,YAArC,CAAzB;AACA,6BAAI,CAACwT,MAAL,CAAYzT,YAAZ,GAA2BC,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,cAArC,CAA3B;AACD;;AACD,wBAAIA,QAAQ,CAAC,uBAAD,CAAR,CAAkCgB,MAAlC,GAA2C,CAA/C,EAAkD;AAChD,0BAAIhB,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,EAAiDgB,MAAjD,GAA0D,CAA9D,EAAiE;AAC/D,+BAAI,CAACyS,KAAL,CAAWzT,QAAX,GAAsBA,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,UAArC,CAAtB;AACA,+BAAI,CAACyT,KAAL,CAAWxT,UAAX,GAAwBD,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,YAArC,CAAxB;AACA,+BAAI,CAACyT,KAAL,CAAW1T,YAAX,GAA0BC,QAAQ,CAAC,uBAAD,CAAR,CAAkC,CAAlC,EAAqC,cAArC,CAA1B;AACD;AACF;AACF;AACF;AACF;AACF;;AACD,mBAAI,CAACqR,SAAL,GAAiB,KAAjB,CAnE0G,CAoE1G;AACD,WArED;AAsED;;;wCAEe;AACd,eAAKuC,IAAL,GAAY,IAAI1N,IAAJ,CAASA,IAAI,CAAC2N,GAAL,EAAT,CAAZ;AACA,eAAKH,WAAL;AACA,eAAKE,IAAL,CAAUE,QAAV,CAAmB,KAAKF,IAAL,CAAUxN,QAAV,KAAuB,KAAKsN,WAA/C;AACA5X,iBAAO,CAACC,GAAR,CAAY,KAAK6X,IAAjB;AACA9X,iBAAO,CAACC,GAAR,CAAY,KAAK2X,WAAjB;AAEA,eAAKC,SAAL,GAAiB,KAAKC,IAAL,CAAUG,cAAV,CAAyB,SAAzB,EAAoC;AAAE9S,iBAAK,EAAE;AAAT,WAApC,CAAjB;AACA,eAAKkT,SAAL;AACA,eAAKH,OAAL;AACD;;;+BAEM;AACL,cAAI,KAAKN,WAAL,GAAmB,CAAnB,KAAyB,CAA7B,EAAgC;AAC9B,iBAAKA,WAAL;AACA,iBAAKE,IAAL,GAAY,IAAI1N,IAAJ,CAASA,IAAI,CAAC2N,GAAL,EAAT,CAAZ;AACA,iBAAKD,IAAL,CAAUE,QAAV,CAAmB,KAAKF,IAAL,CAAUxN,QAAV,KAAuB,KAAKsN,WAA/C;AAEA,iBAAKC,SAAL,GAAiB,KAAKC,IAAL,CAAUG,cAAV,CAAyB,SAAzB,EAAoC;AAAE9S,mBAAK,EAAE;AAAT,aAApC,CAAjB;AACA,iBAAKkT,SAAL;AACA,iBAAKH,OAAL;AAED;AACF;;;oCAEW;AACV,eAAKhB,KAAL,GAAa;AAAEjT,wBAAY,EAAE,EAAhB;AAAoBC,oBAAQ,EAAE,EAA9B;AAAkCC,sBAAU,EAAE;AAA9C,WAAb;AACA,eAAKgT,MAAL,GAAc;AAAElT,wBAAY,EAAE,EAAhB;AAAoBC,oBAAQ,EAAE,EAA9B;AAAkCC,sBAAU,EAAE;AAA9C,WAAd;AACA,eAAKiT,KAAL,GAAa;AAAEnT,wBAAY,EAAE,EAAhB;AAAoBC,oBAAQ,EAAE,EAA9B;AAAkCC,sBAAU,EAAE;AAA9C,WAAb;AACA,eAAKkT,MAAL,GAAc;AAAEpT,wBAAY,EAAE,EAAhB;AAAoBC,oBAAQ,EAAE,EAA9B;AAAkCC,sBAAU,EAAE;AAA9C,WAAd;AACA,eAAKmT,KAAL,GAAa;AAAErT,wBAAY,EAAE,EAAhB;AAAoBC,oBAAQ,EAAE,EAA9B;AAAkCC,sBAAU,EAAE;AAA9C,WAAb;AACA,eAAKoT,KAAL,GAAa;AAAEtT,wBAAY,EAAE,EAAhB;AAAoBC,oBAAQ,EAAE,EAA9B;AAAkCC,sBAAU,EAAE;AAA9C,WAAb;AACA,eAAKqT,OAAL,GAAe;AAAEvT,wBAAY,EAAE,EAAhB;AAAoBC,oBAAQ,EAAE,EAA9B;AAAkCC,sBAAU,EAAE;AAA9C,WAAf;AACA,eAAKsT,KAAL,GAAa;AAAExT,wBAAY,EAAE,EAAhB;AAAoBC,oBAAQ,EAAE,EAA9B;AAAkCC,sBAAU,EAAE;AAA9C,WAAb;AACA,eAAKuT,MAAL,GAAc;AAAEzT,wBAAY,EAAE,EAAhB;AAAoBC,oBAAQ,EAAE,EAA9B;AAAkCC,sBAAU,EAAE;AAA9C,WAAd;AACA,eAAKwT,KAAL,GAAa;AAAE1T,wBAAY,EAAE,EAAhB;AAAoBC,oBAAQ,EAAE,EAA9B;AAAkCC,sBAAU,EAAE;AAA9C,WAAb;AACA,eAAK2L,YAAL,GAAoB,IAApB;AACA,eAAKsI,WAAL,GAAmB,IAAnB;AACD;;;;;;;uBAtJUnB,6B,EAA6B,gJ,EAAA,8I;AAAA,K;;;YAA7BA,6B;AAA6B,iD;AAAA,c;AAAA,a;AAAA,++D;AAAA;AAAA;ACf1C;;AAUA;;;;AAVK;;AAUA;;AAAA;;;;;;;;;;sEDKQA,6B,EAA6B;cALzC,uDAKyC;eAL/B;AACT5X,kBAAQ,EAAE,4BADD;AAETqJ,qBAAW,EAAE,yCAFJ;AAGTC,mBAAS,EAAE,CAAC,wCAAD;AAHF,S;AAK+B,Q;;;;;;;;;;;;;;;;;;;;;;;;AEf1C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AA2HwC;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AACtE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAoC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAAgC;;AACvE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAqC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA5B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AACtE;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA7BmD;;AAAA;;AAgBQ;;AAAA;;;;;;AAoC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAAgC;;AACvE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAoC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AACtE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAsC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA7B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AAClE;;AAAyB;;AACE;;AAC/B;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA9BmD;;AAAA;;AACV;;AAAA;;AAgBkB;;AAAA;;;;;;AAqC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAAiC;;AACxE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAoC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AACtE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAqC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAAgC;;AACvE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;AAoC/B;;AACI;;AAA8B;;AAAoB;;AAClD;;AAA8B;;AAAwB;;AACtD;;AAA4C;;AAA8B;;AAC1E;;AAAqB;;;;AAAyC;;AAC9D;;AAA8B;;AAAsB;;AACxD;;;;;;AALkC;;AAAA;;AACA;;AAAA;;AACc;;AAAA;;AACvB;;AAAA;;AACS;;AAAA;;;;;;AA3B9D;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAmC;;AAA+B;;AACtE;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAI;;AAC3C;;AAA8B;;AAAK;;AACnC;;AAA4C;;AAAO;;AACnD;;AAA8B;;AAAI;;AAClC;;AAA8B;;AAAC;;AACnC;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA5BmD;;AAAA;;AAeQ;;AAAA;;;;;;;;AAncvE;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAsC;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAC/B;;AAAW;;AAC7D;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA6D;;AAAY;;AACzE;;AAAsC;;AAAe;;AACrD;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA0D;;AAAY;;AACtE;;AAAsC;;AAAgB;;AACtD;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA8B;;AAA2C;;AAC7E;;AACA;;AAEJ;;AACA;;AACI;;AACA;;AACI;;AACA;;AAAe;;AAAiD;;AACpE;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAoCA;;AAoCA;;AAqCA;;AAoCA;;AAoCA;;AAuCA;;AAoCA;;AAqCA;;AAoCA;;AAoCJ;;AACJ;;AACJ;;;;;;AA3a0E;;AAAA;;AA0BA;;AAAA;;AAkBhB;;AAAA;;AAEgB;;AAAA,8FAAmB,OAAnB,EAAmB,uBAAnB,EAAmB,MAAnB,EAAmB,aAAnB;;AAczD;;AAAA;;AAoCA;;AAAA;;AAoCA;;AAAA;;AAqCA;;AAAA;;AAoCA;;AAAA;;AAoCA;;AAAA;;AAuCA;;AAAA;;AAoCA;;AAAA;;AAqCA;;AAAA;;AAoCA;;AAAA;;;;QDraJ2P,wB;;;AAEX,wCAAoB3O,cAApB,EACU/K,WADV,EAES2H,MAFT,EAGU0J,WAHV,EAIU8E,KAJV,EAIiC;AAAA;;AAJb,aAAApL,cAAA,GAAAA,cAAA;AACV,aAAA/K,WAAA,GAAAA,WAAA;AACD,aAAA2H,MAAA,GAAAA,MAAA;AACC,aAAA0J,WAAA,GAAAA,WAAA;AACA,aAAA8E,KAAA,GAAAA,KAAA;AACV,aAAAmC,KAAA,GAAgC;AAAEjT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAhC;AACA,aAAAgT,MAAA,GAAiC;AAAElT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAjC;AACA,aAAAiT,KAAA,GAAgC;AAAEnT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAhC;AACA,aAAAkT,MAAA,GAAiC;AAAEpT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAjC;AACA,aAAAmT,KAAA,GAAgC;AAAErT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAhC;AACA,aAAAoT,KAAA,GAAgC;AAAEtT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAhC;AACA,aAAAqT,OAAA,GAAkC;AAAEvT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAlC;AACA,aAAAsT,KAAA,GAAgC;AAAExT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAhC;AACA,aAAAuT,MAAA,GAAiC;AAAEzT,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAjC;AACA,aAAAwT,KAAA,GAAgC;AAAE1T,sBAAY,EAAE,EAAhB;AAAoBC,kBAAQ,EAAE,EAA9B;AAAkCC,oBAAU,EAAE;AAA9C,SAAhC;AAQA,aAAA8M,aAAA,GAAgC,EAAhC;AACA,aAAAlM,UAAA,GAA6B,EAA7B;AAnBoC;;;;mCAsB5B;AAAA;;AACN,eAAK9G,EAAL,GAAU,KAAKW,WAAL,CAAiBmB,QAAjB,GAA4BkB,MAAtC;AACA,eAAKsU,SAAL,GAAiB,IAAjB;AACA,eAAK5L,cAAL,CAAoB4O,aAApB,CAAkC,KAAKta,EAAvC,EAA2C4G,SAA3C,CAAqD,UAAC2T,UAAD,EAA+B;AAClF,mBAAI,CAACC,WAAL,GAAmBD,UAAU,CAAC,OAAD,CAA7B;;AACA,mBAAI,CAAC7O,cAAL,CAAoBvG,eAApB,CAAoCyB,SAApC,CAA8C,UAAA6T,OAAO,EAAI;AACvD,qBAAI,CAACC,cAAL,GAAsBD,OAAtB;AACA,qBAAI,CAACE,cAAL,GAAsBF,OAAtB;;AACA,qBAAI,CAACG,UAAL;AACD,aAJD;;AAMA,mBAAI,CAACC,WAAL,GAAmBN,UAAU,CAAC,cAAD,CAA7B;;AACA,mBAAI,CAACK,UAAL;;AACA,mBAAI,CAAClP,cAAL,CAAoBoP,eAApB;;AACA,mBAAI,CAACpP,cAAL,CAAoBrG,YAApB,CAAiCuB,SAAjC,CAA2C,UAAA+C,GAAG,EAAI;AAChD,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,uBAAI,CAACsP,KAAL,CAAWhT,QAAX,GAAsB0D,GAAtB;AACA,uBAAI,CAACsP,KAAL,CAAWjT,YAAX,GAA0B,OAAI,CAAC0F,cAAL,CAAoB3F,aAApB,CAAkCC,YAA5D;AACA,uBAAI,CAACiT,KAAL,CAAW/S,UAAX,GAAwB,OAAI,CAACwF,cAAL,CAAoB3F,aAApB,CAAkCG,UAA1D;AACD;AACF,aAND;;AAQA,mBAAI,CAACwF,cAAL,CAAoBpG,aAApB,CAAkCsB,SAAlC,CAA4C,UAAA+C,GAAG,EAAI;AACjD,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,uBAAI,CAACuP,MAAL,CAAYjT,QAAZ,GAAuB0D,GAAvB;AACA,uBAAI,CAACuP,MAAL,CAAYlT,YAAZ,GAA2B,OAAI,CAAC0F,cAAL,CAAoBvF,cAApB,CAAmCH,YAA9D;AACA,uBAAI,CAACkT,MAAL,CAAYhT,UAAZ,GAAyB,OAAI,CAACwF,cAAL,CAAoBvF,cAApB,CAAmCD,UAA5D;AACD;AACF,aAND;;AAOA,mBAAI,CAACwF,cAAL,CAAoBnG,YAApB,CAAiCqB,SAAjC,CAA2C,UAAA+C,GAAG,EAAI;AAChD,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,uBAAI,CAACwP,KAAL,CAAWlT,QAAX,GAAsB0D,GAAtB;AACA,uBAAI,CAACwP,KAAL,CAAWnT,YAAX,GAA0B,OAAI,CAAC0F,cAAL,CAAoBtF,aAApB,CAAkCJ,YAA5D;AACA,uBAAI,CAACmT,KAAL,CAAWjT,UAAX,GAAwB,OAAI,CAACwF,cAAL,CAAoBtF,aAApB,CAAkCF,UAA1D;AACD;AACF,aAND;;AAOA,mBAAI,CAACwF,cAAL,CAAoBlG,aAApB,CAAkCoB,SAAlC,CAA4C,UAAA+C,GAAG,EAAI;AACjD,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,uBAAI,CAACyP,MAAL,CAAYnT,QAAZ,GAAuB0D,GAAvB;AACA,uBAAI,CAACyP,MAAL,CAAYpT,YAAZ,GAA2B,OAAI,CAAC0F,cAAL,CAAoBrF,cAApB,CAAmCL,YAA9D;AACA,uBAAI,CAACoT,MAAL,CAAYlT,UAAZ,GAAyB,OAAI,CAACwF,cAAL,CAAoBrF,cAApB,CAAmCH,UAA5D;AACD;AACF,aAND;;AAOA,mBAAI,CAACwF,cAAL,CAAoBjG,YAApB,CAAiCmB,SAAjC,CAA2C,UAAA+C,GAAG,EAAI;AAChD,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,uBAAI,CAAC0P,KAAL,CAAWpT,QAAX,GAAsB0D,GAAtB;AACA,uBAAI,CAAC0P,KAAL,CAAWrT,YAAX,GAA0B,OAAI,CAAC0F,cAAL,CAAoBpF,aAApB,CAAkCN,YAA5D;AACA,uBAAI,CAACqT,KAAL,CAAWnT,UAAX,GAAwB,OAAI,CAACwF,cAAL,CAAoBpF,aAApB,CAAkCJ,UAA1D;AACD;AACF,aAND;;AAQA,mBAAI,CAACwF,cAAL,CAAoBhG,YAApB,CAAiCkB,SAAjC,CAA2C,UAAA+C,GAAG,EAAI;AAChD,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,uBAAI,CAAC2P,KAAL,CAAWrT,QAAX,GAAsB0D,GAAtB;AACA,uBAAI,CAAC2P,KAAL,CAAWtT,YAAX,GAA0B,OAAI,CAAC0F,cAAL,CAAoBnF,aAApB,CAAkCP,YAA5D;AACA,uBAAI,CAACsT,KAAL,CAAWpT,UAAX,GAAwB,OAAI,CAACwF,cAAL,CAAoBnF,aAApB,CAAkCL,UAA1D;AACD;AACF,aAND;;AAQA,mBAAI,CAACwF,cAAL,CAAoB/F,cAApB,CAAmCiB,SAAnC,CAA6C,UAAA+C,GAAG,EAAI;AAClD,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,uBAAI,CAAC4P,OAAL,CAAatT,QAAb,GAAwB0D,GAAxB;AACA,uBAAI,CAAC4P,OAAL,CAAavT,YAAb,GAA4B,OAAI,CAAC0F,cAAL,CAAoBlF,eAApB,CAAoCR,YAAhE;AACA,uBAAI,CAACuT,OAAL,CAAarT,UAAb,GAA0B,OAAI,CAACwF,cAAL,CAAoBlF,eAApB,CAAoCN,UAA9D;AACD;AACF,aAND;;AAQA,mBAAI,CAACwF,cAAL,CAAoB9F,cAApB,CAAmCgB,SAAnC,CAA6C,UAAA+C,GAAG,EAAI;AAClD,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,uBAAI,CAAC6P,KAAL,CAAWvT,QAAX,GAAsB0D,GAAtB;AACA,uBAAI,CAAC6P,KAAL,CAAWxT,YAAX,GAA0B,OAAI,CAAC0F,cAAL,CAAoBjF,eAApB,CAAoCT,YAA9D;AACA,uBAAI,CAACwT,KAAL,CAAWtT,UAAX,GAAwB,OAAI,CAACwF,cAAL,CAAoBjF,eAApB,CAAoCP,UAA5D;AACD;AACF,aAND;;AAQA,mBAAI,CAACwF,cAAL,CAAoB7F,aAApB,CAAkCe,SAAlC,CAA4C,UAAA+C,GAAG,EAAI;AACjD,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,uBAAI,CAAC8P,MAAL,CAAYxT,QAAZ,GAAuB0D,GAAvB;AACA,uBAAI,CAAC8P,MAAL,CAAYzT,YAAZ,GAA2B,OAAI,CAAC0F,cAAL,CAAoBhF,cAApB,CAAmCV,YAA9D;AACA,uBAAI,CAACyT,MAAL,CAAYvT,UAAZ,GAAyB,OAAI,CAACwF,cAAL,CAAoBhF,cAApB,CAAmCR,UAA5D;AACD;AACF,aAND;;AAQA,mBAAI,CAACwF,cAAL,CAAoB5F,YAApB,CAAiCc,SAAjC,CAA2C,UAAA+C,GAAG,EAAI;AAChD,kBAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,uBAAI,CAAC+P,KAAL,CAAWzT,QAAX,GAAsB0D,GAAtB;AACA,uBAAI,CAAC+P,KAAL,CAAW1T,YAAX,GAA0B,OAAI,CAAC0F,cAAL,CAAoB/E,aAApB,CAAkCX,YAA5D;AACA,uBAAI,CAAC0T,KAAL,CAAWxT,UAAX,GAAwB,OAAI,CAACwF,cAAL,CAAoB/E,aAApB,CAAkCT,UAA1D;AACD;AACF,aAND;;AAOA,mBAAI,CAACoR,SAAL,GAAiB,KAAjB;AACD,WAxFD;AAyFA,eAAKR,KAAL,CAAWtP,IAAX,CAAgBZ,SAAhB,CAA0B,UAAAY,IAAI,EAAI;AAChC,mBAAI,CAACV,UAAL,GAAkBU,IAAI,CAAC,YAAD,CAAtB;AACD,WAFD;AAMA,eAAKwK,WAAL,CAAiBqB,gBAAjB,GAAoCzM,SAApC,CAA8C,UAACoM,aAAD,EAAmC;AAC/E,mBAAI,CAACA,aAAL,GAAqBA,aAArB;AACD,WAFD;AAGD;;;qCAEY;AACX,cAAI,KAAK6H,WAAL,IAAoB,CAAxB,EAA2B;AACzB,iBAAKF,cAAL,GAAsB,KAAKD,cAA3B;;AAEA,gBAAI,KAAKA,cAAL,GAAsB,OAAO,KAAKG,WAAtC,EAAmD;AACjD,mBAAK/K,IAAL,GAAY,SAAZ;AACD,aAFD,MAEO,IAAI,KAAK4K,cAAL,GAAsB,MAAM,KAAKG,WAArC,EAAkD;AACvD,mBAAK/K,IAAL,GAAY,MAAZ;AACD,aAFM,MAEA,IAAI,KAAK4K,cAAL,GAAsB,OAAO,KAAKG,WAAtC,EAAmD;AACxD,mBAAK/K,IAAL,GAAY,SAAZ;AACD,aAFM,MAEA,IAAI,KAAK4K,cAAL,GAAsB,OAAO,KAAKG,WAAtC,EAAmD;AACxD,mBAAK/K,IAAL,GAAY,QAAZ;AACD,aAFM,MAGF,IAAI,KAAK4K,cAAL,IAAuB,KAAKG,WAAhC,EAA6C;AAChD,mBAAKF,cAAL,GAAsB,KAAKE,WAA3B;AACA,mBAAK/K,IAAL,GAAY,QAAZ;AACD;AACF;AACF;;;qCAEY;AACX,cAAMvG,SAAS,GAAG,KAAKjB,MAAL,CAAYkB,IAAZ,CAAiB,+GAAjB,CAAlB;AACAD,mBAAS,CAACE,WAAV,GAAwB7C,SAAxB,CAAkC,UAAA8C,MAAM,EAAI;AAC1C3H,mBAAO,CAACC,GAAR,0BAA8B0H,MAA9B;AACD,WAFD;AAGD;;;4CAEmB;AAClB,eAAKsJ,aAAL,CAAmBjO,OAAnB,CAA2B,UAAAC,OAAO,EAAI;AACpCjD,mBAAO,CAACC,GAAR,CAAYgD,OAAO,CAACzB,OAApB;AACD,WAFD;AAGA,eAAKyO,WAAL,CAAiBwB,mBAAjB,GAAuC5M,SAAvC,CAAiD,YAAM;AACrD7E,mBAAO,CAACC,GAAR,CAAY,SAAZ;AAED,WAHD;AAID;;;;;;;uBAtKUqY,wB,EAAwB,gJ,EAAA,0I,EAAA,mI,EAAA,0J,EAAA,+H;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA,c;AAAA,a;AAAA,u+E;AAAA;AAAA;AClBrC;;AAUA;;;;AAVK;;AAUA;;AAAA;;;;;;;;;;sEDQQA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTjZ,kBAAQ,EAAE,uBADD;AAETqJ,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD,EAAsC,uBAAtC;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;;;;;AA2DgB;;AACI;;AACI;;AACI;;AACI;;AAAuB;;AAAa;;AACpC;;AAAyB;;AAAe;;AAC5C;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AAA+B;;AACnC;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAXoC;;AAAA;;;;;;AAYpC;;AACI;;AACI;;AACI;;AACI;;AAAuB;;AAAmB;;AAC1C;;AAAyB;;AAAuB;;AACpD;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AAA+B;;AACnC;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAXwC;;AAAA,oIAAyD,0BAAzD,EAAyD,+BAAzD;;;;;;AAqBhC;;AACI;;AAEJ;;;;;;AAF0B;;AAAA,oGAAyB,iBAAzB,EAAyB,oBAAzB;;;;;;AAF9B;;AACI;;AAIJ;;;;;;AAJS;;AAAA;;;;;;AAgBG;;AAA2D;;AAAQ;;;;;;AACnE;;AAAwC;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAGxC;;AAA2D;;AAAS;;;;;;AACpE;;AAAwC;;AAA4B;;;;;;AAA5B;;AAAA;;;;;;AAGxC;;AAA2D;;AAAE;;;;;;AAC7D;;AAAwC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGxC;;AAAkF;;AAAY;;;;;;AAC9F;;AAAuE;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AAGvE;;AAA2D;;AAAK;;;;;;AAChE;;AAAwC;;;;AACxC;;;;;;AADwC;;AAAA;;;;;;AAIxC;;AAA2D;;AAAQ;;;;;;;;AAE/D;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AACQ;;AACJ;;AACR;;;;;;;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AACQ;;AACJ;;AACR;;;;;;AAVJ;;AACI;;AAKA;;AAKJ;;;;;;AAVO;;AAAA;;AAKA;;AAAA;;;;;;AAQX;;;;;;AACA;;;;;;;;;;AAjKxB;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAkB;;AAChD;;AAAsB;;AAAoB;;AAC9C;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AAAsC;;AAC1C;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAmB;;AACjD;;AAAsB;;AAAqB;;AAC/C;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AAA4B;;AAChC;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAqBA;;AAqBJ;;AAEA;;AACI;;AACI;;AACI;;AAAuB;;AAA0B;;AACjD;;AAAyB;;AAAa;;AAC1C;;AACA;;AAMA;;AACI;;AACA;;AACI;;AAA+B;;AACnC;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AAEJ;;AACA;;AACI;;AACA;;AAYJ;;AAEA;;AACA;;AACJ;;AACA;;AACI;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA3J8D;;AAAA;;AA2BA;;AAAA;;AAc7C;;AAAA;;AAqBA;;AAAA;;AA6BI;;AAAA;;AAeqC;;AAAA;;AAsCf;;AAAA;;AACP;;AAAA;;AAGiB;;AAAA,4JAAwB,cAAxB,EAAwB,IAAxB;;;;;;AAQrD;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAkB;;AAChD;;AAAsB;;AAAO;;AAC7B;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AAA8B;;AAClC;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;QDlMSqQ,uB;;;AAEX,uCAAoBrO,UAApB,EACUoK,KADV,EAEUrT,QAFV,EAGS6E,MAHT,EAIUqD,aAJV,EAKUhL,WALV,EAMUW,MANV,EAM0B;AAAA;;AANN,aAAAoL,UAAA,GAAAA,UAAA;AACV,aAAAoK,KAAA,GAAAA,KAAA;AACA,aAAArT,QAAA,GAAAA,QAAA;AACD,aAAA6E,MAAA,GAAAA,MAAA;AACC,aAAAqD,aAAA,GAAAA,aAAA;AACA,aAAAhL,WAAA,GAAAA,WAAA;AACA,aAAAW,MAAA,GAAAA,MAAA;AAOV,aAAAkH,kBAAA,GAA+B,CAAC,cAAD,EAAiB,UAAjB,EAA6B,YAA7B,EAA2C,oBAA3C,EAAiE,cAAjE,EAAiF,SAAjF,CAA/B;AACA,aAAAvC,QAAA,GAAW,IAAI,0EAAJ,EAAX;AAIA,aAAA+U,gBAAA,GAA2B,CAA3B;AACA,aAAAC,kBAAA,GAA6B,CAA7B;AAOA,aAAAnU,UAAA,GAA6B,EAA7B;AAGA,aAAAiQ,kBAAA,GAAqB,KAArB;;AAtBE,aAAKzV,MAAL,CAAY4Z,kBAAZ,CAA+BC,gBAA/B,GAAkD,YAAY;AAC5D,iBAAO,KAAP;AACD,SAFD;AAGD;;;;mCAuBO;AAAA;;AACN,eAAKC,UAAL,GAAkB,KAAlB;AACA,cAAInY,MAAM,GAAG,KAAKtC,WAAL,CAAiBG,YAAjB,CAA8BkC,MAA3C;AACA,eAAKhD,EAAL,GAAU,KAAK8W,KAAL,CAAWuE,QAAX,CAAoBlE,MAApB,CAA2B,IAA3B,CAAV;AACA,cAAIlU,MAAM,KAAK,KAAKjD,EAApB,EACE,KAAKob,UAAL,GAAkB,IAAlB;;AACF,cAAI,KAAKzP,aAAL,CAAmB3D,iBAAnB,CAAqCf,MAArC,KAAgD,CAApD,EAAuD;AACrD,iBAAK0E,aAAL,CAAmBK,oBAAnB,GAA0CpF,SAA1C,CAAoD,UAACE,UAAD,EAAgC;AAClF,qBAAI,CAAC6E,aAAL,CAAmB3D,iBAAnB,GAAuClB,UAAvC;AACA,qBAAI,CAACA,UAAL,GAAkB,OAAI,CAAC6E,aAAL,CAAmB3D,iBAArC;AACD,aAHD;AAID,WALD,MAME,KAAKlB,UAAL,GAAkB,KAAK6E,aAAL,CAAmB3D,iBAArC;;AAGF,eAAKsP,SAAL,GAAiB,IAAjB;AACA,eAAK5K,UAAL,CAAgB4O,iBAAhB,CAAkC,KAAKtb,EAAvC,EAA2C4G,SAA3C,CAAqD,UAAAnC,QAAQ,EAAI;AAC/D,mBAAI,CAACiI,UAAL,CAAgB6O,eAAhB,CAAgC,OAAI,CAACvb,EAArC,EAAyC4G,SAAzC,CAAmD,UAAC4U,gBAAD,EAAyC;AAC1F,qBAAI,CAACvV,QAAL,CAAcuB,IAAd,GAAqBgU,gBAArB;AACD,aAFD;;AAGA,gBAAI/W,QAAQ,CAAC,oBAAD,CAAR,IAAkC,CAAtC,EAAyC;AACvC,qBAAI,CAACuW,gBAAL,GAAwBvW,QAAQ,CAAC,qBAAD,CAAhC;AACA,kBAAIgX,qBAAqB,GAAG,KAA5B;AACA,qBAAI,CAACC,yBAAL,GAAiCjX,QAAQ,CAAC,iCAAD,CAAR,CAA4C,kBAA5C,CAAjC;;AACA,mBAAK,IAAIgK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAACiN,yBAAL,CAA+BzU,MAAnD,EAA2DwH,CAAC,EAA5D,EAAgE;AAC9D,oBAAI,OAAI,CAACiN,yBAAL,CAA+BjN,CAA/B,EAAkCkN,gBAAlC,KAAuD,CAA3D,EACEF,qBAAqB,GAAG,IAAxB;AACH;;AACD,kBAAIG,sBAAsB,GAAG,KAA7B;AACA,qBAAI,CAACC,sBAAL,GAA8BpX,QAAQ,CAAC,iCAAD,CAAR,CAA4C,eAA5C,CAA9B;;AACA,mBAAK,IAAIgK,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,OAAI,CAACoN,sBAAL,CAA4B5U,MAAhD,EAAwDwH,EAAC,EAAzD,EAA6D;AAC3D,oBAAI,OAAI,CAACoN,sBAAL,CAA4BpN,EAA5B,EAA+BkN,gBAA/B,KAAoD,CAAxD,EACEC,sBAAsB,GAAG,IAAzB;AACH;;AACD,kBAAIH,qBAAqB,IAAIG,sBAA7B,EACE,OAAI,CAAC7E,kBAAL,GAA0B,IAA1B;AACF,qBAAI,CAACoD,WAAL,GAAmB1V,QAAQ,CAAC,aAAD,CAA3B;AACA,qBAAI,CAACoM,aAAL,GAAqBpM,QAAQ,CAAC,eAAD,CAA7B;AACA,qBAAI,CAACqX,gBAAL,GAAwBrX,QAAQ,CAAC,kBAAD,CAAhC;AACA,qBAAI,CAACsX,iBAAL,GAAyBtX,QAAQ,CAAC,mBAAD,CAAjC;AACA,qBAAI,CAACwW,kBAAL,GAA0BxW,QAAQ,CAAC,oBAAD,CAAlC;AACD;;AACD,mBAAI,CAAC6S,SAAL,GAAiB,KAAjB;AACD,WA3BD;AA4BD;;;sCAEatX,E,EAAYgJ,Q,EAAkB;AAAA;;AAC1C,eAAK0D,UAAL,CAAgBtC,eAAhB,CAAgCpK,EAAhC,EAAoC4G,SAApC,CAA8C,UAACnC,QAAD,EAAmB;AAC/D,mBAAI,CAAChB,QAAL,CAAcE,OAAd,CAAsBc,QAAtB;;AACA,mBAAI,CAACwB,QAAL,CAAcuB,IAAd,CAAmB6C,MAAnB,CAA0BrB,QAA1B,EAAoC,CAApC;;AACA,mBAAI,CAAC/C,QAAL,CAAcuB,IAAd,GAAqB,OAAI,CAACvB,QAAL,CAAcuB,IAAnC;AACD,WAJD,EAIG,UAAA5D,KAAK,EAAI;AACV,mBAAI,CAACH,QAAL,CAAcG,KAAd,CAAoBA,KAAK,CAACA,KAA1B;AACD,WAND;AAOD;;;mCAEU5D,E,EAAYgJ,Q,EAAgB;AAAA;;AACrC,cAAIW,GAAG,GAAG,KAAK1D,QAAL,CAAcuB,IAAd,CAAmBoC,IAAnB,CAAwB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC7J,EAAF,KAASA,EAAb;AAAA,WAAzB,CAAV;AACA,cAAMuJ,SAAS,GAAG,KAAKjB,MAAL,CAAYkB,IAAZ,CAAiB,0HAAjB,EAA4C;AAC5DO,iBAAK,EAAE,OADqD;AAE5DvC,gBAAI,EAAEmC;AAFsD,WAA5C,CAAlB;AAKAJ,mBAAS,CAACE,WAAV,GAAwB7C,SAAxB,CAAkC,UAAA8C,MAAM,EAAI;AAC1C,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,qBAAI,CAACzD,QAAL,CAAcuB,IAAd,CAAmBwB,QAAnB,EAA6BiB,YAA7B,GAA4CP,MAAM,CAAC,cAAD,CAAlD;AACA,qBAAI,CAACzD,QAAL,CAAcuB,IAAd,CAAmBwB,QAAnB,EAA6BkB,kBAA7B,GAAkDR,MAAM,CAAC,oBAAD,CAAxD;AACA,qBAAI,CAACzD,QAAL,CAAcuB,IAAd,CAAmBwB,QAAnB,EAA6BzB,UAA7B,GAA0CmC,MAAM,CAAC,YAAD,CAAhD;AACA,qBAAI,CAACzD,QAAL,CAAcuB,IAAd,CAAmBwB,QAAnB,EAA6BmB,YAA7B,GAA4CT,MAAM,CAAC,cAAD,CAAlD;AACD;AACF,WAPD;AAQD;;;;;;;uBA1GUqR,uB,EAAuB,gJ,EAAA,+H,EAAA,kJ,EAAA,mI,EAAA,8I,EAAA,0I,EAAA,uH;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,c;AAAA,a;AAAA,i1E;AAAA;AAAA;ACnBpC;;AAUA;;AACI;;AA4KA;;AA7KJ;;;;AAVK;;AAWI;;AAAA;;AA4KA;;AAAA;;;;;;;;;;sEDpKIA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT3Z,kBAAQ,EAAE,qBADD;AAETqJ,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD,EAAoC,uBAApC;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;QAOasR,sB;;;AAEX,wCAAc;AAAA;;AAMd,aAAA9I,WAAA,GAAc,KAAd;AANiB;;;;mCAET,CACP;;;iCAMQ5I,M,EAAQ;AACf,eAAK2R,MAAL,CAAYC,MAAZ;AACA,eAAKhJ,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACD;;;;;;;uBAdU8I,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA;AAAA;;;;;;;;;;;;;;;ACPnC;;AAAY;AAAA,mBAAgB,IAAAvI,QAAA,QAAhB;AAAgC,WAAhC;;AAAkC;;AAC9C;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;;;AALiB;;AAAA;;;;;;;;;sEDIJuI,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT5a,kBAAQ,EAAE,oBADD;AAETqJ,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;gBAOhC,uD;iBAAU,Q,EAAU;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AEdvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;;;;;;;AASoB;;AACI;;AACI;;AACI;;AACI;;AAEJ;;AACA;;AACI;;AACA;;AACA;;AAAyB;;AAAO;;AAAc;;AAAQ;;AAC1D;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+F;;AACxE;;AACnC;;AACJ;;AACJ;;AACJ;;;;;;AAVgB;;AAAA;;;;;;AA4BJ;;AAAuD;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AACvD;;AAAuD;;AAAU;;;;;;AASzE;;AAAuC;;AAAkB;;;;;;AACzD;;AAAuC;;AAAoB;;;;;;AAiBnD;;AAAwD;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AACxD;;AAAwD;;AAAU;;;;;;AAS1E;;AAAwC;;AAAoB;;;;;;AAC5D;;AAAwC;;AAAoB;;;;;;AAiBpD;;AAAoD;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AACpD;;AAAoD;;AAAC;;;;;;AAS7D;;AAAuD;;AAAO;;;;;;AAC9D;;AAAuD;;AAAoB;;;;;;AAiBnE;;AAAsD;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AACtD;;AAAsD;;AAAC;;;;;;AAW/D;;AAAyD;;AAAS;;;;;;AAClE;;AAAyD;;AAAoB;;;;;;AAcjF;;AACI;;AACJ;;;;;;AADmB;;AAAA;;;;;;AAEnB;;AAAuD;;AACvD;;;;;;AAoBI;;AAAsD;;AACtD;;;;;;AAJJ;;AACI;;AAEA;;AAEJ;;;;;;AAJ0B;;AAAA,mGAAyB,iBAAzB,EAAyB,mBAAzB;;AAEnB;;AAAA;;;;;;AAsBH;;;;;;AAA8C;;;;;;AAC9C;;AAAwD;;AACxD;;;;;;AAmBA;;;;;;AAAgG,mGAAyB,6BAAzB,EAAyB,iCAAzB,EAAyB,0BAAzB,EAAyB,8BAAzB;;;;;;AAChG;;AAAsG;;AACtG;;;;;;AAVhB;;AACI;;AACI;;AACI;;AAAuB;;AAAmB;;AAC1C;;AAAyB;;AAAuB;;AACpD;;AACA;;AACI;;AACI;;AACA;;AAEJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AAA+B;;AACnC;;AACJ;;AACJ;;AACJ;;;;;;AAZoC;;AAAA;;AACjB;;AAAA;;;;;;;;;;;;AA/N3B;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuB;;AAAY;;AACvC;;AACA;;AACI;;AAmBJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAkB;;AAChD;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAmB;;AACjD;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAsB;;AACpD;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAiB;;AAC/C;;AACA;;AACA;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAuB;;AAAW;;AAClC;;AAAyB;;AAAwB;;AACrD;;AACA;;AACI;;AAGA;;AAEJ;;AACA;;AACI;;AACA;;AACI;;AAA4B;;AAChC;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAuB;;AAAiB;;AACxC;;AAAyB;;AAA0B;;AACvD;;AACA;;AACI;;AAMJ;;AACA;;AACI;;AACA;;AACI;;AAA+B;;AACnC;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAuB;;AAAa;;AACpC;;AAAyB;;AAAe;;AAC5C;;AACA;;AACI;;AACI;;AACA;;AAEJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AAA+B;;AACnC;;AACJ;;AACJ;;AACJ;;AACA;;AAqBJ;;AACJ;;;;;;AApOwB;;AAAA;;AAoCW;;AAAA;;AACA;;AAAA;;AASL;;AAAA;;AACA;;AAAA;;AAiBK;;AAAA;;AACA;;AAAA;;AASL;;AAAA;;AACA;;AAAA;;AAiBK;;AAAA;;AACA;;AAAA;;AASL;;AAAA;;AACA;;AAAA;;AAiBK;;AAAA;;AACA;;AAAA;;AAWL;;AAAA;;AACA;;AAAA;;AAcL;;AAAA;;AAGF;;AAAA;;AAkBE;;AAAA;;AAiBe;;AAAA;;AAQA;;AAAA;;AACb;;AAAA;;AAYa;;AAAA;;;;QDjN3ByR,yB;;;AAEX,yCAAoBzP,UAApB,EACUpL,MADV,EAEUqK,aAFV,EAEwC;AAAA;;AAFpB,aAAAe,UAAA,GAAAA,UAAA;AACV,aAAApL,MAAA,GAAAA,MAAA;AACA,aAAAqK,aAAA,GAAAA,aAAA;AAGV,aAAAoL,kBAAA,GAAqB,KAArB;AAaA,aAAAjQ,UAAA,GAA6B,EAA7B;AAhB2C;;;;mCAiBnC;AAAA;;AACN,cAAI,KAAK6E,aAAL,CAAmB3D,iBAAnB,CAAqCf,MAArC,KAAgD,CAApD,EAAuD;AACrD,iBAAK0E,aAAL,CAAmBK,oBAAnB,GAA0CpF,SAA1C,CAAoD,UAACY,IAAD,EAA0B;AAC5E,qBAAI,CAACmE,aAAL,CAAmB3D,iBAAnB,GAAuCR,IAAvC;AACA,qBAAI,CAACV,UAAL,GAAkB,OAAI,CAAC6E,aAAL,CAAmB3D,iBAArC;AACD,aAHD;AAID,WALD,MAKO;AACL,iBAAKlB,UAAL,GAAkB,KAAK6E,aAAL,CAAmB3D,iBAArC;AACD;;AAED,eAAKsP,SAAL,GAAiB,IAAjB;AACA,eAAK5K,UAAL,CAAgB0P,mBAAhB,GAAsCxV,SAAtC,CAAgD,UAAAnC,QAAQ,EAAI;AAC1D1C,mBAAO,CAACC,GAAR,CAAYyC,QAAZ;AACA,mBAAI,CAACuW,gBAAL,GAAwBvW,QAAQ,CAAC,qBAAD,CAAhC;AACA,mBAAI,CAACwW,kBAAL,GAA0BxW,QAAQ,CAAC,oBAAD,CAAlC;;AACA,gBAAIA,QAAQ,CAAC,gBAAD,CAAR,KAA+B,IAAnC,EAAyC;AACvC,qBAAI,CAACiX,yBAAL,GAAiCjX,QAAQ,CAAC,iCAAD,CAAR,CAA4C,kBAA5C,CAAjC;AACA,kBAAIgX,qBAAqB,GAAG,KAA5B;;AACA,mBAAK,IAAIhN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAACiN,yBAAL,CAA+BzU,MAAnD,EAA2DwH,CAAC,EAA5D,EAAgE;AAC9D,oBAAI,OAAI,CAACiN,yBAAL,CAA+BjN,CAA/B,EAAkCkN,gBAAlC,KAAuD,CAA3D,EACEF,qBAAqB,GAAG,IAAxB;AACH;;AACD,kBAAIG,sBAAsB,GAAG,KAA7B;AACA,qBAAI,CAACC,sBAAL,GAA8BpX,QAAQ,CAAC,iCAAD,CAAR,CAA4C,eAA5C,CAA9B;;AACA,mBAAK,IAAIgK,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,OAAI,CAACoN,sBAAL,CAA4B5U,MAAhD,EAAwDwH,GAAC,EAAzD,EAA6D;AAC3D,oBAAI,OAAI,CAACoN,sBAAL,CAA4BpN,GAA5B,EAA+BkN,gBAA/B,KAAoD,CAAxD,EACEC,sBAAsB,GAAG,IAAzB;AACH;;AAED,kBAAIH,qBAAqB,IAAIG,sBAA7B,EACE,OAAI,CAAC7E,kBAAL,GAA0B,IAA1B;AAEF,qBAAI,CAACoD,WAAL,GAAmB1V,QAAQ,CAAC,aAAD,CAA3B;AACA,qBAAI,CAACoM,aAAL,GAAqBpM,QAAQ,CAAC,eAAD,CAA7B;AACA,qBAAI,CAACoN,YAAL,GAAoBpN,QAAQ,CAAC,cAAD,CAA5B;AACA,qBAAI,CAACqX,gBAAL,GAAwBrX,QAAQ,CAAC,kBAAD,CAAhC;AACA,qBAAI,CAACsX,iBAAL,GAAyBtX,QAAQ,CAAC,mBAAD,CAAjC;AAED;;AACD,mBAAI,CAAC4X,aAAL,GAAqB5X,QAAQ,CAAC,aAAD,CAA7B;AACA,mBAAI,CAAC6S,SAAL,GAAiB,KAAjB;AACD,WA9BD;AAgCD;;;0CAEiBtX,E,EAAY;AAC5B+B,iBAAO,CAACC,GAAR,CAAYhC,EAAZ;AAEA,eAAKsB,MAAL,CAAYI,QAAZ,CAAqB,CAAC,wBAAD,EAA2B1B,EAA3B,CAArB;AACD;;;;;;;uBAtEUmc,yB,EAAyB,gJ,EAAA,uH,EAAA,8I;AAAA,K;;;YAAzBA,yB;AAAyB,4C;AAAA,c;AAAA,a;AAAA,05D;AAAA;AAAA;ACftC;;AAUA;;;;AAVK;;AAUA;;AAAA;;;;;;;;;sEDKQA,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACT/a,kBAAQ,EAAE,uBADD;AAETqJ,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD,EAAsC,uBAAtC;AAHF,S;AAK2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEftC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM4R,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBzZ,YAAM,EAAE;AAFiB,KAApB;AAOP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AClBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYyZ,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI1a,OAAO,CAAC6B,KAAR,CAAc6Y,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { Directive, Input, ViewContainerRef, TemplateRef, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Directive({\r\n    selector: '[appHasRole]' //*appHasRole\r\n})\r\nexport class HasRoleDirective implements OnInit {\r\n    @Input() appHasRole: string[];\r\n    //appHasRole =  ['Admin', 'Moderator'];\r\n    isVisible = false;\r\n    constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>, private authService: AuthService) { }\r\n    ngOnInit(): void {\r\n        const userRoles = this.authService.decodedToken.role as Array<string>;\r\n        //if user has no roles, the element to which this directive is attached should not be displayed\r\n        if(!userRoles){\r\n            this.viewContainerRef.clear();\r\n        }\r\n\r\n        //if user has a particular role need them render the element\r\n        if(this.authService.roleMatch(this.appHasRole)){\r\n            if(!this.isVisible)\r\n            this.isVisible = true;\r\n            this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n        }\r\n        else{\r\n            this.isVisible = false;\r\n            this.viewContainerRef.clear();\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const userRoles = this.authService.decodedToken.role as Array<string>;\n    if (userRoles.includes(\"Admin\")) {\n      return true;\n    } \n    this.router.navigate(['/wallet/home']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) { };\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    var token = this.authService.getToken();\n    console.log('Main guard is activated');\n\n    if (token !== null) {\n      if (token.hasWallet === 'true') {\n        if (this.router.url !== '/')\n          this.router.navigate([this.router.url]);\n        else\n          this.router.navigate(['/wallet/home']);\n        return false;\n      }\n      return true;\n    }\n    return true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    var token = this.authService.getToken();\n    console.log('Navigation guard is activated');\n    if (token !== null) {\n      if (token.hasWallet === 'true') {\n        return true;\n      }\n      this.router.navigate(['/main']);\n      return false;\n    }\n    this.router.navigate(['/main']);\n    return false;\n  }\n}\n","import { Routes } from \"@angular/router\";\r\nimport { CheckRequestsComponent } from \"./request/check-requests/check-requests.component\";\r\nimport { CheckInvitesComponent } from \"./invites/check-invites/check-invites.component\";\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CreateWalletComponent } from './wallet/create-wallet/create-wallet.component';\r\nimport { RequestAccessComponent } from './request/request-access/request-access.component';\r\nimport { CreateInviteComponent } from './invites/create-invite/create-invite.component';\r\nimport { CreateExpenseComponent } from './expenses/create-expense/create-expense.component';\r\nimport { WalletStatisticsComponent } from './wallet/wallet-statistics/wallet-statistics.component';\r\nimport { CategoryStatisticsComponent } from './wallet/category-statistics/category-statistics.component';\r\nimport { UserStatisticsComponent } from './wallet/user-statistics/user-statistics.component';\r\nimport { EditWalletComponent } from './wallet/edit-wallet/edit-wallet.component';\r\nimport { WalletAdminComponent } from './admin/wallet-admin/wallet-admin.component';\r\nimport { PhotoComponent } from './photo/photo.component';\r\nimport { ShowWalletTableComponent } from './wallet/show-wallet-table/show-wallet-table.component';\r\nimport { ShowPreviousExpensesComponent } from './wallet/show-previous-expenses/show-previous-expenses.component';\r\nimport { WalletSectionComponent } from './wallet/wallet-section/wallet-section.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { MainPageComponent } from './main-page/main-page.component';\r\nimport { NavigationGuard } from './_guards/navigation.guard';\r\nimport { MainGuard } from './_guards/main.guard';\r\nimport { WalletCategoriesResolver } from './_resolvers/wallet-categories-resolver';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\n\r\n\r\nexport const appRoutes: Routes = [\r\n  { path: '', redirectTo: '/wallet/home', pathMatch: 'full' },\r\n\r\n  { path: 'main', component: MainPageComponent, canActivate: [MainGuard] },\r\n  {\r\n    path: 'wallet', component: WalletSectionComponent, canActivate: [NavigationGuard], children: [\r\n      { path: 'home', component: HomeComponent },\r\n      { path: 'requestAccess', component: RequestAccessComponent },\r\n      { path: 'checkRequests', component: CheckRequestsComponent },\r\n      { path: 'checkInvites', component: CheckInvitesComponent },\r\n      { path: 'createInvite', component: CreateInviteComponent },\r\n      { path: 'createExpense', component: CreateExpenseComponent },\r\n      { path: 'walletExpenses', component: ShowWalletTableComponent, canActivate: [NavigationGuard] },\r\n      { path: 'previousExpenses', component: ShowPreviousExpensesComponent },\r\n      { path: 'getWalletStatistics', component: WalletStatisticsComponent },\r\n      //TODO: вписать в путь сразу :id и как то его получать\r\n      { path: 'catstat/:id', component: CategoryStatisticsComponent },\r\n      { path: 'userStatistics/:id', component: UserStatisticsComponent },\r\n      { path: 'createNewWallet', component: CreateWalletComponent },\r\n      { path: 'editWallet', component: EditWalletComponent },\r\n      { path: 'walletAdmin', component: WalletAdminComponent, canActivate:[AdminGuard] },\r\n    ]\r\n  },\r\n\r\n  { path: '**', component: NotFoundComponent },\r\n\r\n  { path: 'photo', component: PhotoComponent },\r\n\r\n\r\n]","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { ExpenseForTable } from '../_model/expense-for-table';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  baseUrl: string = environment.apiUrl + 'admin/';\n\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n\n  getUsers(){\n    return this.http.get(this.baseUrl + this.authService.getToken().nameid + '/getUsers');\n  }\n\n  removeUser(userId: string){\n    return this.http.post(this.baseUrl + this.authService.getToken().nameid + '/removeUser/' + userId, {}, {responseType: 'text'});\n  }\n\n  getAllExpenses(){\n    return this.http.get(this.baseUrl + this.authService.getToken().nameid + '/getExpensesData');\n  }\n\n  onExpenseDelete(id: number) {\n    return this.http.delete(this.baseUrl + this.authService.getToken().nameid + '/expenseDelete/' + id, { responseType: 'text' });\n  }\n\n  onExpenseEdit(expenseToEdit: ExpenseForTable) {\n    return this.http.put(this.baseUrl + this.authService.getToken().nameid + '/expenseEdit/' + expenseToEdit.id, expenseToEdit);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\n  constructor() { }\n\n\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, function (e) {\n      if (e) {\n        okCallback();\n      } else { }\n    })\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt'\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  baseUrl: string = environment.apiUrl + \"auth/\";\n\n  isLoggedIn = new BehaviorSubject<boolean>(!this.jwtHelper.isTokenExpired(localStorage.getItem('token')));\n  hasWallet = new BehaviorSubject<boolean>(this.checkUserWallet());\n  constructor(private http: HttpClient, private router: Router) { }\n\n  register(username: string, userpass: string, role: string) {\n    return this.http.post(this.baseUrl + 'register', { username: username, password: userpass, role: role });\n  }\n\n  login(username: string, userpass: string) {\n    return this.http.post(this.baseUrl + 'login', { username: username, password: userpass }).pipe(map((response: any) => {\n      if (response) {\n        localStorage.setItem('token', response.token);\n        this.isLoggedIn.next(true);\n        this.hasWallet.next(this.checkUserWallet());\n      }\n      return response;\n    }));\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.isLoggedIn.next(false);\n  }\n\n  getToken() {\n    const token = localStorage.getItem('token');\n    if (token !== null) {\n      this.decodedToken = this.jwtHelper.decodeToken(token);\n      return this.decodedToken;\n    }\n    return null;\n  }\n\n  checkLogin() {\n    this.isLoggedIn.next(!this.jwtHelper.isTokenExpired(localStorage.getItem('token')));\n  }\n\n  checkUserWallet() {\n    const token = localStorage.getItem('token');\n    if (token !== null) {\n      if (this.getToken().hasWallet === \"true\")\n        return true;\n      return false;\n    }\n    return false;\n  }\n\n  roleMatch(allowedRoles): boolean {\n    let isMatch = false;\n    const userRoles = this.decodedToken.role as Array<string>;\n    allowedRoles.forEach(element => {\n      if (userRoles.includes(element)) {\n        isMatch = true;\n        return;\n      }\n    })\n    return isMatch;\n  }\n\n  //TODO: сделать отдельный сервис для фото\n  getPhoto() {\n    return this.http.get(\"http://localhost:5000/api/\" + 'photo/' + this.getToken().nameid);\n  }\n\n  deletePhoto() {\n    return this.http.delete(\"http://localhost:5000/api/\" + 'photo/' + this.getToken().nameid);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Expense } from '../_model/expense';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ExpenseForTable } from '../_model/expense-for-table';\nimport { AuthService } from './auth.service';\nimport { CategoryData } from '../_model/categoryData';\nimport { ExpensesWithCategories } from '../_model/expensesWithCategories';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpenseService {\n\n  baseUrl: string = environment.apiUrl + 'expense/';\n\n  initialExpenses: any[] = [];\n  expensesSubject = new BehaviorSubject<number>(0);\n\n  categoryTitles = new Subject<CategoryData[]>();\n\n  firstSubject = new Subject<ExpenseForTable[]>();\n  secondSubject = new Subject<ExpenseForTable[]>();\n  thirdSubject = new Subject<ExpenseForTable[]>();\n  fourthSubject = new Subject<ExpenseForTable[]>();\n  fifthSubject = new Subject<ExpenseForTable[]>();\n  sixthSubject = new Subject<ExpenseForTable[]>();\n  seventhSubject = new Subject<ExpenseForTable[]>();\n  eightthSubject = new Subject<ExpenseForTable[]>();\n  ninethSubject = new Subject<ExpenseForTable[]>();\n  tenthSubject = new Subject<ExpenseForTable[]>();\n\n  firstExpenses: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  secondExpenses: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  thirdExpenses: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  fourthExpenses: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  fifthExpenses: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  sixthExpenses: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  seventhExpenses: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  eightthExpenses: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  ninethExpenses: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  tenthExpenses: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n\n  constructor(private http: HttpClient, private authService: AuthService) {\n  }\n\n\n\n  showAllExpenses() {\n    return this.http.get(this.baseUrl + this.authService.getToken().nameid).subscribe((expenses: ExpensesWithCategories[]) => {\n      if (expenses != null) {\n        console.log(expenses);\n        let categoriesCount = 0;\n        let categories: CategoryData[] = [];\n        this.firstExpenses.expenses = expenses[0]['expenses'];\n        this.firstExpenses.categoryId = expenses[0]['categoryId'];\n        this.firstExpenses.categoryName = expenses[0]['categoryName'];\n        this.firstSubject.next(this.firstExpenses.expenses);\n        categoriesCount++;\n        categories.push({ id: this.firstExpenses.categoryId, title: this.firstExpenses.categoryName });\n\n        this.secondExpenses.expenses = expenses[1]['expenses'];\n        this.secondExpenses.categoryId = expenses[1]['categoryId'];\n        this.secondExpenses.categoryName = expenses[1]['categoryName'];\n        this.secondSubject.next(this.secondExpenses.expenses);\n        categoriesCount++;\n        categories.push({ id: this.secondExpenses.categoryId, title: this.secondExpenses.categoryName });\n\n        this.thirdExpenses.expenses = expenses[2]['expenses'];\n        this.thirdExpenses.categoryId = expenses[2]['categoryId'];\n        this.thirdExpenses.categoryName = expenses[2]['categoryName'];\n        this.thirdSubject.next(this.thirdExpenses.expenses);\n        categoriesCount++;\n        categories.push({ id: this.thirdExpenses.categoryId, title: this.thirdExpenses.categoryName });\n\n        this.fourthExpenses.expenses = expenses[3]['expenses'];\n        this.fourthExpenses.categoryId = expenses[3]['categoryId'];\n        this.fourthExpenses.categoryName = expenses[3]['categoryName'];\n        this.fourthSubject.next(this.fourthExpenses.expenses);\n        categoriesCount++;\n        categories.push({ id: this.fourthExpenses.categoryId, title: this.fourthExpenses.categoryName });\n\n        this.fifthExpenses.expenses = expenses[4]['expenses'];\n        this.fifthExpenses.categoryId = expenses[4]['categoryId'];\n        this.fifthExpenses.categoryName = expenses[4]['categoryName'];\n        this.fifthSubject.next(this.fifthExpenses.expenses);\n        categoriesCount++;\n        categories.push({ id: this.fifthExpenses.categoryId, title: this.fifthExpenses.categoryName });\n\n        if (categoriesCount < expenses.length) {\n          this.sixthExpenses.expenses = expenses[5]['expenses'];\n          this.sixthExpenses.categoryId = expenses[5]['categoryId'];\n          this.sixthExpenses.categoryName = expenses[5]['categoryName'];\n          this.sixthSubject.next(this.sixthExpenses.expenses);\n          categoriesCount++;\n          categories.push({ id: this.sixthExpenses.categoryId, title: this.sixthExpenses.categoryName });\n        }\n        if (categoriesCount < expenses.length) {\n          this.seventhExpenses.expenses = expenses[6]['expenses'];\n          this.seventhExpenses.categoryId = expenses[6]['categoryId'];\n          this.seventhExpenses.categoryName = expenses[6]['categoryName'];\n          this.seventhSubject.next(this.seventhExpenses.expenses);\n          categoriesCount++;\n          categories.push({ id: this.seventhExpenses.categoryId, title: this.seventhExpenses.categoryName });\n        }\n        if (categoriesCount < expenses.length) {\n          this.eightthExpenses.expenses = expenses[7]['expenses'];\n          this.eightthExpenses.categoryId = expenses[7]['categoryId'];\n          this.eightthExpenses.categoryName = expenses[7]['categoryName'];\n          this.eightthSubject.next(this.eightthExpenses.expenses);\n          categoriesCount++;\n          categories.push({ id: this.eightthExpenses.categoryId, title: this.eightthExpenses.categoryName });\n        }\n        if (categoriesCount < expenses.length) {\n          this.ninethExpenses.expenses = expenses[8]['expenses'];\n          this.ninethExpenses.categoryId = expenses[8]['categoryId'];\n          this.ninethExpenses.categoryName = expenses[8]['categoryName'];\n          this.ninethSubject.next(this.ninethExpenses.expenses);\n          categoriesCount++;\n          categories.push({ id: this.ninethExpenses.categoryId, title: this.ninethExpenses.categoryName });\n        }\n        if (categoriesCount < expenses.length) {\n          this.tenthExpenses.expenses = expenses[9]['expenses'];\n          this.tenthExpenses.categoryId = expenses[9]['categoryId'];\n          this.tenthExpenses.categoryName = expenses[9]['categoryName'];\n          this.tenthSubject.next(this.tenthExpenses.expenses);\n          categoriesCount++;\n          categories.push({ id: this.tenthExpenses.categoryId, title: this.tenthExpenses.categoryName });\n        }\n        this.categoryTitles.next(categories);      \n      }\n    });\n  }\n\n  getPreviousExpenses(month: number) {\n    return this.http.get(this.baseUrl + this.authService.getToken().nameid + '/previousExpenses/' + month);\n  }\n\n  // getBarExpensesData() {\n  //   return this.http.get(this.baseUrl + this.authService.getToken().nameid + '/barExpenses');\n  // }\n\n  //TODO: здесь идет система автоматического добавления расходов, нужно подумать как их добавлять на деле\n  createExpense(expense: Expense) {\n    return this.http.post(this.baseUrl + this.authService.getToken().nameid + '/new', expense).pipe(map(response => {\n      var receivedExpense: ExpenseForTable = response['expense'];\n        switch (+(expense.expenseCategoryId)) {\n        case this.firstExpenses.categoryId:         \n          this.firstExpenses.expenses.push(receivedExpense);\n          this.firstSubject.next(this.firstExpenses.expenses);\n          break;\n        case this.secondExpenses.categoryId:\n          this.secondExpenses.expenses.push(receivedExpense);\n          this.secondSubject.next(this.secondExpenses.expenses);\n          break;\n        case this.thirdExpenses.categoryId:\n          this.thirdExpenses.expenses.push(receivedExpense);\n          this.thirdSubject.next(this.thirdExpenses.expenses);\n          break;\n        case this.fourthExpenses.categoryId:\n          this.fourthExpenses.expenses.push(receivedExpense);\n          this.fourthSubject.next(this.fourthExpenses.expenses);\n          break;\n        case this.fifthExpenses.categoryId:\n          this.fifthExpenses.expenses.push(receivedExpense);\n          this.fifthSubject.next(this.fifthExpenses.expenses);\n          break;\n          case this.sixthExpenses.categoryId:\n          this.sixthExpenses.expenses.push(receivedExpense);\n          this.sixthSubject.next(this.sixthExpenses.expenses);\n          break;\n          case this.seventhExpenses.categoryId:\n          this.seventhExpenses.expenses.push(receivedExpense);\n          this.seventhSubject.next(this.seventhExpenses.expenses);\n          break;\n          case this.eightthExpenses.categoryId:\n          this.eightthExpenses.expenses.push(receivedExpense);\n          this.eightthSubject.next(this.eightthExpenses.expenses);\n          break;\n          case this.ninethExpenses.categoryId:\n          this.ninethExpenses.expenses.push(receivedExpense);\n          this.ninethSubject.next(this.ninethExpenses.expenses);\n          break;\n          case this.tenthExpenses.categoryId:\n          this.tenthExpenses.expenses.push(receivedExpense);\n          this.tenthSubject.next(this.tenthExpenses.expenses);\n          break;\n      }\n      this.expensesSubject.next(this.expensesSubject.getValue() + receivedExpense.moneySpent);\n      return response;\n    }));\n  }\n\n  getWalletStatistics() {\n    return this.http.get(this.baseUrl + this.authService.getToken().nameid + '/detailedStatistics');\n  }\n\n\n  getCategoryStatistics(categoryId: number) {\n    return this.http.get(this.baseUrl + this.authService.getToken().nameid + '/detailedCategoryStatistics/' + categoryId)\n  }\n\n\n  getCategoryExpenses(categoryId: number) {\n    return this.http.get(this.baseUrl + this.authService.getToken().nameid + '/getCategoryExpenses/' + categoryId);\n  }\n\n  getUserStatistics(id: string) {\n    return this.http.get(this.baseUrl + this.authService.getToken().nameid + '/detailedUserStatistics/' + id);\n  }\n\n  getUserExpenses(id: string) {\n    return this.http.get(this.baseUrl + this.authService.getToken().nameid + '/getUserExpenses/' + id);\n  }\n\n\n  onExpenseDelete(id: number) {\n    return this.http.delete(this.baseUrl + this.authService.getToken().nameid + '/expenseDelete/' + id, { responseType: 'text' });\n  }\n\n  onExpenseEdit(expenseToEdit: ExpenseForTable) {\n    return this.http.put(this.baseUrl + this.authService.getToken().nameid + '/expenseEdit/' + expenseToEdit.id, expenseToEdit)\n  }\n\n  getWalletData(userId: string) {\n    return this.http.get(this.baseUrl + userId + '/getNameAndLimit').pipe(map(data => {\n      this.expensesSubject.next(data['monthlyExpenses']);\n      return data\n    }));\n  }\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InviteService {\n\n  baseUrl: string = environment.apiUrl + \"invite/\"\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n\n  checkInvites(){\n    return this.http.get(this.baseUrl + this.authService.getToken().nameid + '/getInvites');\n  }\n\n  createInvite(email: string){\n    return this.http.post(this.baseUrl + this.authService.getToken().nameid + '/invite/' + email, {}, {responseType:'text'});\n  }\n\n  accept(walletId: number){\n    return this.http.post(this.baseUrl + this.authService.getToken().nameid + '/accept/' + walletId, {}, {responseType:'text'});\n  }\n  \n\n  decline(walletId: number){\n    return this.http.post(this.baseUrl + this.authService.getToken().nameid + '/decline/' + walletId, {}, {responseType:'text'});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  baseUrl: string = environment.apiUrl + 'notification/';\n  value: boolean;\n  getNotifications() {\n    return this.http.get(this.baseUrl + this.authService.getToken().nameid + '/getNotifications');\n  }\n\n\n  deleteNotifications() {\n    return this.http.delete(this.baseUrl + this.authService.getToken().nameid + '/deleteNotification');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n  baseUrl: string = environment.apiUrl + \"request/\"\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n  \n  createRequestForAccess(email: string){\n    return this.http.post(this.baseUrl + this.authService.getToken().nameid + '/request/' + email, {}, {responseType:'text'});\n  }\n\n  getRequests(userId: string){\n    return this.http.get(this.baseUrl + userId + '/getRequests');\n  }\n\n  acceptRequest(email: string, userId: string){\n    return this.http.post(this.baseUrl + userId + '/acceptRequest/' + email, {}, {responseType:'text'});\n  }\n\n  declineRequest(email: string){\n    return this.http.post(this.baseUrl + this.authService.getToken().nameid + '/decline/' + email, {}, {responseType:'text'});\n  }\n\n  test(){\n    return this.http.post(this.baseUrl + this.authService.getToken().nameid + '/test', {}, {responseType:'text'});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Wallet } from '../_model/wallet';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './auth.service';\nimport { CategoryData } from '../_model/categoryData';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WalletService {\n\n  constructor(private http: HttpClient, private authService: AuthService) {\n  }\n  baseUrl: string = environment.apiUrl + \"wallet/\";\n\n  walletCategories: CategoryData[] = [];\n\n  currentWallet: Wallet;\n\n  currentCategories: CategoryData[] = [];\n\n  getAllCategories() {\n    return this.http.get(environment.apiUrl + \"expense/\" + this.authService.getToken().nameid + '/getAllCategories');\n  }\n\n  createNewWallet(walletToCreate: Wallet) {\n    return this.http.post(this.baseUrl + this.authService.getToken().nameid + '/createwallet', walletToCreate);\n  }\n\n  getCurrentWallet() {\n    this.http.get(this.baseUrl + this.authService.getToken().nameid + '/getCurrentWallet').subscribe((currentWallet: Wallet) => {\n      this.currentWallet = currentWallet;\n    });\n  }\n\n\n  getWalletsCategories() {\n    return this.http.get<CategoryData[]>(this.baseUrl + this.authService.getToken().nameid + '/getWalletCategories');\n  }\n\n\n  editWallet(wallet: Wallet) {\n    return this.http.put(this.baseUrl + this.authService.getToken().nameid + '/editWallet', wallet, { responseType: 'text' });\n  }\n\n\n  addCategoriesToWallet(categories: number[]) {\n    return this.http.post(this.baseUrl + this.authService.getToken().nameid + '/addCategories', categories);\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AdminService } from 'src/app/_services/admin.service';\nimport { UserForAdmin } from 'src/app/_model/user-for-admin';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateInviteComponent } from 'src/app/invites/create-invite/create-invite.component';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ExpenseForAdminTable } from 'src/app/_model/expense-for-admin-table';\nimport { EditExpenseModalComponent } from 'src/app/expenses/edit-expense-modal/edit-expense-modal.component';\n@Component({\n  selector: 'app-wallet-admin',\n  templateUrl: './wallet-admin.component.html',\n  styleUrls: ['./wallet-admin.component.css']\n})\nexport class WalletAdminComponent implements OnInit {\n\n  //TODO: перекинуть таблицу с пользователями на страницу edit-wallet\n  constructor(private admService: AdminService,\n    public dialog: MatDialog,\n    private alertify: AlertifyService,\n    private adminService: AdminService) { }\n\n  columnsForExpenses: string[] = ['expenseTitle', 'category', 'userName', 'moneySpent', 'expenseDescription', 'creationDate', 'actions'];\n  columnsForUsers: string[] = ['username', 'dateJoined', 'userRoles', 'actions'];\n  expenses = new MatTableDataSource<ExpenseForAdminTable>();\n  users = new MatTableDataSource<UserForAdmin>();\n\n\n  @ViewChild('expPaginator') expensePaginator: MatPaginator;\n  ngOnInit(): void {\n    this.admService.getAllExpenses().subscribe((expenses: ExpenseForAdminTable[]) => {\n      this.expenses.data = expenses;\n      this.expenses.paginator = this.expensePaginator;\n    })\n\n    this.admService.getUsers().subscribe((usersForAdmin: UserForAdmin[]) => {\n      this.users.data = usersForAdmin;\n    });\n\n  }\n\n  removeUser(userId: string, rowIndex: number) {\n    this.admService.removeUser(userId).subscribe(response => {\n      this.alertify.success(response);\n      var el: any = (document.getElementById(rowIndex.toString())) as HTMLTableElement;\n      el.remove(rowIndex);\n    }, error => {\n      this.alertify.error(error.error);\n    });\n  }\n\n  sendInvitation() {\n    const dialogRef = this.dialog.open(CreateInviteComponent);\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  openDialog(id: number, rowIndex: number): void {\n    var exp = this.expenses.data.find(x => x.id === id);\n    exp.isAdmin = true;\n    const dialogRef = this.dialog.open(EditExpenseModalComponent, {\n      width: '550px',\n      data: exp\n    });\n\n    dialogRef.afterClosed().subscribe(result => {     \n      if (result !== undefined && result !== null) {\n        this.expenses.data[rowIndex].expenseTitle = result['expenseTitle'];\n        this.expenses.data[rowIndex].expenseDescription = result['expenseDescription'];\n        this.expenses.data[rowIndex].moneySpent = result['moneySpent'];\n        this.expenses.data[rowIndex].creationDate = result['creationDate'];\n      }\n    });\n  }\n\n  expenseDelete(id: number, rowIndex: number) {\n    this.adminService.onExpenseDelete(id).subscribe((response: any) => {\n      this.alertify.success(response);\n      this.expenses.data.splice(rowIndex, 1);\n      this.expenses.data = this.expenses.data;\n    }, error => {\n      this.alertify.error(error.error);\n    });\n  }\n\n  addUserFromRequest($event) {\n    this.admService.getUsers().subscribe((usersForAdmin: UserForAdmin[]) => {\n      this.users.data = usersForAdmin;\n    });\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <button (click)=\"sendInvitation()\" class=\"btn btn-primary btn-block\">Add new user</button>\n    </div>\n</div>\n<hr>\n<div class=\"row\">\n    <div class=\"col-md-5\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card card-stats\">\n                    <div class=\"card-body \">\n                        <div class=\"row\">\n                            <div class=\"col-5 col-md-4\">\n                                <div class=\"icon-big ml-4\">\n                                    <i class=\"fa fa-users text-success\"></i>\n                                </div>\n                            </div>\n                            <div class=\"col-7 col-md-8\">\n                                <div class=\"numbers\">\n                                    <p class=\"card-category\">Manage Wallet's Users</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer \">\n                        <div class=\"stats\">\n                            <div class=\"mat-elevation-z8 users\">\n                                <table style=\"width: 100%;\" mat-table [dataSource]=\"users\">\n\n                                    <!-- Position Column -->\n                                    <ng-container matColumnDef=\"username\">\n                                        <th mat-header-cell *matHeaderCellDef> Username </th>\n                                        <td mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\n                                    </ng-container>\n\n                                    <!-- Name Column -->\n                                    <ng-container matColumnDef=\"dateJoined\">\n                                        <th mat-header-cell *matHeaderCellDef> Date Joined </th>\n                                        <td mat-cell *matCellDef=\"let element\"> {{element.dateJoined | date:'medium'}}\n                                        </td>\n                                    </ng-container>\n\n                                    <!-- Weight Column -->\n                                    <ng-container matColumnDef=\"userRoles\">\n                                        <th mat-header-cell *matHeaderCellDef> Roles </th>\n                                        <td mat-cell *matCellDef=\"let element\"> {{element.userRoles}} </td>\n                                    </ng-container>\n\n                                    <!-- Symbol Column -->\n                                    <ng-container matColumnDef=\"actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let element\">\n                                            <div *ngIf=\"!element.userRoles.includes('Admin')\">\n                                                <a matTooltip=\"Block user\" class=\"mr-2\"><i class=\"fa fa-lock\"></i></a>\n                                                <a matTooltip=\"Remove user\" class=\"mr-2\"><i\n                                                        class=\"fa fa-user-times\"></i></a>\n                                                <a matTooltip=\"Make this user a moderator\"\n                                                    *ngIf=\"element.userRoles.includes('Adult') && !element.userRoles.includes('Admin')\"\n                                                    class=\"mr-2\"><i class=\"fa fa-users-cog\"></i></a>\n                                            </div>\n                                        </td>\n                                    </ng-container>\n\n                                    <tr mat-header-row *matHeaderRowDef=\"columnsForUsers\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: columnsForUsers;\"></tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <app-check-requests (onUserAdd)=\"addUserFromRequest($event)\"></app-check-requests>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-7\">\n        <div class=\"mat-elevation-z8\">\n            <table style=\"width: 100%;\" mat-table [dataSource]=\"expenses\">\n                <ng-container matColumnDef=\"expenseTitle\">\n                    <th mat-header-cell *matHeaderCellDef> Expense </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.expenseTitle}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"category\">\n                    <th mat-header-cell *matHeaderCellDef> Category </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.category}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"userName\">\n                    <th mat-header-cell *matHeaderCellDef> User </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.userName}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"moneySpent\">\n                    <th mat-header-cell *matHeaderCellDef> $ </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.moneySpent}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"expenseDescription\">\n                    <th mat-header-cell *matHeaderCellDef> Description </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.expenseDescription}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"creationDate\">\n                    <th mat-header-cell *matHeaderCellDef> Date </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.creationDate | date :'medium'}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef> Actions </th>\n                    <td mat-cell *matCellDef=\"let element; let i = index\">\n                        <a (click)=\"openDialog(element.id, i)\" class=\"btn\">\n                            <span style=\"color: green;\">\n                                <i class=\"fa fa-cog\"></i>\n                            </span>\n                        </a>\n                        <a (click)=\"expenseDelete(element.id, i)\" class=\"btn\">\n                            <span class=\"mr\" style=\"color: red;\">\n                                <i class=\"fa fa-times\"></i>\n                            </span>\n                        </a>\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"columnsForExpenses\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: columnsForExpenses;\"></tr>\n            </table>\n\n            <mat-paginator #expPaginator [pageSizeOptions]=\"[10]\" [hidePageSize]=\"true\" showFirstLastButtons>\n            </mat-paginator>\n        </div>\n    </div>\n</div>","import { Component, ViewChild } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\n  constructor(private authService: AuthService) { }\n\n  hasWallet = false;\n  isAuthorized = false;\n\n  ngOnInit(): void {\n    this.authService.hasWallet.subscribe(res => {\n      this.hasWallet = res;\n    })\n    this.authService.isLoggedIn.subscribe(res => {\n      this.isAuthorized = res;\n    });\n    console.log(this.hasWallet);\n    console.log(this.isAuthorized);\n    \n    \n  }\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { RouterModule } from '@angular/router';\nimport { ChartsModule } from 'ng2-charts';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTableModule } from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './layout/navbar/navbar.component';\nimport { CreateWalletComponent } from './wallet/create-wallet/create-wallet.component';\nimport { CreateExpenseComponent } from './expenses/create-expense/create-expense.component';\nimport { CheckRequestsComponent } from './request/check-requests/check-requests.component';\nimport { CheckInvitesComponent } from './invites/check-invites/check-invites.component';\nimport { appRoutes } from './_routes';\nimport { HomeComponent } from './home/home.component';\nimport { ShowWalletTableComponent } from './wallet/show-wallet-table/show-wallet-table.component';\nimport { RequestAccessComponent } from './request/request-access/request-access.component';\nimport { CreateInviteComponent } from './invites/create-invite/create-invite.component';\nimport { PieGraphComponent } from './graphs/pie-graph/pie-graph.component';\nimport { UserStatisticsComponent } from './wallet/user-statistics/user-statistics.component';\nimport { WalletStatisticsComponent } from './wallet/wallet-statistics/wallet-statistics.component';\nimport { SingleBarChartComponent } from './graphs/single-bar-chart/single-bar-chart.component';\nimport { LineChartComponent } from './graphs/line-chart/line-chart.component';\nimport { BarComparisonComponent } from './graphs/bar-comparison/bar-comparison.component';\nimport { CategoryStatisticsComponent } from './wallet/category-statistics/category-statistics.component';\nimport { BarCategoryComparisonComponent } from './graphs/bar-category-comparison/bar-category-comparison.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { EditExpenseModalComponent } from './expenses/edit-expense-modal/edit-expense-modal.component';\nimport { HasRoleDirective } from './_directives/hasRole.directive';\nimport { EditWalletComponent } from './wallet/edit-wallet/edit-wallet.component';\nimport { WalletAdminComponent } from './admin/wallet-admin/wallet-admin.component';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { PhotoComponent } from './photo/photo.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ShowPreviousExpensesComponent } from './wallet/show-previous-expenses/show-previous-expenses.component';\nimport { WalletSectionComponent } from './wallet/wallet-section/wallet-section.component';\nimport { SignupSigninComponent } from './registration/signup-signin/signup-signin.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { DonutChartComponent } from './graphs/donut-chart/donut-chart.component';\nimport { DonutChartCategoriesComponent } from './graphs/donut-chart-categories/donut-chart-categories.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem('token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    CreateWalletComponent,\n    CreateExpenseComponent,\n    CheckRequestsComponent,\n    CheckInvitesComponent,\n    HomeComponent,\n    ShowWalletTableComponent,\n    RequestAccessComponent,\n    CreateInviteComponent,\n    PieGraphComponent,\n    UserStatisticsComponent,\n    WalletStatisticsComponent,\n    SingleBarChartComponent,\n    LineChartComponent,\n    BarComparisonComponent,\n    CategoryStatisticsComponent,\n    BarCategoryComparisonComponent,\n    SidebarComponent,\n    EditExpenseModalComponent,\n    HasRoleDirective,\n    EditWalletComponent,\n    WalletAdminComponent,\n    PhotoComponent,\n    ShowPreviousExpensesComponent,\n    WalletSectionComponent,\n    SignupSigninComponent,\n    NotFoundComponent,\n    MainPageComponent,\n    DonutChartComponent,\n    DonutChartCategoriesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatSidenavModule,\n    ChartsModule,\n    FileUploadModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatBadgeModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    ProgressbarModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: ['localhost:5000'],\n        blacklistedRoutes: ['localhost:5000/api/auth']\n      }\n    }),\n\n    BrowserAnimationsModule,\n\n    FontAwesomeModule,\n  ],\n  entryComponents: [\n    CreateExpenseComponent,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ExpenseService } from 'src/app/_services/expense.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { CategoryData } from 'src/app/_model/categoryData';\nimport { WalletService } from 'src/app/_services/wallet.service';\nimport { Expense } from 'src/app/_model/expense';\n\n@Component({\n  selector: 'app-create-expense',\n  templateUrl: './create-expense.component.html',\n  styleUrls: ['./create-expense.component.css']\n})\nexport class CreateExpenseComponent implements OnInit {\n\n  expense: Expense;\n  newExpenseForm: FormGroup;\n  categoryTitles: CategoryData[] = [];\n\n  constructor(private expenseService: ExpenseService,\n    private walletService: WalletService,\n    private alertify: AlertifyService,\n    public dialogRef: MatDialogRef<CreateExpenseComponent>) { }\n\n  ngOnInit(): void {\n    this.newExpenseForm = new FormGroup({\n      'title': new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(16)]),\n      'desc': new FormControl('', [Validators.minLength(4), Validators.maxLength(20)]),\n      'category': new FormControl('', [Validators.required]),\n      'money': new FormControl('', Validators.required)\n    })\n    if (this.walletService.currentCategories.length === 0) {\n      this.walletService.getWalletsCategories().subscribe((data: CategoryData[]) => {\n        this.walletService.currentCategories = data;\n        this.categoryTitles = this.walletService.currentCategories;\n      });\n    }\n    else\n      this.categoryTitles = this.walletService.currentCategories;\n  }\n\n  createExpense() {\n    console.log('form submit!');\n    console.log(this.newExpenseForm.value['category']);\n\n    if (this.newExpenseForm.errors == null) {\n      this.expense = {\n        expenseCategoryId: this.newExpenseForm.value['category'],\n        expenseTitle: this.newExpenseForm.value['title'],\n        expenseDescription: this.newExpenseForm.value['desc'],\n        moneySpent: this.newExpenseForm.value['money'],\n        creationDate: new Date(new Date().getFullYear(), new Date().getMonth() - 1, 10)  //new Date()\n      }\n      console.log('Date', new Date().getFullYear(), new Date().getMonth(), 10);\n      this.expenseService.createExpense(this.expense).subscribe((response: any) => {\n        if (response['message'] === null) {\n          this.alertify.success(\"You have successfully created an expense!\");\n          this.dialogRef.close();\n        }\n        else {\n          this.alertify.warning(response['message']);\n          this.dialogRef.close();\n        }\n      }, error => {\n        this.alertify.error(\"You did not create an expense\");\n      });\n    }\n  }\n\n  back() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"border-primary\">\n        <form [formGroup]=\"newExpenseForm\" (ngSubmit)=\"createExpense()\">\n            <div class=\"form-group\">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': newExpenseForm.get('category').errors && newExpenseForm.get('category').touched,\n                        'bg-success text-white': !newExpenseForm.get('category').errors}\">Expense Category</span>\n                    </div>\n                    <select [ngClass]=\"{'is-invalid': newExpenseForm.get('category').errors && newExpenseForm.get('category').touched,\n                                    'is-valid': !newExpenseForm.get('category').errors}\" formControlName=\"category\"\n                        class=\"form-control\">\n                        <option *ngFor=\"let category of categoryTitles\" [value]=category.id>{{category.title}}</option>\n                    </select>\n\n                    <div *ngIf=\"newExpenseForm.get('category').hasError('required') && newExpenseForm.get('category').touched\"\n                        class=\"invalid-feedback\">\n                        Category is required\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': newExpenseForm.get('title').errors && newExpenseForm.get('title').touched,\n                        'bg-success text-white': !newExpenseForm.get('title').errors}\">Expense Title</span>\n                    </div>\n                    <input [ngClass]=\"{'is-invalid': newExpenseForm.get('title').errors && newExpenseForm.get('title').touched,\n                                    'is-valid': !newExpenseForm.get('title').errors}\" type=\"text\"\n                        formControlName=\"title\" class=\"form-control\">\n\n                    <div *ngIf=\"newExpenseForm.get('title').hasError('required') && newExpenseForm.get('title').touched\"\n                        class=\"invalid-feedback\">\n                        Title is required\n                    </div>\n                    <div *ngIf=\"newExpenseForm.get('title').hasError('minlength') && newExpenseForm.get('title').touched\"\n                        class=\"invalid-feedback\">\n                        Title should be at least 4 characters required\n                    </div>\n                    <div *ngIf=\"newExpenseForm.get('title').hasError('maxlength') && newExpenseForm.get('title').touched\"\n                        class=\"invalid-feedback\">\n                        Title should be no longer than 16 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': newExpenseForm.get('desc').errors && newExpenseForm.get('desc').touched,\n                        'bg-success text-white': !newExpenseForm.get('desc').errors}\">Description</span>\n                    </div>\n                    <textarea [ngClass]=\"{'is-invalid': newExpenseForm.get('desc').errors && newExpenseForm.get('desc').touched,\n                                    'is-valid': !newExpenseForm.get('desc').errors}\" formControlName=\"desc\"\n                        class=\"form-control\"></textarea>\n\n                    <div *ngIf=\"newExpenseForm.get('desc').hasError('minlength') && newExpenseForm.get('desc').touched\"\n                        class=\"invalid-feedback\">\n                        Description should be at least 4 characters required\n                    </div>\n                    <div *ngIf=\"newExpenseForm.get('desc').hasError('maxlength') && newExpenseForm.get('desc').touched\"\n                        class=\"invalid-feedback\">\n                        Description should be no longer than 20 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': newExpenseForm.get('money').errors && newExpenseForm.get('money').touched,\n                        'bg-success text-white': !newExpenseForm.get('money').errors}\">$</span>\n                    </div>\n                    <input [ngClass]=\"{'is-invalid': newExpenseForm.get('money').errors && newExpenseForm.get('money').touched,\n                                    'is-valid': !newExpenseForm.get('money').errors}\" type=\"number\"\n                        formControlName=\"money\" class=\"form-control\">\n\n                    <div *ngIf=\"newExpenseForm.get('money').hasError('required') && newExpenseForm.get('money').touched\"\n                        class=\"invalid-feedback\">\n                        Money is required\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-outline-secondary btn-block\" [disabled]=\"newExpenseForm.invalid\"\n                    [ngClass]=\"{'btn-outline-success': newExpenseForm.valid}\">Create expense</button>\n\n            </div>\n        </form>\n        <button class=\"btn btn-warning btn-block\" (click)=\"back()\">Back</button>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ExpenseForTable } from 'src/app/_model/expense-for-table';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ExpenseService } from 'src/app/_services/expense.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AdminService } from 'src/app/_services/admin.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-edit-expense-modal',\n  templateUrl: './edit-expense-modal.component.html',\n  styleUrls: ['./edit-expense-modal.component.css']\n})\nexport class EditExpenseModalComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<EditExpenseModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private expService: ExpenseService,\n    private alertify: AlertifyService,\n    private adminService: AdminService) { }\n\n  editExpense: FormGroup;\n  isAdminEdit = false;\n  exp: ExpenseForTable;\n  //TODO: сделать полноценный validation \n\n  ngOnInit(): void {\n\n    this.exp = this.data;\n    if (this.data['isAdmin'] !== undefined)\n      this.isAdminEdit = true;\n    console.log(this.isAdminEdit);\n\n\n    this.editExpense = new FormGroup({\n      'title': new FormControl(this.exp.expenseTitle, [Validators.required, Validators.minLength(4), Validators.maxLength(10)]),\n      'money': new FormControl(this.exp.moneySpent, [Validators.required]),\n      'desc': new FormControl(this.exp.expenseDescription, [Validators.minLength(4), Validators.maxLength(20)]),\n      'date': new FormControl(this.exp.creationDate, [Validators.required]),\n    })\n  }\n\n  //TODO: убрать запрос на authservice и указывать username сразу в ExpenseForTable\n  onEdit() {\n    if (this.editExpense.valid) {\n      var expToEdit: ExpenseForTable = {\n        id: this.exp.id,\n        creationDate: this.editExpense.value['date'],\n        expenseTitle: this.editExpense.value['title'],\n        expenseDescription: this.editExpense.value['desc'],\n        moneySpent: this.editExpense.value['money'],\n        userName: this.exp.userName//this.authService.getToken().unique_name,\n      };\n      if (this.exp.userName == expToEdit.userName && this.exp.creationDate === expToEdit.creationDate && this.exp.expenseTitle === expToEdit.expenseTitle && this.exp.moneySpent === expToEdit.moneySpent) {\n        this.alertify.warning(\"You have not made any changes!\")\n      }\n      else {\n        this.expService.onExpenseEdit(expToEdit).subscribe((editedExpense: ExpenseForTable) => {\n          this.dialogRef.close(editedExpense);\n        });\n      }\n    }\n  }\n\n  onAdminEdit() {\n    if (this.editExpense.valid) {\n      var expToEdit: ExpenseForTable = {\n        id: this.exp.id,\n        creationDate: this.editExpense.value['date'],\n        expenseTitle: this.editExpense.value['title'],\n        expenseDescription: this.editExpense.value['desc'],\n        moneySpent: this.editExpense.value['money'],\n        userName: this.exp.userName\n      };\n      if (this.exp.userName == expToEdit.userName && this.exp.creationDate === expToEdit.creationDate && this.exp.expenseTitle === expToEdit.expenseTitle && this.exp.moneySpent === expToEdit.moneySpent) {\n        this.alertify.warning(\"You have not made any changes!\")\n      }\n      else {\n        this.adminService.onExpenseEdit(expToEdit).subscribe((editedExpense: ExpenseForTable) => {\n          console.log(editedExpense);\n          \n          this.dialogRef.close(editedExpense);\n        });\n      }\n    }\n  }\n\n  back(){\n    this.dialogRef.close(null);\n  }\n\n}\n\n","<div mat-dialog-content>\n    <div class=\"container\">\n        <div class=\"border-primary\">\n            <form [formGroup]=\"editExpense\" (ngSubmit)=\"isAdminEdit != true ? onEdit() : onAdminEdit()\">\n                <div class=\"form-group\">\n                    <div class=\"input-group mb-3\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': editExpense.get('title').errors && editExpense.get('title').touched,\n                        'bg-success text-white': !editExpense.get('title').errors}\">Expense Title</span>\n                        </div>\n                        <input [ngClass]=\"{'is-invalid': editExpense.get('title').errors && editExpense.get('title').touched,\n                                    'is-valid': !editExpense.get('title').errors}\" type=\"text\"\n                            formControlName=\"title\" class=\"form-control\">\n\n                        <div *ngIf=\"editExpense.get('title').hasError('required') && editExpense.get('title').touched\"\n                            class=\"invalid-feedback\">\n                            Title is required\n                        </div>\n                        <div *ngIf=\"editExpense.get('title').hasError('minlength') && editExpense.get('title').touched\"\n                            class=\"invalid-feedback\">\n                            Title should be at least 4 characters required\n                        </div>\n                        <div *ngIf=\"editExpense.get('title').hasError('maxlength') && editExpense.get('title').touched\"\n                            class=\"invalid-feedback\">\n                            Title should be no longer than 16 characters\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"input-group mb-3\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': editExpense.get('desc').errors && editExpense.get('desc').touched,\n                        'bg-success text-white': !editExpense.get('desc').errors}\">Description</span>\n                        </div>\n                        <textarea [ngClass]=\"{'is-invalid': editExpense.get('desc').errors && editExpense.get('desc').touched,\n                                    'is-valid': !editExpense.get('desc').errors}\" type=\"text\" formControlName=\"desc\"\n                            class=\"form-control\"></textarea>\n\n                        <div *ngIf=\"editExpense.get('desc').hasError('minlength') && editExpense.get('desc').touched\"\n                            class=\"invalid-feedback\">\n                            Description should be at least 4 characters required\n                        </div>\n                        <div *ngIf=\"editExpense.get('desc').hasError('maxlength') && editExpense.get('desc').touched\"\n                            class=\"invalid-feedback\">\n                            Description should be no longer than 20 characters\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"input-group mb-3\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': editExpense.get('money').errors && editExpense.get('money').touched,\n                        'bg-success text-white': !editExpense.get('money').errors}\">$</span>\n                        </div>\n                        <input [ngClass]=\"{'is-invalid': editExpense.get('money').errors && editExpense.get('money').touched,\n                                    'is-valid': !editExpense.get('money').errors}\" type=\"number\"\n                            formControlName=\"money\" class=\"form-control\">\n\n                        <div *ngIf=\"editExpense.get('money').hasError('required') && editExpense.get('money').touched\"\n                            class=\"invalid-feedback\">\n                            Money is required\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <button class=\"btn btn-outline-secondary btn-block\" [disabled]=\"editExpense.invalid\"\n                        [ngClass]=\"{'btn-outline-success': editExpense.valid}\">Edit expense</button>\n\n                </div>\n            </form>\n            <button class=\"btn btn-warning btn-block\" (click)=\"back()\">Back</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-bar-category-comparison',\n  templateUrl: './bar-category-comparison.component.html',\n  styleUrls: ['./bar-category-comparison.component.css']\n})\nexport class BarCategoryComparisonComponent implements OnInit {\n\n  @Input() currentMonthbar: number;\n  @Input() lastMonthbar: number;\n  @Input() category: string;\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    // We use these empty structures as placeholders for dynamic theming.\n    scales: { xAxes: [{}], yAxes: [{}] },\n    plugins: {\n      datalabels: {\n        anchor: 'end',\n        align: 'end',\n      }\n    }\n  };\n  public barChartLabels: Label[] = [];\n  public barChartType: ChartType = 'bar';\n  public barChartLegend = true;\n\n  public barChartData: ChartDataSets[] = [\n    { data: [], label: 'Last Month' },\n    { data: [], label: 'Current Month' },\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n    const last = this.lastMonthbar;\n    this.barChartData[0].data = [this.lastMonthbar];\n   \n    const current = this.currentMonthbar;\n    console.log(this.currentMonthbar);\n    this.barChartData[1].data = [31];\n    console.log(this.barChartData);\n    this.barChartLabels[0] = this.category;\n    console.log(this.currentMonthbar);\n    \n\n  }\n\n}\n","<div class=\"container\">\n    <div style=\"display: block\">\n        <canvas baseChart [datasets]=\"barChartData\" [labels]=\"barChartLabels\" [options]=\"barChartOptions\" [legend]=\"barChartLegend\" [chartType]=\"barChartType\">\n        </canvas>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { ExpenseList } from 'src/app/_model/expense-list';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport { CategoryData } from 'src/app/_model/categoryData';\n\n@Component({\n  selector: 'app-bar-comparison',\n  templateUrl: './bar-comparison.component.html',\n  styleUrls: ['./bar-comparison.component.css']\n})\nexport class BarComparisonComponent implements OnInit {\n\n  @Input() currentMonthbarExpensesList: ExpenseList;\n  @Input() lastMonthbarExpensesList: ExpenseList;\n  @Input() categories: CategoryData[];\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    // We use these empty structures as placeholders for dynamic theming.\n    scales: { xAxes: [{}], yAxes: [{}] },\n    plugins: {\n      datalabels: {\n        anchor: 'end',\n        align: 'end',\n      }\n    }\n  };\n  public barChartLabels: Label[] = [];\n  public barChartType: ChartType = 'bar';\n  public barChartLegend = true;\n\n  public barChartData: ChartDataSets[] = [];\n\n  constructor() {\n    this.barChartData = [\n      { data: [], label: 'Last Month' },\n      { data: [], label: 'Current Month' },\n    ];\n\n  }\n\n  ngOnInit() {\n    for (let i = 0; i < this.categories.length; i++) {\n      this.barChartLabels.push([this.categories[i].title]);\n      this.barChartData[1].data[i] = this.currentMonthbarExpensesList[i]['categoryExpenses'];\n      this.barChartData[0].data[i] = this.lastMonthbarExpensesList[i]['categoryExpenses'];\n    }\n  }\n\n}\n","<div class=\"container\">\n\n    <div>\n      <div style=\"display: block\">\n        <canvas baseChart\n          [datasets]=\"barChartData\"\n          [labels]=\"barChartLabels\"\n          [options]=\"barChartOptions\"\n          \n          [legend]=\"barChartLegend\"\n          [chartType]=\"barChartType\">\n        </canvas>\n      </div>\n      \n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Label } from 'ng2-charts';\nimport { ChartType, ChartDataSets } from 'chart.js';\nimport { ExpenseList } from 'src/app/_model/expense-list';\nimport { CategoryData } from 'src/app/_model/categoryData';\n\n@Component({\n  selector: 'app-donut-chart-categories',\n  templateUrl: './donut-chart-categories.component.html',\n  styleUrls: ['./donut-chart-categories.component.css']\n})\nexport class DonutChartCategoriesComponent implements OnInit {\n\n  @Input() barExpensesList: ExpenseList[];\n  @Input() categories: CategoryData[];\n  public doughnutChartLabels: Label[] = [];\n  public doughnutChartData = [];\n  public doughnutChartType: ChartType = 'doughnut';\n\n  constructor() { }\n\n  ngOnInit(): void {\n    for (let i = 0; i < this.categories.length; i++) {\n      this.doughnutChartLabels.push([this.categories[i].title]);\n      this.doughnutChartData[i] = this.barExpensesList[i]['categoryExpenses'];\n    }\n  }\n}\n","<div style=\"display: block;\">\n    <canvas baseChart [data]=\"doughnutChartData\" [labels]=\"doughnutChartLabels\" [chartType]=\"doughnutChartType\">\n    </canvas>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Label, MultiDataSet } from 'ng2-charts';\nimport { ChartType } from 'chart.js';\n\n@Component({\n  selector: 'app-donut-chart',\n  templateUrl: './donut-chart.component.html',\n  styleUrls: ['./donut-chart.component.css']\n})\nexport class DonutChartComponent implements OnInit {\n\n  @Input() currentMonthbar: number;\n  @Input() lastMonthbar: number;\n  @Input() category: string;\n  public doughnutChartLabels: Label[] = ['Current Month', 'Last Month'];\n  public doughnutChartData = [];\n  public doughnutChartType: ChartType = 'doughnut';\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.doughnutChartData.push(this.currentMonthbar);\n    this.doughnutChartData.push(this.lastMonthbar);\n  }\n\n}\n","<div style=\"display: block;\">\n    <canvas baseChart [data]=\"doughnutChartData\" [labels]=\"doughnutChartLabels\" [chartType]=\"doughnutChartType\">\n    </canvas>\n</div>","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Label, Color, BaseChartDirective } from 'ng2-charts';\nimport { LastMonthStat } from 'src/app/_model/lastMonthStat';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css']\n})\nexport class LineChartComponent implements OnInit {\n\n  @Input() lastSixMonths: LastMonthStat[];\n\n  public lineChartData: ChartDataSets[] = [\n    { data: [], label: 'Data' },\n  ];\n  public lineChartLabels: Label[] = [];\n  public lineChartOptions: (ChartOptions & { annotation: any }) = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      // We use this empty structure as a placeholder for dynamic theming.\n      xAxes: [{}],\n      yAxes: [\n        {\n          id: 'y-axis-0',\n          position: 'left',\n        },\n        {\n          id: 'y-axis-1',\n          position: 'right',\n          gridLines: {\n            color: 'rgba(255,0,0,0.3)',\n          },\n          ticks: {\n            fontColor: 'red',\n          }\n        }\n      ]\n    },\n    annotation: {\n      annotations: [\n        {\n          type: 'line',\n          mode: 'vertical',\n          scaleID: 'x-axis-0',\n          value: 'February',\n          borderColor: 'orange',\n          borderWidth: 2,\n          label: {\n            enabled: true,\n            fontColor: 'orange',\n            content: 'LineAnno'\n          }\n        },\n      ], \n    },\n  };\n  public lineChartColors: Color[] = [\n    { // grey\n      backgroundColor: 'rgba(148,159,177,0.2)',\n      borderColor: 'rgba(148,159,177,1)',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    },\n    { // dark grey\n      backgroundColor: 'rgba(77,83,96,0.2)',\n      borderColor: 'rgba(77,83,96,1)',\n      pointBackgroundColor: 'rgba(77,83,96,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(77,83,96,1)'\n    },\n    { // red\n      backgroundColor: 'rgba(255,0,0,0.3)',\n      borderColor: 'red',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    }\n  ];\n  public lineChartLegend = true;\n  public lineChartType = 'line';\n\n  @ViewChild(BaseChartDirective, { static: true }) chart: BaseChartDirective;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.lastSixMonths = this.lastSixMonths.reverse();\n    for (let i = 0; i < this.lastSixMonths.length; i++) {\n      this.lineChartData[0].data[i] = [this.lastSixMonths[i]['expenseSum']][0];\n      this.lineChartLabels[i] = this.lastSixMonths[i]['month'];\n    }\n  }\n}\n","<div class=\"flex\">\n    <div class=\"flex-item\">\n      <div style=\"display: block;\">\n      <canvas baseChart width=\"400\" height=\"400\"\n                  [datasets]=\"lineChartData\"\n                  [labels]=\"lineChartLabels\"\n                  [options]=\"lineChartOptions\"\n                  [colors]=\"lineChartColors\"\n                  [legend]=\"lineChartLegend\"\n                  [chartType]=\"lineChartType\"\n                 \n                  ></canvas>\n      </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { ChartOptions, ChartType } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport { TopUsersStat } from 'src/app/_model/top-users-stat';\n\n@Component({\n  selector: 'app-pie-graph',\n  templateUrl: './pie-graph.component.html',\n  styleUrls: ['./pie-graph.component.css']\n})\nexport class PieGraphComponent implements OnInit {\n\n  @Input() topFiveUsers: TopUsersStat[];\n\n  public pieChartOptions: ChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    aspectRatio: 1.2,\n    legend: {\n      position: 'top',\n    },\n    plugins: {\n      datalabels: {\n        formatter: (value, ctx) => {\n          const label = ctx.chart.data.labels[ctx.dataIndex];\n          return label;\n        },\n      },\n    }\n  };\n  public pieChartLabels: Label[] = [];\n  public pieChartData: number[] = [];\n  public pieChartType: ChartType = 'pie';\n  public pieChartLegend = true;\n  //public pieChartPlugins = [pluginDataLabels];\n  public pieChartColors = [\n    {\n      backgroundColor: ['rgba(255,0,0,0.7)', 'rgba(0,255,0,0.7)', 'rgba(255,0,255,0.7)', 'rgba(125,152,255,0.7)', 'rgba(238,235,67,0.7)', 'rgba(200,0,200,0.7)'],\n    },\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    for (let i = 0; i < this.topFiveUsers.length; i++) {\n           this.pieChartData[i] = this.topFiveUsers[i]['sum'];\n           this.pieChartLabels[i] = this.topFiveUsers[i]['userName'];\n    }\n  }\n}\n","\r\n  <div>\r\n    <div style=\"display: flex; align-content: center;\">\r\n      <canvas baseChart [data]=\"pieChartData\" [labels]=\"pieChartLabels\" [chartType]=\"pieChartType\"\r\n        [options]=\"pieChartOptions\" [colors]=\"pieChartColors\" [legend]=\"pieChartLegend\">\r\n      </canvas>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport { ExpenseList } from 'src/app/_model/expense-list';\nimport { CategoryData } from 'src/app/_model/categoryData';\n\n@Component({\n  selector: 'app-single-bar-chart',\n  templateUrl: './single-bar-chart.component.html',\n  styleUrls: ['./single-bar-chart.component.css']\n})\nexport class SingleBarChartComponent implements OnInit {\n\n  @Input() barExpensesList: ExpenseList;\n  @Input() categories: CategoryData[];\n\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    aspectRatio: 1.2,\n    // We use these empty structures as placeholders for dynamic theming.\n    scales: { xAxes: [{}], yAxes: [{}] },\n    plugins: {\n      datalabels: {\n        anchor: 'end',\n        align: 'end',\n      }\n    }\n  };\n  public barChartLabels: Label[] = ['Last Expenses'];\n  public barChartType: ChartType = 'bar';\n  public barChartLegend = true;\n\n  public barChartData: ChartDataSets[] = [\n  ];\n\n  constructor() { }\n  ngOnInit() {\n    for (let i = 0; i < this.categories.length; i++) {\n      this.barChartData.push({ data: [], label: '' });\n\n      this.barChartData[i] = { label: this.categories[i].title, data: [this.barExpensesList[i]['categoryExpenses']] };\n    }\n  }\n\n\n}\n","<div *ngIf=\"categories.length > 0\" style=\"display: block;\">\n    <canvas baseChart [datasets]=\"barChartData\" [labels]=\"barChartLabels\" [options]=\"barChartOptions\" [legend]=\"barChartLegend\" [chartType]=\"barChartType\">\n  </canvas>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { NotificationService } from '../_services/notification.service';\nimport { WalletService } from '../_services/wallet.service';\nimport { CategoryData } from '../_model/categoryData';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private authService: AuthService, private noteService: NotificationService, private walletService: WalletService) {\n  }\n  isAuthorized = false;\n  categoriesToAdd: number[] = [];\n  notifications;\n  //TODO: имя пользователя показывать при логине\n  userName: string;\n  categories: CategoryData[] = [];\n\n\n  ngOnInit(): void {\n    this.walletService.getCurrentWallet();\n    if (this.walletService.currentCategories.length === 0) {\n      this.walletService.getWalletsCategories().subscribe((data: CategoryData[]) => {\n        this.walletService.currentCategories = data;\n        this.categories = this.walletService.currentCategories;\n      });\n    } else\n      this.categories = this.walletService.currentCategories;\n  }\n\n  hasWallet() {\n    if (this.authService.getToken() !== null) {\n      if (this.authService.getToken().hasWallet === \"true\")\n        return true;\n      return false;\n    }\n    return false;\n  }\n\n  \n\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5 class=\"card-title\">WELCOME</h5>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"card card-plain\">\n              <div class=\"card-header\">\n                <h5 class=\"card-title\">Home page</h5>\n              </div>\n              <div class=\"card-body\">\n                <div class=\"alert alert-info alert-with-icon alert-dismissible fade show\" data-notify=\"container\">\n                  <button type=\"button\" aria-hidden=\"true\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <i class=\"nc-icon nc-simple-remove\"></i>\n                  </button>\n                  <span data-notify=\"icon\" class=\"nc-icon nc-chart-pie-36\"></span>\n                  <span matTooltip=\"Это начальная страница кошелька. Слева, вы можете найти все нужны разделы.\"\n                    data-notify=\"message\">This is a home page. To start using your wallet, please check out the left\n                    side of the screen.\n                  </span>\n                </div>\n                <div class=\"alert alert-info alert-with-icon alert-dismissible fade show\" data-notify=\"container\">\n                  <button type=\"button\" aria-hidden=\"true\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <i class=\"nc-icon nc-simple-remove\"></i>\n                  </button>\n                  <span data-notify=\"icon\" class=\"nc-icon nc-chart-pie-36\"></span>\n                  <span\n                    matTooltip=\"Чтобы перейти к кошельку, выберите раздел Your Wallet. Статистика кошелька находится в разделе Wallet Statistics. Создание расходов находится в Your Wallet\"\n                    data-notify=\"message\">To go to your wallet, select Your Wallet section. You can create an expense in\n                    the Your Wallet\n                    section. Wallet statistics will\n                    be shown only if you have at least one expense created.\n                  </span>\n                </div>\n                <div class=\"alert alert-info alert-with-icon alert-dismissible fade show\" data-notify=\"container\">\n                  <button type=\"button\" aria-hidden=\"true\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <i class=\"nc-icon nc-simple-remove\"></i>\n                  </button>\n                  <span data-notify=\"icon\" class=\"nc-icon nc-chart-pie-36\"></span>\n                  <span matTooltip=\"Статистика пользователя находится в User Statitstics\" data-notify=\"message\">User\n                    statistics will show you your page with your expenses</span>\n                </div>\n                <div class=\"alert alert-info alert-with-icon alert-dismissible fade show\" data-notify=\"container\">\n                  <button type=\"button\" aria-hidden=\"true\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <i class=\"nc-icon nc-simple-remove\"></i>\n                  </button>\n                  <span data-notify=\"icon\" class=\"nc-icon nc-chart-pie-36\"></span>\n                  <span\n                    matTooltip=\"Если у вас в кошельке есть несколько пользователей, вы можете посмотреть их статистику. Это можно сделать в разделе Wallet Statistics\"\n                    data-notify=\"message\">If you have several users in the wallet, you can find their expenses in\n                    the Wallet Statistics - just press the User icon and you will see their expenses.</span>\n                </div>\n                <div class=\"alert alert-info alert-with-icon alert-dismissible fade show\" data-notify=\"container\">\n                  <button type=\"button\" aria-hidden=\"true\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <i class=\"nc-icon nc-simple-remove\"></i>\n                  </button>\n                  <span data-notify=\"icon\" class=\"nc-icon nc-chart-pie-36\"></span>\n                  <span\n                    matTooltip=\"Раздел с категориями называется Categories - там вы можете посмотреть отдельно каждую категорию кошелька\"\n                    data-notify=\"message\">Categories section can help you look how much you have spent in particular\n                    category.\n                  </span>\n                </div>\n                <div class=\"alert alert-info alert-with-icon alert-dismissible fade show\" data-notify=\"container\">\n                  <button type=\"button\" aria-hidden=\"true\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <i class=\"nc-icon nc-simple-remove\"></i>\n                  </button>\n                  <span data-notify=\"icon\" class=\"nc-icon nc-chart-pie-36\"></span>\n                  <span matTooltip=\"Страница с профилям Profile Page не работает.\" data-notify=\"message\">Profile page is\n                    not working - do not go there.</span>\n                </div>\n                <div class=\"alert alert-info alert-with-icon alert-dismissible fade show\" data-notify=\"container\">\n                  <button type=\"button\" aria-hidden=\"true\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <i class=\"nc-icon nc-simple-remove\"></i>\n                  </button>\n                  <span data-notify=\"icon\" class=\"nc-icon nc-chart-pie-36\"></span>\n                  <span\n                    matTooltip=\"Иногда страницы с графиками могут глючить. Пожалуйста, не перегружайте страницу с графиками.\"\n                    data-notify=\"message\">Charts may bug out - I would not recommend updating pages with chart\n                    data.</span>\n                </div>\n                <div class=\"alert alert-info alert-with-icon alert-dismissible fade show\" data-notify=\"container\">\n                  <button type=\"button\" aria-hidden=\"true\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                    <i class=\"nc-icon nc-simple-remove\"></i>\n                  </button>\n                  <span data-notify=\"icon\" class=\"nc-icon nc-chart-pie-36\"></span>\n                  <span\n                    matTooltip=\"Чтобы добавить новых пользователей, Вы должны быть админом кошелька. Если вы Админ, найдите последний раздел слева.\"\n                    data-notify=\"message\">If you want to add new members to your wallet, you have to be wallet's admin. You will see Admin section in the sidebar.</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { InviteService } from 'src/app/_services/invite.service';\nimport { Invite } from 'src/app/_model/invite';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { Router } from '@angular/router';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-check-invites',\n  templateUrl: './check-invites.component.html',\n  styleUrls: ['./check-invites.component.css']\n})\nexport class CheckInvitesComponent implements OnInit {\n\n  constructor(private invService: InviteService, \n    private alertify: AlertifyService, \n    public dialogRef: MatDialogRef<CheckInvitesComponent>) { }\n  invites: Invite[];\n\n  ngOnInit(): void {\n    this.invService.checkInvites().subscribe((inv: Invite[]) => {\n      this.invites = inv;\n      console.log(this.invites);\n    })\n  }\n\n  acceptInvite(walletId: number) {\n    this.invService.accept(walletId).subscribe(response => {\n      this.alertify.success(response);\n      this.alertify.success(\"Please, log in to see your wallet\");\n      this.dialogRef.close(true);\n    }, error => {\n      this.alertify.error(error.error);\n    });\n  }\n\n  declineInvite(walletId: number) {\n    this.invService.decline(walletId).subscribe(response => {\n      this.alertify.success(response);\n    }, error => {\n      this.alertify.error(error.error);\n    })\n  }\n\n  back() {\n    this.dialogRef.close(false);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <table class=\"table table-dark\">\n            <thead>\n                <tr>\n                    <th>From</th>\n                    <th>Wallet Title</th>\n                    <th>Date</th>\n                    <th>@</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let invite of invites\">\n                    <td scope=\"row\">{{invite.inviteCreatorEmail}}</td>\n                    <td>{{invite.walletTitle}}</td>\n                    <td>{{invite.inviteCreationTime}}</td>\n                    <td><button class=\"btn btn-success btn-sm mr-2\"\n                            (click)=\"acceptInvite(invite.walletId)\">Accept</button>\n                        <button class=\"btn btn-danger btn-sm\" (click)=\"declineInvite(invite.walletId)\">Decline</button>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <button (click)=\"back()\" class=\"btn btn-primary\">Back</button>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { InviteService } from 'src/app/_services/invite.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-create-invite',\n  templateUrl: './create-invite.component.html',\n  styleUrls: ['./create-invite.component.css']\n})\nexport class CreateInviteComponent implements OnInit {\n\n  constructor(private invService: InviteService, \n    private alertify: AlertifyService, \n    public dialogRef: MatDialogRef<CreateInviteComponent>) { }\n\n  @Input() email: string = \"\";\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    if (this.email.length >= 4) {\n      this.invService.createInvite(this.email).subscribe((response: any) => {\n        this.alertify.success(response);\n        console.log(response);\n      }, error => {\n        this.alertify.error(error.error)\n      });\n    }\n    else{\n      this.alertify.error(\"Email is too short!\");\n    }\n  }\n\n  goBack() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <form class=\"form-group\">\n            <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Enter email\" class=\"form-control\">\n            <button (click)=\"onSubmit()\" class=\"btn btn-outline-secondary btn-block mt-2\">Invite</button>\n            <button class=\"btn btn-warning btn-block\" (click)=\"goBack()\">Back</button>\n        </form>\n        \n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { AuthService } from '../../_services/auth.service';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditWalletComponent } from 'src/app/wallet/edit-wallet/edit-wallet.component';\nimport { NotificationService } from 'src/app/_services/notification.service';\nimport { Notification } from 'src/app/_model/notification';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n    private router: Router,\n    public dialog: MatDialog,\n    private noteService: NotificationService,) { }\n  signInForm: FormGroup;\n  currentUserName?: string;\n  isLoggedIn = false;\n  notificationCount: number = 0;\n  notifications: Notification[] = [];\n\n  @Output() toggleDrawer = new EventEmitter();\n  toggleState = false;\n\n\n  ngOnInit(): void {\n    this.currentUserName = this.authService.getToken().unique_name;\n    this.noteService.getNotifications().subscribe((notifications: Notification[]) => {\n      if (notifications != null) {\n        console.log(\"Notifications: \" + notifications);\n        this.notifications = notifications;\n        this.notificationCount = notifications.length;\n      }\n    })\n\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/main']);\n  }\n\n\n  onToggle() {\n    console.log('etmi test');\n    this.toggleState = !this.toggleState;\n    this.toggleDrawer.emit();\n  }\n\n  //TODO: сделать редактирование чисто для админа кошелька\n  onWalletEditDialog() {\n    const dialogRef = this.dialog.open(EditWalletComponent);\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  test() {\n    this.noteService.deleteNotifications().subscribe();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-absolute fixed-top m-0\">\n  <div class=\"nav-container d-flex w-100\">\n    <div class=\"expense-image\">\n      <div class=\"d-flex justify-content-center align-items-center\">\n        <div>\n          <img class=\"img-responsive border border-dark rounded-circle\" src=\"../../../assets/images/x-coin.jpg\"\n            style=\"height: 45px; width: 45px;\">\n        </div>\n        <div>\n          <p class=\"mb-0 ml-2 mat-h5 brand-name\">\n            XPense\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-flex right-nav\">\n      <div class=\"col-1 justify-content-center align-self-center\">\n        <button type=\"button\" class=\"btn btn-outline-secondary toggleButton\" (click)=\"onToggle()\">\n          <i class=\"nc-icon\" [ngClass]=\"toggleState == false ? 'fa fa-arrow-left' : 'fa fa-arrow-right'\"></i>\n        </button>\n      </div>\n      <div class=\"d-flex ml-auto align-items-center justify-content-end col-3 col-sm-5\">\n        <div class=\"dropdown\">\n          <button type=\"button\" class=\"btn button-transparent dropdown-toggle pr-0 pl-0\" id=\"dropdownMenuButton\"\n            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <i class=\"nc-icon nc-settings-gear-65\"></i>\n          </button>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n            <a class=\"dropdown-item\" href=\"#\">Edit profile</a>\n            <a *appHasRole=\"['Admin']\" class=\"dropdown-item\" style=\"cursor: pointer;\"\n              (click)=\"onWalletEditDialog()\">Edit\n              wallet</a>\n            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n          </div>\n        </div>\n        <div class=\"dropdown\">\n          <button type=\"button\" (click)=\"test()\" class=\"btn button-transparent dropdown-toggle\" id=\"notifications\"\n            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <i [matBadgeHidden]=\"notificationCount === 0 ? true : false\" matBadge={{notificationCount}}\n              matBadgeSize=\"small\" matBadgeColor=\"warn\" class=\"nc-icon nc-bell-55\"></i>\n          </button>\n          <div class=\"dropdown-menu\" aria-labelledby=\"notifications\">\n            <p *ngFor=\"let notification of notifications\" class=\"dropdown-item\">{{notification.message}}</p>\n          </div>\n        </div>\n       \n          <p class=\"text-center mr-5 mb-0\">Hello {{currentUserName}}</p>\n        \n        <div class=\"d-flex align-items-center\">\n\n          <button (click)=\"logout()\" class=\"btn btn-outline-secondary mr-5\">Logout</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</nav>","import { Component, OnInit, ViewChild, EventEmitter, Output, Input } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { CategoryData } from 'src/app/_model/categoryData';\nimport { WalletService } from 'src/app/_services/wallet.service';\n\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n    private walletService: WalletService) { }\n  id: string;\n  categoryTitles: CategoryData[] = [];\n  @Input() toggle: boolean;\n  @Output() createExpense = new EventEmitter();\n\n  @ViewChild('sidenav') sidenav: MatSidenav;\n  ngOnInit(): void {\n    this.authService.isLoggedIn.subscribe(data => {\n      if (data === false)\n        this.walletService.currentCategories = [];\n    })\n    this.id = this.authService.getToken().nameid;\n    if (this.walletService.currentCategories.length === 0) {\n      this.walletService.getWalletsCategories().subscribe((data: CategoryData[]) => {\n        this.walletService.currentCategories = data;\n        this.categoryTitles = this.walletService.currentCategories;\n        this.getIcons();\n      });\n    }\n    else {\n      this.categoryTitles = this.walletService.currentCategories;\n      this.getIcons();\n    }\n\n\n  }\n  close() {\n    this.sidenav.close();\n  }\n\n  getIcons() {\n    for (let i = 0; i < this.categoryTitles.length; i++) {\n      switch (this.categoryTitles[i].title) {\n        case 'Food':\n          this.categoryTitles[i].icon = \"fa-utensils\";\n          break;\n        case 'Sweets':\n          this.categoryTitles[i].icon = \"fa-candy-cane\";\n          break;\n        case 'Fruits':\n          this.categoryTitles[i].icon = \"fa-apple-alt\";\n          break;\n        case 'Vegetables':\n          this.categoryTitles[i].icon = \"fa-carrot\";\n          break;\n        case 'Meat':\n          this.categoryTitles[i].icon = \"fa-drumstick-bite\";\n          break;\n        case 'Alcohol':\n          this.categoryTitles[i].icon = \"fa-wine-glass\";\n          break;\n        case 'Fast food':\n          this.categoryTitles[i].icon = \"fa-pizza-slice\";\n          break;\n        case 'Housekeeping':\n          this.categoryTitles[i].icon = \"fa-house-user\";\n          break;\n        case 'Electricity':\n          this.categoryTitles[i].icon = \"fa-plug\";\n          break;\n        case 'Gas':\n          this.categoryTitles[i].icon = \"fa-gas-pump\";\n          break;\n        case 'Water':\n          this.categoryTitles[i].icon = \"fa-shower\";\n          break;\n        case 'Entertainment':\n          this.categoryTitles[i].icon = \"fa-grin-tears\";\n          break;\n        case 'Internet Shopping':\n          this.categoryTitles[i].icon = \"fa-shopping-cart\";\n          break;\n        case 'Restaurants':\n          this.categoryTitles[i].icon = \"fa-wine-bottle\";\n          break;\n        case 'Cinema':\n          this.categoryTitles[i].icon = \"fa-film\";\n          break;\n        case 'Theatre':\n          this.categoryTitles[i].icon = \"fa-theater-masks\";\n          break;\n        case 'Smoking':\n          this.categoryTitles[i].icon = \"fa-smoking\";\n          break;\n        case 'Medicine':\n          this.categoryTitles[i].icon = \"fa-medkit\";\n          break;\n        case 'Medicaments':\n          this.categoryTitles[i].icon = \"fa-tablets\";\n          break;\n        case 'Treatment':\n          this.categoryTitles[i].icon = \"fa-stethoscope\";\n          break;\n        case 'Beauty':\n        case 'Beauty accessories':\n        case 'Beauty products':\n        case 'Beauty procedures':\n          this.categoryTitles[i].icon = \"fa-mask\";\n          break;\n        case 'Sport':\n        case 'Sport events':\n        case 'Sport gambling':\n        case 'Sport inventory':\n        case 'Sport activities':\n          this.categoryTitles[i].icon = \"fa-futbol\";\n          break;\n        case 'Transportation':\n          this.categoryTitles[i].icon = \"fa-car\";\n          break;\n        case 'Air transportation':\n          this.categoryTitles[i].icon = \"fa-plane\";\n          break;\n        case 'Land transportation':\n          this.categoryTitles[i].icon = \"fa-bus\";\n          break;\n        case 'Other':\n          this.categoryTitles[i].icon = \"fa-random\";\n          break;\n        default:\n          this.categoryTitles[i].icon = \"fa-exclamation-circle\";\n      }\n    }\n  }\n\n  onCreate() {\n    this.createExpense.emit(\"test\");\n  }\n\n\n\n}\n","<div class=\"sidebar\" data-color=\"white\" data-active-color=\"danger\">\n    <div class=\"sidebar-wrapper\">\n        <ul [ngClass]=\"toggle === true ? 'toggled':''\" class=\"nav\">\n            <li routerLinkActive=\"active\">\n                <a [routerLink]=\"['/wallet/home']\">\n                    <i class=\"nc-icon nc-shop\"></i>\n                    <p matTooltip=\"Домашняя страница\">Home</p>\n                </a>\n            </li>\n            <li routerLinkActive=\"active\">\n                <a [routerLink]=\"['/wallet/walletExpenses']\">\n                    <i class=\"nc-icon nc-bank\"></i>\n                    <p matTooltip=\"Страница кошелька\">Your Wallet</p>\n                </a>\n            </li>\n            <li routerLinkActive=\"active\">\n                <a [routerLink]=\"['/wallet/previousExpenses']\">\n                    <i class=\"nc-icon nc-calendar-60\"></i>\n                    <p matTooltip=\"Предыдущие расходы\">Previous Expenses</p>\n                </a>\n            </li>\n            <li routerLinkActive=\"active\">\n                <a [routerLink]=\"['/wallet/getWalletStatistics']\">\n                    <i class=\"nc-icon nc-chart-bar-32\"></i>\n                    <p matTooltip=\"Статистика кошелька\">Wallet Statistics</p>\n                </a>\n            </li>\n            <li routerLinkActive=\"active\">\n                <a [routerLink]=\"['/wallet/userStatistics/' + id]\">\n                    <i class=\"nc-icon nc-circle-10\"></i>\n                    <p matTooltip=\"Статистика пользователей\">User Statistics</p>\n                </a>\n            </li>\n            <li>\n                <a data-toggle=\"collapse\" data-target=\"#collapseExample\">\n                    <i class=\"nc-icon nc-chart-pie-36\"></i>\n                    <p matTooltip=\"Ваши категории\">Categories</p>\n                </a>\n                <div *ngFor=\"let category of categoryTitles\" id=\"collapseExample\" class=\"collapse categories\">\n                    <ul class=\"nav ml-3\">\n                        <li routerLinkActive=\"active\">\n                            <a style=\"font-size: 10px;\" [routerLink]=\"['/wallet/catstat', category.id]\">\n                                <i class=\"fas {{category.icon}}\"></i>\n                                <p matTooltip=\"Категория: {{category.title}}\">{{category.title}}</p>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </li>\n\n            <li routerLinkActive=\"active\">\n                <a [routerLink]=\"['/home2']\">\n                    <i class=\"nc-icon nc-badge\"></i>\n                    <p>Profile</p>\n                </a>\n            </li>\n            <li *appHasRole=\"['Admin']\" routerLinkActive=\"active\">\n                <a [routerLink]=\"['/wallet/walletAdmin']\">\n                    <i class=\"nc-icon nc-lock-circle-open\"></i>\n                    <p matTooltip=\"Страница для админа\">Admin Panel</p>\n                </a>\n            </li>\n        </ul>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-signup-signin style=\"color: #fff;\"></app-signup-signin>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    console.log('NOT FOUND');\n    \n  }\n\n  back(){\n    this.router.navigate(['/main']);\n  }\n\n}\n","<div class=\"container border\" style=\"height: 100vh;\">\n    <div class=\"row\">\n        <div class=\"container\">\n            <div class=\"row justify-content-center align-items-center\">\n                <h1>PAGE NOT FOUND</h1>\n                <button (click)=\"back()\" class=\"btn btn-secondary\">Go Back</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { Photo } from '../_model/photo';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo',\n  templateUrl: './photo.component.html',\n  styleUrls: ['./photo.component.css']\n})\nexport class PhotoComponent implements OnInit {\n\n  //@Output() updateCurrentMainPhoto = new EventEmitter<string>();\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  response: string;\n  currentMain: Photo;\n  photo: Photo;\n  baseUrl = environment.apiUrl;\n\n\n  constructor(private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit(): void {\n    this.initialeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n\n  initialeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'photo/' + this.authService.getToken().nameid,\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n\n\n    this.uploader.onSuccessItem = (item, response, status, header) => {\n      if (response) {\n        //converts string into object\n        const res: Photo = JSON.parse(response);\n        //we building a photo object from the response from the server\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n        };\n        this.photo = photo;\n      }\n    }\n  }\n  //TODO: сделать отдельный сервис для фото\n  getPhoto() {\n    this.authService.getPhoto().subscribe((data: Photo) => {\n      this.photo = data;\n    })\n  }\n\n  deletePhoto() {\n    this.authService.deletePhoto().subscribe(() => {\n      this.photo = null;\n    })\n  }\n\n}\n","<div class=\"row mt-3\">\n\n    <div class=\"col-md-3\">\n\n        <h3>Add photos</h3>\n\n        <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\"\n            [uploader]=\"uploader\" class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n            <i class=\"fa fa-upload fa-3x\"></i>\n            Drop photos here\n        </div>\n\n        Multiple\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n        Single\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n    </div>\n\n    <div *ngIf=\"uploader?.queue?.length\" class=\"col-md-9\" style=\"margin-bottom: 40px\">\n\n        <h3>Upload queue</h3>\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th width=\"50%\">Name</th>\n                    <th>Size</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of uploader.queue\">\n                    <td><strong>{{ item?.file?.name }}</strong></td>\n                    <!-- | number:'.2' -->\n                    <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024  }} MB</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <div>\n                Queue progress:\n                <div class=\"progress mb-4\">\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"uploader.uploadAll()\"\n                [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"fa fa-upload\"></span> Upload\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-s\" (click)=\"uploader.cancelAll()\"\n                [disabled]=\"!uploader.isUploading\">\n                <span class=\"fa fa-ban\"></span> Cancel\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader.clearQueue()\"\n                [disabled]=\"!uploader.queue.length\">\n                <span class=\"fa fa-trash\"></span> Remove\n            </button>\n        </div>\n\n    </div>\n\n</div>\n\n<div class=\"container\">\n    <div class=\"group-btn\">\n        <button class=\"btn btn-success\" (click)=\"getPhoto()\">Get Photo</button>\n        <button class=\"btn btn-danger\" (click)=\"deletePhoto()\">Delete Photo</button>\n    </div>\n    <div *ngIf=\"photo\">\n        <img [src]=photo.url style=\"width: 200px; height: 200px;\">\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateWalletComponent } from 'src/app/wallet/create-wallet/create-wallet.component';\nimport { RequestAccessComponent } from 'src/app/request/request-access/request-access.component';\nimport { CheckInvitesComponent } from 'src/app/invites/check-invites/check-invites.component';\nimport { Router } from '@angular/router';\nimport { Notification } from 'src/app/_model/notification';\nimport { NotificationService } from 'src/app/_services/notification.service';\n\n@Component({\n  selector: 'app-signup-signin',\n  templateUrl: './signup-signin.component.html',\n  styleUrls: ['./signup-signin.component.css']\n})\nexport class SignupSigninComponent implements OnInit {\n\n\n  //TODO: создание кошелька, проверка приглашений, и создание запроса - сделать через modal\n  signUpForm: FormGroup;\n  signInForm: FormGroup;\n  isSignUp = true;\n  isSignedIn = false;\n  invites: number = 0;\n  constructor(private authService: AuthService,\n    private alertify: AlertifyService,\n    public dialog: MatDialog,\n    private router: Router,\n    private noteService: NotificationService) { }\n\n  ngOnInit(): void {\n    this.signUpForm = new FormGroup({\n      'usernameUp': new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(10), Validators.pattern('([0-9].*[a-zA-Z])|([a-zA-Z].*[0-9])')]),\n      'userpassUp': new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(8), Validators.pattern('([0-9].*[a-zA-Z])|([a-zA-Z].*[0-9])')]),\n      'role': new FormControl('', Validators.required)\n    });\n    this.signInForm = new FormGroup({\n      'usernameIn': new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(10)]),\n      'userpassIn': new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(8)])\n    });\n    this.authService.isLoggedIn.subscribe(res => {\n      this.isSignedIn = res;\n    })\n  }\n\n  onSignUp() {\n    const username = this.signUpForm.value['usernameUp'];\n    const password = this.signUpForm.value['userpassUp'];\n    const role = this.signUpForm.value['role'];\n    this.authService.register(username, password, role).subscribe((data: any) => {\n      this.alertify.success(data.data);\n      this.signUpForm.reset();\n      this.signInForm.reset();\n      this.isSignUp = false;\n    }, error => {\n      this.alertify.error(error.error);\n    })\n  }\n\n  onSignIn() {\n    const username = this.signInForm.value['usernameIn'];\n    const password = this.signInForm.value['userpassIn'];\n    this.authService.login(username, password).subscribe((data: any) => {\n      this.alertify.success(\"Welcome: \" + data.user['userName']);\n      if (this.hasWallet()) {\n        this.authService.hasWallet.next(true);\n        this.router.navigate(['/wallet/home']);\n      }\n      else {\n        this.isSignedIn = true;\n        this.noteService.getNotifications().subscribe((res: Notification[]) => {\n          this.invites = res.length;\n        })\n      }\n    }, error => {\n      this.alertify.error(error.error);\n    })\n  }\n\n  switchCard() {\n    this.isSignUp = !this.isSignUp;\n    this.signUpForm.reset();\n    this.signInForm.reset();\n  }\n\n  hasWallet() {\n    if (this.authService.getToken() !== null) {\n      console.log(this.authService.getToken());\n      if (this.authService.getToken().hasWallet === \"true\")\n        return true;\n      return false;\n    }\n    return false;\n  }\n\n  onWalletCreateDialog() {\n    const dialogRef = this.dialog.open(CreateWalletComponent);\n    dialogRef.afterClosed().subscribe((result: boolean) => {\n      if (result)\n        this.logout();\n    });\n  }\n\n  onInvitesCheckDialog() {\n    const dialogRef = this.dialog.open(CheckInvitesComponent);\n    dialogRef.afterClosed().subscribe((result: boolean) => {\n      if (result)\n        this.logout();\n    });\n  }\n\n  onRequestCreateDialog() {\n    const dialogRef = this.dialog.open(RequestAccessComponent);\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n\n}\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark fixed-top\">\n    <div class=\"container\">\n        <a href=\"\" class=\"navbar-brand\">Xpense</a>\n        <button class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n            <ul class=\"navbar-nav ml-auto\">\n                <li class=\"nav-item\">\n                    <a href=\"\" class=\"nav-link\">Home</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a href=\"\" class=\"nav-link\">Learn more</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a href=\"\" class=\"nav-link\">Prices</a>\n                </li>\n                <li *ngIf=\"isSignedIn\" class=\"nav-item\">\n                    <a (click)=\"logout()\" style=\"cursor: pointer;\" class=\"nav-link\">Logout</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>\n\n<header id=\"home-section\">\n    <div class=\"dark-overlay align-content-center\">\n        <div class=\"home-inner pt-5 container\">\n            <div *ngIf=\"!isSignedIn\" class=\"row mt-5\">\n                <div class=\"col-lg-8 d-none d-lg-block\">\n                    <h1 class=\"display-4 text-capitalize\">Track your expenses easily</h1>\n                    <div class=\"d-flex\">\n                        <div class=\"p-4 align-self-start\">\n                            <i class=\"fas fa-check fa-2x\"></i>\n                        </div>\n                        <div class=\"p-4 align-self-end\">\n                            Simple system of managing expenses\n                        </div>\n                    </div>\n                    <div class=\"d-flex\">\n                        <div class=\"p-4 align-self-start\">\n                            <i class=\"fas fa-check fa-2x\"></i>\n                        </div>\n                        <div class=\"p-4 align-self-end\">\n                            Invite up to 5 users\n                        </div>\n                    </div>\n                    <div class=\"d-flex\">\n                        <div class=\"p-4 align-self-start\">\n                            <i class=\"fas fa-check fa-2x\"></i>\n                        </div>\n                        <div class=\"p-4 align-self-end\">\n                            Enjoy variety of statistical data\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-lg-4\">\n\n                    <div class=\"card-container\">\n                        <div class=\"card-flip\" [ngClass]=\"{flip: !isSignUp}\">\n                            <div class=\"card front regform text-center card-form\">\n                                <div class=\"card-body text-light shadow-lg\">\n                                    <h1 matTooltip=\"Регистрация\">Sign Up Today</h1>\n                                    <p>Please, fill out the registration form</p>\n                                    <div class=\"border-primary\">\n                                        <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSignUp()\">\n                                            <div class=\"form-group\">\n                                                <div class=\"input-group mb-3\">\n                                                    <div class=\"input-group-prepend shadow-lg\">\n                                                        <span matTooltip=\"Имя пользователя\" class=\"input-group-text\"\n                                                            [ngClass]=\"{'bg-danger text-light': signUpForm.get('usernameUp').errors && signUpForm.get('usernameUp').touched,\n                                                    'bg-success text-white': !signUpForm.get('usernameUp').errors}\">Username</span>\n                                                    </div>\n                                                    <input [ngClass]=\"{'is-invalid': signUpForm.get('usernameUp').errors && signUpForm.get('usernameUp').touched,\n                                                                'is-valid': !signUpForm.get('usernameUp').errors}\"\n                                                        type=\"text\" formControlName=\"usernameUp\" class=\"form-control\">\n\n                                                    <div matTooltip=\"Нужно ввести имя пользователя\" *ngIf=\"signUpForm.get('usernameUp').hasError('required') && signUpForm.get('usernameUp').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        Username is required\n                                                    </div>\n                                                    <div matTooltip=\"Имя не может быть меньше 4 символов\" *ngIf=\"signUpForm.get('usernameUp').hasError('minlength') && signUpForm.get('usernameUp').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        Username should be at least 4 characters required\n                                                    </div>\n                                                    <div matTooltip=\"Имя не может быть больше 10 символов\" *ngIf=\"signUpForm.get('usernameUp').hasError('maxlength') && signUpForm.get('usernameUp').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        Username should be no longer than 10 characters\n                                                    </div>\n                                                    <div matTooltip=\"Имя должно содержать минимум 1 букву и 1 цифру\" *ngIf=\"signUpForm.get('usernameUp').hasError('pattern') && signUpForm.get('usernameUp').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        You need to have at least 1 letter and number\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <div class=\"input-group mb-3\">\n                                                    <div class=\"input-group-prepend shadow-lg\">\n                                                        <span matTooltip=\"Пароль\" class=\"input-group-text\"\n                                                            [ngClass]=\"{'bg-danger text-light': signUpForm.get('userpassUp').errors && signUpForm.get('userpassUp').touched,\n                                                            'bg-success text-white': !signUpForm.get('userpassUp').errors}\">\n                                                            Password</span>\n                                                    </div>\n                                                    <input [ngClass]=\"{'is-invalid': signUpForm.get('userpassUp').errors && signUpForm.get('userpassUp').touched,\n                                                            'is-valid': !signUpForm.get('userpassUp').errors}\"\n                                                        type=\"password\" formControlName=\"userpassUp\"\n                                                        class=\"form-control\">\n                                                    <div matTooltip=\"Нужно ввести пароль\" *ngIf=\"signUpForm.get('userpassUp').hasError('required') && signUpForm.get('userpassUp').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        Password is required\n                                                    </div>\n                                                    <div matTooltip=\"Пароль не может быть меньше 4 символов\" *ngIf=\"signUpForm.get('userpassUp').hasError('minlength') && signUpForm.get('userpassUp').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        Password should be at least 4 characters required\n                                                    </div>\n                                                    <div matTooltip=\"Пароль не может быть больше 8 символов\" *ngIf=\"signUpForm.get('userpassUp').hasError('maxlength') && signUpForm.get('userpassUp').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        Password should be no longer than 8 characters\n                                                    </div>\n                                                    <div matTooltip=\"Пароль должен содержать минимум 1 букву и 1 цифру\" *ngIf=\"signUpForm.get('userpassUp').hasError('pattern') && signUpForm.get('userpassUp').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        You need to have at least 1 letter and number\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <div class=\"input-group mb-3\">\n                                                    <div class=\"input-group-prepend shadow-lg\">\n                                                        <span matTooltip=\"Роль пользователя\" class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': signUpForm.get('role').errors && signUpForm.get('role').touched,\n                                                'bg-success text-white': !signUpForm.get('role').errors}\">Role</span>\n                                                    </div>\n                                                    <select formControlName=\"role\" class=\"form-control\">\n                                                        <option selected matTooltip=\"Взрослый\" value=\"Adult\">Adult</option>\n                                                        <option matTooltip=\"Ребенок\" value=\"Child\">Child</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <button matTooltip=\"Зарегестрироваться\" class=\"btn btn-secondary btn-block shadow-lg\"\n                                                    [disabled]=\"signUpForm.invalid\"\n                                                    [ngClass]=\"{'btn-success': signUpForm.valid}\">Create\n                                                    account</button>\n                                            </div>\n                                        </form>\n                                        <div class=\"container\">\n                                            <p matTooltip=\"Уже есть аккаунт?\">Already signed-up? <a matTooltip=\"Ввойти\" (click)=\"switchCard()\"\n                                                    style=\"cursor: pointer;\" class=\"text-light\"><strong>Sign-in\n                                                        here!</strong></a></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card back regform text-center card-form\">\n                                <div class=\"card-body text-light shadow-lg\">\n                                    <h1 matTooltip=\"Ввойти в аккаунт\">Sign In Today</h1>\n                                    <p matTooltip=\"Введите имя пользователя и пароль\">Please, enter your username and password</p>\n                                    <div class=\"border-primary\">\n                                        <form [formGroup]=\"signInForm\" (ngSubmit)=\"onSignIn()\">\n                                            <div class=\"form-group\">\n                                                <div class=\"input-group mb-3\">\n                                                    <div matTooltip=\"Имя пользователя\" class=\"input-group-prepend shadow-lg\">\n                                                        <span class=\"input-group-text\"\n                                                            [ngClass]=\"{'bg-danger text-light': signInForm.get('usernameIn').errors && signInForm.get('usernameIn').touched,\n                                                    'bg-success text-white': !signInForm.get('usernameIn').errors}\">Username</span>\n                                                    </div>\n                                                    <input [ngClass]=\"{'is-invalid': signInForm.get('usernameIn').errors && signInForm.get('usernameIn').touched,\n                                                                'is-valid': !signInForm.get('usernameIn').errors}\"\n                                                        type=\"text\" formControlName=\"usernameIn\" class=\"form-control\">\n\n                                                    <div matTooltip=\"Введите имя пользователя\" *ngIf=\"signInForm.get('usernameIn').hasError('required') && signInForm.get('usernameIn').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        Username is required\n                                                    </div>\n                                                    <div matTooltip=\"Имя пользователя не может быть меньше 4 символов\" *ngIf=\"signInForm.get('usernameIn').hasError('minlength') && signInForm.get('usernameIn').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        Username should be at least 4 characters required\n                                                    </div>\n                                                    <div matTooltip=\"Имя пользователя не может быть больше 10 символов\" *ngIf=\"signInForm.get('usernameIn').hasError('maxlength') && signInForm.get('usernameIn').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        Username should be no longer than 10 characters\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\">\n                                                <div class=\"input-group mb-5\">\n                                                    <div class=\"input-group-prepend shadow-lg\">\n                                                        <span matTooltip=\"Пароль\" class=\"input-group-text\"\n                                                            [ngClass]=\"{'bg-danger text-light': signInForm.get('userpassIn').errors && signInForm.get('userpassIn').touched,\n                                                            'bg-success text-white': !signInForm.get('userpassIn').errors}\">\n                                                            Password</span>\n                                                    </div>\n                                                    <input [ngClass]=\"{'is-invalid': signInForm.get('userpassIn').errors && signInForm.get('userpassIn').touched,\n                                                            'is-valid': !signInForm.get('userpassIn').errors}\"\n                                                        type=\"password\" formControlName=\"userpassIn\"\n                                                        class=\"form-control\">\n                                                    <div matTooltip=\"Введите пароль\" *ngIf=\"signInForm.get('userpassIn').hasError('required') && signInForm.get('userpassIn').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        Password is required\n                                                    </div>\n                                                    <div matTooltip=\"Пароль не может быть меньше 4 символов\" *ngIf=\"signInForm.get('userpassIn').hasError('minlength') && signInForm.get('userpassIn').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        Password should be at least 4 characters required\n                                                    </div>\n                                                    <div matTooltip=\"Пароль не может быть больше 8 символов\" *ngIf=\"signInForm.get('userpassIn').hasError('maxlength') && signInForm.get('userpassIn').touched\"\n                                                        class=\"invalid-feedback\">\n                                                        Password should be no longer than 8 characters\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group mb-3\">\n                                                <button matTooltip=\"Ввойти\" class=\"btn btn-secondary btn-block shadow-lg\"\n                                                    [disabled]=\"signInForm.invalid\"\n                                                    [ngClass]=\"{'btn-success': signInForm.valid}\">Sign in</button>\n                                            </div>\n                                        </form>\n                                        <div class=\"container\">\n                                            <p matTooltip=\"Нет аккаунт?\">Don't have an account? <a matTooltip=\"Зарегистрируйтесь!\" (click)=\"isSignUp = !isSignUp\"\n                                                    style=\"cursor: pointer;\" class=\"text-light\"><strong>Sign-up\n                                                        here!</strong></a></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"isSignedIn\" class=\"row justify-content-center pt-5\">\n                <div class=\"card mr-5\" style=\"width: 18rem;\">\n                    <img src=\"https://media.workandmoney.com/10/92/109237ed61a54a9392bcf905bf38d67d.jpg\"\n                        class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 matTooltip=\"Создайте свой собственный кошелёк\" class=\"card-title\">Create Your Own Wallet</h5>\n                        <p matTooltip=\"Создание собственного кошелька позволяет добавлять расходы, приглашать новых пользователей, и смотреть статистику!\" class=\"card-text\">Become your own wallet owner. Add expenses, invite family members, and find\n                            out how much you spend!</p>\n                        <a matTooltip=\"Создать кошелёк\" (click)=\"onWalletCreateDialog()\" class=\"btn btn-primary text-light\">Create</a>\n                    </div>\n                </div>\n\n                <div class=\"card mr-5\" style=\"width: 18rem;\">\n                    <img src=\"https://www.beeprinting.co.uk/wp-content/uploads/2013/07/Three-color-50pcs-lot-Wedding-Invitation-Cards-With-Purple-Ribbon-Printing-Laser-Cut-Wedding-Invitations.jpg\"\n                        class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 matTooltip=\"Приглашение от других пользователей\" class=\"card-title\">Check Invites From Other Users</h5>\n                        <p matTooltip=\"Здесь, вы можете посмотреть есть ли у вас приглашение от других пользователей для доступа к их кошельку.\" class=\"card-text\">Here, you can look whether other users have invited you to join their\n                            wallets!</p>\n                        <a matTooltip=\"Проверить приглашения\" [matBadge]=\"invites\" matBadgePosition=\"after\" matBadgeColor=\"accent\" (click)=\"onInvitesCheckDialog()\" class=\"btn btn-primary text-light\">Check</a>\n                    </div>\n                </div>\n\n                <div class=\"card mr-5\" style=\"width: 18rem;\">\n                    <img src=\"https://www.underconsideration.com/brandnew/archives/request_logo.png\"\n                        class=\"card-img-top\" alt=\"...\">\n                    <div class=\"card-body\">\n                        <h5 matTooltip=\"Запросите доступ к кошельку другого пользователя\" class=\"card-title\">Send Requests To Join Wallets</h5>\n                        <p matTooltip=\"Если вы хотите присоединиться к кошельку другого пользователя, Вы можете это сделать отослав запрос на имя этого пользователя.\" class=\"card-text\">If you want to join your friend's or family's wallets, choose this option\n                            and send a request to the owner of the wallet! You do that by entering user's name.</p>\n                        <a matTooltip=\"Запросить доступ\" (click)=\"onRequestCreateDialog()\" class=\"btn btn-primary text-light\">Send</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n<!-- learn more section -->\n\n<section id=\"explore-head-section\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col text-center py-5\">\n                <h1 class=\"mat-h1\">\n                    Explore\n                </h1>\n                <p class=\"lead\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Vero reiciendis aliquam\n                    unde adipisci mollitia, quaerat a. Deserunt beatae consectetur vero?</p>\n                <a href=\"\" class=\"btn btn-outline-secondary\">Learn more</a>\n            </div>\n        </div>\n    </div>\n</section>\n\n<!-- prices section -->\n\n<section id=\"price-section\" class=\"bg-light text-muted py-5\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <img src=\"assets\\images\\explore-section1.jpg\" alt=\"\" class=\"img-fluid nb-3 rounded-circle\">\n            </div>\n            <div class=\"col-md-6\">\n                <h3>Explore & Connect</h3>\n                <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Beatae, delectus earum. Mollitia omnis\n                    reprehenderit suscipit rem quidem minus quisquam magni!</p>\n                <div class=\"d-flex\">\n                    <div class=\"p-4 align-self-start\">\n                        <i class=\"fas fa-check fa-2x\"></i>\n\n                    </div>\n                    <div class=\"p-4 align-self-end\">\n                        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Cupiditate, rerum beatae? Aliquid,\n                        obcaecati qui. Velit voluptatum veniam molestias omnis molestiae rem at assumenda eaque,\n                        officiis sequi ratione magnam quae inventore.\n                    </div>\n                </div>\n                <div class=\"d-flex\">\n                    <div class=\"p-4 align-self-start\">\n                        <i class=\"fas fa-check fa-2x\"></i>\n\n                    </div>\n                    <div class=\"p-4 align-self-end\">\n                        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Cupiditate, rerum beatae? Aliquid,\n                        obcaecati qui. Velit voluptatum veniam molestias omnis molestiae rem at assumenda eaque,\n                        officiis sequi ratione magnam quae inventore.\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n\n<!-- footer -->\n\n<footer id=\"main-footer\" class=\"bg-dark\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col text-center py-4\">\n                <h3>XPENSE</h3>\n                <p>Copyright &copy; <span id=\"year\">2020</span></p>\n            </div>\n        </div>\n    </div>\n</footer>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { RequestService } from 'src/app/_services/request.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { Request } from 'src/app/_model/request';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-check-requests',\n  templateUrl: './check-requests.component.html',\n  styleUrls: ['./check-requests.component.css']\n})\nexport class CheckRequestsComponent implements OnInit {\n\n\n  constructor(private reqService: RequestService, private authService: AuthService, private alertify: AlertifyService) { }\n\n  @Output() onUserAdd = new EventEmitter();\n\n  columns: string[] = ['from', 'date', 'actions'];\n  requests = new MatTableDataSource<Request>();\n  ngOnInit(): void {\n    this.reqService.getRequests(this.authService.getToken().nameid).subscribe((req: Request[]) => {\n      this.requests.data = req;\n      if (this.requests.data.length == 0)\n        this.alertify.error(\"You have no new requests\");\n    });\n  }\n  //TODO: обновлять таблицу при добавлении пользователя\n  acceptRequest(email: string, rowIndex: number) {\n    this.reqService.acceptRequest(email, this.authService.getToken().nameid).subscribe((response) => {\n      this.requests.data.splice(rowIndex, 1)\n      this.requests.data = this.requests.data;\n      this.alertify.success(response);\n      this.onUserAdd.emit();\n    }, error => {\n      this.alertify.error(error.error);\n    });\n  }\n\n  declineRequest(email: string, rowIndex: number) {\n    this.reqService.declineRequest(email).subscribe((response) => {\n      this.requests.data.splice(rowIndex, 1);\n      this.requests.data = this.requests.data;\n      this.alertify.success(response)\n    }, error => {\n      this.alertify.error(error.error);\n    });\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"card card-stats\">\n            <div class=\"card-body \">\n                <div class=\"row\">\n                    <div class=\"col-5 col-md-4\">\n                        <div class=\"icon-big ml-4\">\n                            <i class=\"fa fa-user-plus text-success\"></i>\n                        </div>\n                    </div>\n                    <div class=\"col-7 col-md-8\">\n                        <div class=\"numbers\">\n                            <p class=\"card-category\">Get Requests</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer \">\n                <div class=\"stats\">\n                    <div class=\"mat-elevation-z8 box text-center\">\n                        <table style=\"width: 100%;\" mat-table [dataSource]=\"requests\">\n                            <ng-container matColumnDef=\"from\">\n                                <th class=\"text-center\" mat-header-cell *matHeaderCellDef> From </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.requestCreatorEmail}} </td>\n                            </ng-container>\n                            <ng-container matColumnDef=\"date\">\n                                <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Date </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.inviteCreationTime | date:'medium'}}\n                                </td>\n                            </ng-container>\n                            <ng-container matColumnDef=\"actions\">\n                                <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Actions </th>\n                                <td mat-cell *matCellDef=\"let element; let i = index\">\n                                    <button  matTooltip=\"Принять нового пользователя\" class=\"btn btn-success btn-sm mr-2\"\n                                        (click)=\"acceptRequest(element.requestCreatorEmail, i)\">Accept</button>\n                                    <button matTooltip=\"Отклонить нового пользователя\" class=\"btn btn-danger btn-sm\"\n                                        (click)=\"declineRequest(element.requestCreatorEmail, i)\">Decline</button>\n                                </td>\n                            </ng-container>\n                            <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n                            <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\n                        </table>\n\n                        <mat-paginator #userPaginator class=\"box\" [pageSizeOptions]=\"[5]\" [hidePageSize]=\"true\"\n                            showFirstLastButtons>\n                        </mat-paginator>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { RequestService } from 'src/app/_services/request.service';\nimport { Router } from '@angular/router';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-request-access',\n  templateUrl: './request-access.component.html',\n  styleUrls: ['./request-access.component.css']\n})\nexport class RequestAccessComponent implements OnInit {\n\n  constructor(private reqService: RequestService, \n    private router: Router, \n    private alertify: AlertifyService,\n    public dialogRef: MatDialogRef<RequestAccessComponent>) { }\n\n  @Input() email: string = \"\";\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    if (this.email.length >= 4) {\n      this.reqService.createRequestForAccess(this.email).subscribe((response: any) => {\n        this.alertify.success(response);\n        console.log(response);\n      }, error => {\n        this.alertify.error(error.error)\n      });\n    }\n    else{\n      this.alertify.error(\"Email is too short!\");\n    }\n  }\n\n  back() {\n    this.dialogRef.close();\n  }\n\n  test() {\n    this.reqService.test().subscribe(response => {\n      this.alertify.success(response)\n    }, error => {\n      this.alertify.error(error.error);\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <form class=\"form-group\" fomr>\n            <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Enter email\" class=\"form-control\">\n            <button (click)=\"onSubmit()\" class=\"btn btn-outline-secondary btn-block mt-2\">Request</button>\n            <button class=\"btn btn-warning btn-block\" (click)=\"back()\">Back</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ExpenseService } from 'src/app/_services/expense.service';\nimport { LastMonthStat } from 'src/app/_model/lastMonthStat';\nimport { TopUsersStat } from 'src/app/_model/top-users-stat';\nimport { CategoryComparison } from 'src/app/_model/category-comparison';\nimport { ActivatedRoute } from '@angular/router';\nimport { ExpenseForTable } from 'src/app/_model/expense-for-table';\nimport { WalletService } from 'src/app/_services/wallet.service';\nimport { CategoryData } from 'src/app/_model/categoryData';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-category-statistics',\n  templateUrl: './category-statistics.component.html',\n  styleUrls: ['./category-statistics.component.css']\n})\nexport class CategoryStatisticsComponent implements OnInit {\n\n  constructor(private expService: ExpenseService,\n    private route: ActivatedRoute,\n    private walletService: WalletService) {\n    // this.router.routeReuseStrategy.shouldReuseRoute = function () {\n    //   return false;\n    // };\n  }\n\n  showComparisonData = false;\n\n  largestExpense: number;\n  currentMonthLargestExpense: number;\n  spentThisMonth: number;\n  spentAll: number;\n\n  chosenCategory: number;\n  chosenCategoryName: string;\n\n  currentMonthData: number;\n  lastMonthData: number;\n  mostSpentUser: TopUsersStat = null;\n  //here sum is count\n  mostUsedUser: TopUsersStat = null;\n  topFiveUsers: TopUsersStat[];\n  lastSixMonths: LastMonthStat[];\n\n  expenses = new MatTableDataSource<ExpenseForTable>();\n  columnsForExpenses: string[] = ['expenseTitle', 'userName', 'moneySpent', 'expenseDescription', 'creationDate'];\n\n  showData = true;\n\n  isLoading: boolean;\n  @ViewChild('paginator') paginator: MatPaginator;\n  ngOnInit(): void {\n\n    this.route.params.subscribe(params => {\n\n      this.walletService.getCurrentWallet();\n\n\n      this.chosenCategory = +params['id'] || 0;\n      if (this.walletService.currentCategories.length === 0) {\n        this.walletService.getWalletsCategories().subscribe((data: CategoryData[]) => {\n          this.walletService.currentCategories = data;\n          this.chosenCategoryName = this.walletService.currentCategories.find(x => x.id === this.chosenCategory).title;\n        });\n      } else {\n        this.chosenCategoryName = this.walletService.currentCategories.find(x => x.id === this.chosenCategory).title;\n      }\n      this.isLoading = true;\n      this.expService.getCategoryStatistics(this.chosenCategory).subscribe(data => {\n        if (data['categoryExpenses'].length === 0) {\n          this.showData = false;\n        }\n        else {\n          //понять почему не работает paginator\n          console.log(data);\n          \n          this.expenses.data = data['categoryExpenses'];\n          setTimeout(() => this.expenses.paginator = this.paginator);\n          this.largestExpense = data['largestExpense'];\n          this.currentMonthLargestExpense = data['currentMonthLargestExpense'];\n          this.mostSpentUser = data['mostSpentUser'];\n          this.mostUsedUser = data['mostUsedUser'];\n          this.currentMonthData = data['barCompareExpensesWithLastMonth']['currentMonthData'];\n          this.lastMonthData= data['barCompareExpensesWithLastMonth']['lastMonthData'];\n\n          if (this.currentMonthData > 0 && this.lastMonthData > 0){\n            console.log('Comparison check', this.currentMonthData, this.lastMonthData);\n            \n            this.showComparisonData = true;\n          }\n          this.spentThisMonth = data['spentThisMonth'];\n          this.spentAll = data['spentAll'];\n          this.topFiveUsers = data['topFiveUsers'];\n          this.lastSixMonths = data['lastSixMonths'];\n\n          this.showData = true;\n        }\n        this.isLoading = false;\n      });\n    });\n\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card card-test\">\n            <div class=\"image\">\n                <div style=\"width: 100%; height: 100%; background-color: #cafcdf;\"></div>\n            </div>\n            <div class=\"card-header\">\n                <h4 class=\"card-title text-center\">{{chosenCategoryName}} expenses</h4>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"isLoading\">\n    <div class=\"loader\">\n        <div class=\"face\">\n            <div class=\"circle\"></div>\n        </div>\n        <div class=\"face\">\n            <div class=\"circle\"></div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"showData && !isLoading\">\n    <div class=\"row\">\n        <div class=\"col-md-12 col-lg-5 col-xl-4\">\n            <div class=\"row\">\n                <div class=\"col-xl-6\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-body \">\n                            <div class=\"row\">\n                                <div class=\"col-5 col-md-4\">\n                                    <div class=\"icon-big text-center icon-primary\">\n                                        <i class=\"nc-icon nc-circle-10 text-primary\"></i>\n                                    </div>\n                                </div>\n                                <div class=\"col-7 col-md-8\">\n                                    <div class=\"numbers\">\n                                        <p class=\"card-category mb-2\">Most used user</p>\n                                        <div *ngIf=\"mostSpentUser != null\">\n                                            <p class=\"card-title\">{{mostSpentUser.userName}}\n                                            </p>\n                                        </div>\n                                        <div *ngIf=\"mostSpentUser === null\">\n                                            <p class=\"card-title\">---</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"card-footer \">\n                            <hr>\n                            <div class=\"stats\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-xl-6\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-body \">\n                            <div class=\"row\">\n                                <div class=\"col-5 col-md-4\">\n                                    <div class=\"icon-big text-center icon-success\">\n                                        <i class=\"nc-icon nc-circle-10 text-success\"></i>\n                                    </div>\n                                </div>\n                                <div class=\"col-7 col-md-8\">\n                                    <div class=\"numbers\">\n                                        <p class=\"card-category mb-2\">Most used user</p>\n                                        <div *ngIf=\"mostUsedUser != null\">\n                                            <p class=\"card-title\">{{mostUsedUser.userName}} </p>\n                                        </div>\n                                        <div *ngIf=\"mostUsedUser === null\">\n                                            <p class=\"card-title\">---</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card-footer \">\n                                <hr>\n                                <div class=\"stats\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-6\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-body \">\n                            <div class=\"row\">\n                                <div class=\"col-5 col-md-4\">\n                                    <div class=\"icon-big text-center icon-success\">\n                                        <i class=\"nc-icon nc-money-coins text-primary\"></i>\n                                    </div>\n                                </div>\n                                <div class=\"col-7 col-md-8\">\n                                    <div class=\"numbers\">\n                                        <p class=\"card-category mb-2\">Largest Expense</p>\n                                        <p *ngIf=\"largestExpense > 0\" class=\"card-title\">${{largestExpense}}</p>\n                                        <p *ngIf=\"largestExpense === 0\" class=\"card-title\">${{largestExpense}}</p>\n                                        <p>\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"card-footer \">\n                            <hr>\n                            <div class=\"stats\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-xl-6\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-body \">\n                            <div class=\"row\">\n                                <div class=\"col-5 col-md-4\">\n                                    <div class=\"icon-big text-center icon-success\">\n                                        <i class=\"nc-icon nc-money-coins text-success\"></i>\n                                    </div>\n                                </div>\n                                <div class=\"col-7 col-md-8\">\n                                    <div class=\"numbers\">\n                                        <p class=\"card-category mb-2\">Month's largest expense</p>\n                                        <p *ngIf=\"currentMonthLargestExpense > 0\" class=\"card-title\">\n                                            ${{currentMonthLargestExpense}}</p>\n                                        <p *ngIf=\"currentMonthLargestExpense === 0\" class=\"card-title\">\n                                            ${{currentMonthLargestExpense}}</p>\n                                        <p>\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"card-footer \">\n                            <hr>\n                            <div class=\"stats\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            <h5 class=\"card-title\">Top 5 users</h5>\n                            <p class=\"card-category\">Users with most expenses</p>\n                        </div>\n                        <div *ngIf=\"topFiveUsers\" class=\"card-body \">\n                            <app-pie-graph [topFiveUsers]=\"topFiveUsers\"></app-pie-graph>\n                        </div>\n                        <div *ngIf=\"!topFiveUsers\" class=\"card-body \">\n                            ---\n                        </div>\n                        <div class=\"card-footer\">\n                            <hr>\n                            <div class=\"stats\">\n                                <i class=\"fa fa-money\"></i> Number expenses made\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"card \" style=\"border-radius: 12px;\">\n                        <div class=\"card-header \">\n                            <h5 class=\"card-title\">Last 6 Months</h5>\n                            <p class=\"card-category\">Line Comparison</p>\n                        </div>\n                        <div *ngIf=\"lastSixMonths\" class=\"card-body \">\n                            <div>\n                                <app-line-chart [lastSixMonths]=\"lastSixMonths\"></app-line-chart>\n                            </div>\n                        </div>\n                        <div *ngIf=\"!lastSixMonths\" class=\"card-body \">\n                            <div>\n                                ---\n                            </div>\n                        </div>\n                        <div class=\"card-footer \">\n                            <hr>\n                            <div class=\"stats\">\n                                <i class=\"fa fa-calendar\"></i> Add text\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"showComparisonData\">\n                <div class=\"col-12\">\n                    <div class=\"card \" style=\"border-radius: 12px;\">\n                        <div class=\"card-header \">\n                            <h5 class=\"card-title\">Expenses Comparison</h5>\n                            <p class=\"card-category\">Last And Current Months</p>\n                        </div>\n                        <div *ngIf=\"chosenCategoryName\" class=\"container\">\n                            <!-- <app-bar-category-comparison [currentMonthbar]=\"currentMonthData\" [lastMonthbar]=\"lastMonthData\" [category]=\"chosenCategoryName\">\n                            </app-bar-category-comparison> -->\n                            <app-donut-chart [currentMonthbar]=\"currentMonthData\" [lastMonthbar]=\"lastMonthData\" [category]=\"chosenCategoryName\"></app-donut-chart>\n                        </div>\n                        <div class=\"card-footer \">\n                            <hr>\n                            <div class=\"stats\">\n                                <i class=\"fa fa-calendar\"></i> Add text\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"expenses.data.length > 0\" class=\"col-md-12 col-lg-7 col-xl-8\">\n            <div class=\"card\">\n                <div class=\"mat-elevation-z8\" style=\"box-shadow: none;\">\n                    <table style=\"width: 100%;\" mat-table [dataSource]=\"expenses\">\n                        <ng-container matColumnDef=\"expenseTitle\">\n                            <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Expense </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.expenseTitle}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"userName\">\n                            <th class=\"text-center\" mat-header-cell *matHeaderCellDef> User </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.userName}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"moneySpent\">\n                            <th class=\"text-center\" mat-header-cell *matHeaderCellDef> $ </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.moneySpent}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"expenseDescription\">\n                            <th class=\"text-center d-none d-lg-table-cell\" mat-header-cell *matHeaderCellDef>\n                                Description </th>\n                            <td class=\"d-none d-lg-table-cell\" mat-cell *matCellDef=\"let element\">\n                                {{element.expenseDescription}} </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"creationDate\">\n                            <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Date </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.creationDate | date :'short'}}\n                            </td>\n                        </ng-container>\n                        <tr mat-header-row *matHeaderRowDef=\"columnsForExpenses\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: columnsForExpenses;\"></tr>\n                    </table>\n                    <mat-paginator #paginator [pageSizeOptions]=\"[10]\" [hidePageSize]=\"true\" showFirstLastButtons>\n                    </mat-paginator>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"!showData && !isLoading\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-lg-3 col-md-6 col-sm-6\">\n            <div class=\"card card-stats\">\n                <div class=\"card-body \">\n                    <div class=\"row\">\n                        <div class=\"col-5 col-md-4\">\n                            <div class=\"icon-big text-center icon-warning\">\n                                <i class=\"fa fa-exclamation-triangle text-warning\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 col-md-8\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category mb-2\">{{chosenCategoryName}}</p>\n                                <p class=\"card-title\">No expenses</p>\n                                <p>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer \">\n                    <hr>\n                    <div class=\"stats\">\n                        <i class=\"fa fa-refresh\"></i> Please, add expenses to see statistics\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Wallet } from 'src/app/_model/wallet';\nimport { WalletService } from 'src/app/_services/wallet.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-create-wallet',\n  templateUrl: './create-wallet.component.html',\n  styleUrls: ['./create-wallet.component.css']\n})\nexport class CreateWalletComponent implements OnInit {\n\n  constructor(private walletService: WalletService,\n    private alertify: AlertifyService,\n    private router: Router,\n    private authService: AuthService,\n    public dialogRef: MatDialogRef<CreateWalletComponent>,\n  ) { }\n  walletForm: FormGroup;\n  wallet: Wallet;\n  finalCategories: number[] = [\n  ];\n\n  isActive: { id: number, status: boolean }[] = [];\n\n  ngOnInit(): void {\n    for (let i = 1; i <= 33; i++) {\n      this.isActive.push({ id: i, status: false });\n    }\n    console.log(this.isActive);\n\n    this.walletForm = new FormGroup({\n      //TODO: сделать кастомный валидатор\n      'title': new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(10)]),\n      'limit': new FormControl(0, [Validators.required, Validators.min(10)])\n    })\n  }\n\n  toggleCategory(categoryId: number) {\n\n    if (this.finalCategories.find(n => n === categoryId) === undefined) {\n      if (this.finalCategories.length < 10) {\n        this.finalCategories.push(categoryId);\n        this.isActive.find(n => n.id === categoryId).status = true;\n      }\n    }\n    else {\n      this.finalCategories.splice(this.finalCategories.findIndex(n => n === categoryId), 1);\n      this.isActive.find(n => n.id === categoryId).status = false;\n    }\n  }\n\n  findCategory(id: number) {\n    return true;\n  }\n\n\n  createWallet() {\n    this.wallet = ({\n      title: this.walletForm.value['title'],\n      monthlyLimit: this.walletForm.value['limit'],\n      walletCategories: null,\n    });\n    if (this.finalCategories.length >= 5) {\n      this.walletService.createNewWallet(this.wallet).subscribe(() => {\n        this.walletService.addCategoriesToWallet(this.finalCategories).subscribe(() => {\n          this.alertify.success(\"You have successfully created a wallet\");\n          this.dialogRef.close(true);\n        }, error => {\n          this.alertify.error(error.statusText);\n        });\n      }, error => {\n        this.alertify.error(error.statusText);\n      });\n    }\n    else {\n      this.alertify.error(\"You need to choose 5 or more categories!\");\n    }\n  }\n\n  back() {\n    this.dialogRef.close(false);\n  }\n}\n","<mat-dialog-content class=\"mat-typography\">\n  <div class=\"container\">\n    <form [formGroup]=\"walletForm\" (ngSubmit)=\"createWallet()\">\n      <div class=\"form-group\">\n        <div class=\"input-group mb-3\">\n          <div class=\"input-group-prepend\">\n            <span matTooltip=\"Название кошелька\" class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': walletForm.get('title').errors && walletForm.get('title').touched,\n                        'bg-success text-white': !walletForm.get('title').errors}\">Wallet Title</span>\n          </div>\n          <input [ngClass]=\"{'is-invalid': walletForm.get('title').errors && walletForm.get('title').touched,\n                                    'is-valid': !walletForm.get('title').errors}\" type=\"text\" formControlName=\"title\"\n            class=\"form-control\">\n\n          <div matTooltip=\"Введите название кошелька\"\n            *ngIf=\"walletForm.get('title').hasError('required') && walletForm.get('title').touched\"\n            class=\"invalid-feedback\">\n            Title is required\n          </div>\n          <div matTooltip=\"Название кошелька не может быть меньше 2 символов\"\n            *ngIf=\"walletForm.get('title').hasError('minlength') && walletForm.get('title').touched\"\n            class=\"invalid-feedback\">\n            Title should be at least 2 characters required\n          </div>\n          <div matTooltip=\"Название кошелька не может быть больше 10 символов\"\n            *ngIf=\"walletForm.get('title').hasError('maxlength') && walletForm.get('title').touched\"\n            class=\"invalid-feedback\">\n            Title should be no longer than 10 characters\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <div class=\"input-group mb-3\">\n          <div class=\"input-group-prepend\">\n            <span matTooltip=\"Лимит кошелька\" class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': walletForm.get('limit').errors && walletForm.get('limit').touched,\n                        'bg-success text-white': !walletForm.get('limit').errors}\">Limit</span>\n          </div>\n          <input [ngClass]=\"{'is-invalid': walletForm.get('limit').errors && walletForm.get('limit').touched,\n                                    'is-valid': !walletForm.get('limit').errors}\" type=\"number\" formControlName=\"limit\"\n            class=\"form-control\">\n          <div class=\"input-group-append\">\n            <span class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': walletForm.get('limit').errors,\n                        'bg-success text-white': !walletForm.get('limit').errors}\">$</span>\n          </div>\n          <div matTooltip=\"Лимит кошелька должен быть минимум $10\"\n            *ngIf=\"walletForm.get('limit').hasError('min') && walletForm.get('limit').touched\" class=\"invalid-feedback\">\n            Limit should be at least $10\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <button matTooltip=\"Создать кошелёк\" class=\"btn btn-outline-secondary btn-block\"\n          [disabled]=\"(walletForm.invalid || finalCategories.length < 5)\"\n          [ngClass]=\"{'btn-outline-success': walletForm.valid && finalCategories.length >= 5}\">Create wallet</button>\n      </div>\n    </form>\n    <div class=\"form-group\">\n      <button matTooltip=\"Назад\" (click)=\"back()\" class=\"btn btn-outline-warning\">Back</button>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"alert alert-info alert-with-icon alert-dismissible fade show\" data-notify=\"container\">\n      <button type=\"button\" aria-hidden=\"true\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n        <i class=\"nc-icon nc-simple-remove\"></i>\n      </button>\n      \n      <span matTooltip=\"Вы должны выбрать от 5 до 10 категорий для кошелька. После этого, Вам нужно будет войти в аккаунт ещё раз.\"\n        data-notify=\"message\">You need to choose from 5 to 10 categories for the wallet. After confirming, you will need to log in once more.\n      </span>\n    </div>\n  </div>\n\n\n  <div class=\"row mt-3\">\n\n    <div matTooltip=\"Еда\" class=\"category-group col-lg-3 col-md-4 col-sm-6 mb-3 text-center\">\n      Food\n      <div (click)=\"toggleCategory(1)\" [ngClass]=\"isActive[0].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Food</div>\n      <div (click)=\"toggleCategory(2)\" [ngClass]=\"isActive[1].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Vegetables</div>\n      <div (click)=\"toggleCategory(3)\" [ngClass]=\"isActive[2].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Meat</div>\n      <div (click)=\"toggleCategory(4)\" [ngClass]=\"isActive[3].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Alcohol</div>\n      <div (click)=\"toggleCategory(5)\" [ngClass]=\"isActive[4].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Sweets</div>\n      <div (click)=\"toggleCategory(6)\" [ngClass]=\"isActive[5].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Fast-Food</div>\n      <div (click)=\"toggleCategory(7)\" [ngClass]=\"isActive[6].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Fruits</div>\n    </div>\n\n    <div matTooltip=\"Быт\" class=\"category-group col-lg-3 col-md-4 col-sm-6 mb-3 text-center\">\n      Housekeeping\n      <div (click)=\"toggleCategory(8)\" [ngClass]=\"isActive[7].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Housekeeping</div>\n      <div (click)=\"toggleCategory(9)\" [ngClass]=\"isActive[8].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Electricity</div>\n      <div (click)=\"toggleCategory(10)\" [ngClass]=\"isActive[9].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Gas</div>\n      <div (click)=\"toggleCategory(11)\" [ngClass]=\"isActive[10].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Water</div>\n    </div>\n    <div matTooltip=\"Развлечения\" class=\"category-group col-lg-3 col-md-4 col-sm-6 mb-3 text-center\">\n      Entertainment\n      <div (click)=\"toggleCategory(12)\" [ngClass]=\"isActive[11].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Entertainment</div>\n      <div (click)=\"toggleCategory(13)\" [ngClass]=\"isActive[12].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Internet Shopping</div>\n      <div (click)=\"toggleCategory(14)\" [ngClass]=\"isActive[13].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Restaurants & Cafes</div>\n      <div (click)=\"toggleCategory(15)\" [ngClass]=\"isActive[14].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Cinema</div>\n      <div (click)=\"toggleCategory(16)\" [ngClass]=\"isActive[15].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Theatre</div>\n      <div (click)=\"toggleCategory(17)\" [ngClass]=\"isActive[16].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Smoking</div>\n    </div>\n    <div matTooltip=\"Медицина\" class=\"category-group col-lg-3 col-md-4 col-sm-6 mb-3 text-center\">\n      Medicine\n      <div (click)=\"toggleCategory(18)\" [ngClass]=\"isActive[17].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Medicine</div>\n      <div (click)=\"toggleCategory(19)\" [ngClass]=\"isActive[18].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Medicaments</div>\n      <div (click)=\"toggleCategory(20)\" [ngClass]=\"isActive[19].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Treatment</div>\n    </div>\n    <div matTooltip=\"Красотв\" class=\"category-group col-lg-3 col-md-4 col-sm-6 mb-3 text-center\">\n      Beauty\n      <div (click)=\"toggleCategory(21)\" [ngClass]=\"isActive[20].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Beauty</div>\n      <div (click)=\"toggleCategory(22)\" [ngClass]=\"isActive[21].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Beauty Accessories</div>\n      <div (click)=\"toggleCategory(23)\" [ngClass]=\"isActive[22].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Beauty Products</div>\n      <div (click)=\"toggleCategory(24)\" [ngClass]=\"isActive[23].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Beauty Procedures</div>\n\n    </div>\n    <div matTooltip=\"Спорт\" class=\"category-group col-lg-3 col-md-4 col-sm-6 mb-3 text-center\">\n      Sport\n      <div (click)=\"toggleCategory(25)\" [ngClass]=\"isActive[24].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Sport</div>\n      <div (click)=\"toggleCategory(26)\" [ngClass]=\"isActive[25].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Sport Events</div>\n      <div (click)=\"toggleCategory(27)\" [ngClass]=\"isActive[26].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Sport Gambling</div>\n      <div (click)=\"toggleCategory(28)\" [ngClass]=\"isActive[27].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Sport Inventory</div>\n      <div (click)=\"toggleCategory(29)\" [ngClass]=\"isActive[28].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Sport Activities</div>\n    </div>\n    <div matTooltip=\"Транспорт\" class=\"category-group col-lg-3 col-md-4 col-sm-6 mb-3 text-center\">\n      Transportation\n      <div (click)=\"toggleCategory(30)\" [ngClass]=\"isActive[29].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Transportation</div>\n      <div (click)=\"toggleCategory(31)\" [ngClass]=\"isActive[30].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Air Transportation</div>\n      <div (click)=\"toggleCategory(32)\" [ngClass]=\"isActive[31].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Land Transportation</div>\n    </div>\n    <div matTooltip=\"Другое\" class=\"category-group col-lg-3 col-md-4 col-sm-6 mb-3 text-center\">\n      Other\n      <div (click)=\"toggleCategory(33)\" [ngClass]=\"isActive[32].status ? 'alert alert-success' : ''\"\n        class=\"category-item p-3 border\">Other</div>\n    </div>\n  </div>\n\n\n</mat-dialog-content>","import { Component, OnInit } from '@angular/core';\nimport { WalletService } from 'src/app/_services/wallet.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Wallet } from 'src/app/_model/wallet';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-edit-wallet',\n  templateUrl: './edit-wallet.component.html',\n  styleUrls: ['./edit-wallet.component.css']\n})\nexport class EditWalletComponent implements OnInit {\n\n  constructor(private walletService: WalletService,\n    private alertify: AlertifyService,\n    public dialogRef: MatDialogRef<EditWalletComponent>) { }\n\n  editWalletForm: FormGroup;\n  walletToEdit: Wallet;\n  public currentWallet: Wallet;\n  ngOnInit(): void {\n    this.currentWallet = this.walletService.currentWallet;\n    this.editWalletForm = new FormGroup({\n      'title': new FormControl(this.currentWallet.title, [Validators.required, Validators.minLength(4), Validators.maxLength(16)]),\n      'limit': new FormControl(this.currentWallet.monthlyLimit, Validators.min(10))\n    })\n  }\n  //TODO: сделать подтверждение смены названия\n  //подумать о том, как себя должен вести кошелёк когда происходит смена имени и лимита, и что должно происходить у других пользователей\n  walletEdit() {\n    this.walletToEdit = ({\n      title: this.editWalletForm.value['title'],\n      monthlyLimit: this.editWalletForm.value['limit'],\n      walletCategories: this.currentWallet.walletCategories,\n    });\n\n    this.walletService.editWallet(this.walletToEdit).subscribe(response => {\n      this.alertify.success(\"You have successfully edited your wallet\");\n    }, error => {\n      this.alertify.error(error.error);\n    });\n  }\n\n  goBack() {\n    this.dialogRef.close();\n  }\n}","<div class=\"container\">\n    <div class=\"row\">\n        <form *ngIf=\"currentWallet\" [formGroup]=\"editWalletForm\" (ngSubmit)=\"walletEdit()\">\n            <div class=\"form-group\">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': editWalletForm.get('title').errors && editWalletForm.get('title').touched,\n                            'bg-success text-white': !editWalletForm.get('title').errors}\">Wallet Title</span>\n                    </div>\n                    <input [ngClass]=\"{'is-invalid': editWalletForm.get('title').errors && editWalletForm.get('title').touched,\n                                        'is-valid': !editWalletForm.get('title').errors}\" type=\"text\" formControlName=\"title\"\n                        class=\"form-control\">\n    \n                    <div *ngIf=\"editWalletForm.get('title').hasError('required') && editWalletForm.get('title').touched\"\n                        class=\"invalid-feedback\">\n                        Title is required\n                    </div>\n                    <div *ngIf=\"editWalletForm.get('title').hasError('minlength') && editWalletForm.get('title').touched\"\n                        class=\"invalid-feedback\">\n                        Title should be at least 4 characters required\n                    </div>\n                    <div *ngIf=\"editWalletForm.get('title').hasError('maxlength') && editWalletForm.get('title').touched\"\n                        class=\"invalid-feedback\">\n                        Title should be no longer than 16 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"input-group mb-3\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': editWalletForm.get('limit').errors && editWalletForm.get('limit').touched,\n                            'bg-success text-white': !editWalletForm.get('limit').errors}\">Limit</span>\n                    </div>\n                    <input [ngClass]=\"{'is-invalid': editWalletForm.get('limit').errors && editWalletForm.get('limit').touched,\n                                        'is-valid': !editWalletForm.get('limit').errors}\" type=\"number\" formControlName=\"limit\"\n                        class=\"form-control\">\n                        <div class=\"input-group-append\">\n                            <span class=\"input-group-text\" [ngClass]=\"{'bg-danger text-light': editWalletForm.get('limit').errors,\n                            'bg-success text-white': !editWalletForm.get('limit').errors}\">$</span>\n                        </div>\n                    <div *ngIf=\"editWalletForm.get('limit').hasError('min') && editWalletForm.get('limit').touched\"\n                        class=\"invalid-feedback\">\n                        Limit should be 0 or at least $10\n                    </div>\n                </div>\n            </div>\n    \n            <div class=\"form-group\">\n                <button class=\"btn btn-outline-secondary btn-block\" [disabled]=\"editWalletForm.invalid\"\n                    [ngClass]=\"{'btn-outline-success': editWalletForm.valid}\">Edit wallet</button>\n            </div>\n        </form>\n        \n    </div>\n    <div class=\"form-group\">\n        <button (click)=\"goBack()\" class=\"btn btn-outline-warning\">Back</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ExpenseService } from 'src/app/_services/expense.service';\nimport { Expense } from 'src/app/_model/expense';\nimport { ExpensesWithCategories } from 'src/app/_model/expensesWithCategories';\nimport { TopUsersStat } from 'src/app/_model/top-users-stat';\nimport { WalletService } from 'src/app/_services/wallet.service';\nimport { CategoryData } from 'src/app/_model/categoryData';\nimport { ExpenseList } from 'src/app/_model/expense-list';\n\n\n@Component({\n  selector: 'app-show-previous-expenses',\n  templateUrl: './show-previous-expenses.component.html',\n  styleUrls: ['./show-previous-expenses.component.css']\n})\nexport class ShowPreviousExpensesComponent implements OnInit {\n\n  constructor(private expenseService: ExpenseService, private walletService: WalletService) { }\n\n  first: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  second: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  third: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  fourth: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  fifth: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  sixth: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  seventh: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  eigth: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  nineth: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  tenth: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  isLoading: boolean;\n  topFiveUsers: TopUsersStat[];\n  barExpenses: ExpenseList[];\n  categories: CategoryData[] = [];\n  monthNumber = 1;\n  monthName: string = '';\n  date: Date;\n  ngOnInit(): void {\n    this.date = new Date(Date.now());\n    this.date.setMonth(this.date.getMonth() - 1);\n    console.log('Init month', this.date);\n\n    this.monthName = this.date.toLocaleString('default', { month: 'long' });\n    if (this.walletService.currentCategories.length === 0) {\n      this.walletService.getWalletsCategories().subscribe((data: CategoryData[]) => {\n        this.walletService.currentCategories = data;\n        this.categories = this.walletService.currentCategories;\n      });\n    } else {\n      this.categories = this.walletService.currentCategories;\n    }\n    this.getData();\n  }\n\n\n  getData() {\n    this.expenseService.getPreviousExpenses(this.monthNumber).subscribe((expenses: ExpensesWithCategories[]) => {\n      this.isLoading = true;\n      // console.log(expenses);\n      this.barExpenses = expenses['previousExpensesBars'];\n      //console.log(this.barExpenses);\n\n      this.topFiveUsers = expenses['topFiveUsers'];\n      if (expenses['previousMonthExpenses'][0]['expenses'].length > 0) {\n        this.first.expenses = expenses['previousMonthExpenses'][0]['expenses'];\n        this.first.categoryId = expenses['previousMonthExpenses'][0]['categoryId'];\n        this.first.categoryName = expenses['previousMonthExpenses'][0]['categoryName'];\n      }\n      if (expenses['previousMonthExpenses'][1]['expenses'].length > 0) {\n        this.second.expenses = expenses['previousMonthExpenses'][1]['expenses'];\n        this.second.categoryId = expenses['previousMonthExpenses'][1]['categoryId'];\n        this.second.categoryName = expenses['previousMonthExpenses'][1]['categoryName'];\n      }\n      if (expenses['previousMonthExpenses'][2]['expenses'].length > 0) {\n        this.third.expenses = expenses['previousMonthExpenses'][2]['expenses'];\n        this.third.categoryId = expenses['previousMonthExpenses'][2]['categoryId'];\n        this.third.categoryName = expenses['previousMonthExpenses'][2]['categoryName'];\n      }\n      if (expenses['previousMonthExpenses'][3]['expenses'].length > 0) {\n        this.fourth.expenses = expenses['previousMonthExpenses'][3]['expenses'];\n        this.fourth.categoryId = expenses['previousMonthExpenses'][3]['categoryId'];\n        this.fourth.categoryName = expenses['previousMonthExpenses'][3]['categoryName'];\n      }\n      if (expenses['previousMonthExpenses'][4]['expenses'].length > 0) {\n        this.fifth.expenses = expenses['previousMonthExpenses'][4]['expenses'];\n        this.fifth.categoryId = expenses['previousMonthExpenses'][4]['categoryId'];\n        this.fifth.categoryName = expenses['previousMonthExpenses'][4]['categoryName'];\n      }\n      if (expenses['previousMonthExpenses'].length > 5) {\n        if (expenses['previousMonthExpenses'][5]['expenses'].length > 0) {\n          this.sixth.expenses = expenses['previousMonthExpenses'][5]['expenses'];\n          this.sixth.categoryId = expenses['previousMonthExpenses'][5]['categoryId'];\n          this.sixth.categoryName = expenses['previousMonthExpenses'][5]['categoryName'];\n        }\n        if (expenses['previousMonthExpenses'].length > 6) {\n          if (expenses['previousMonthExpenses'][6]['expenses'].length > 0) {\n            this.seventh.expenses = expenses['previousMonthExpenses'][6]['expenses'];\n            this.seventh.categoryId = expenses['previousMonthExpenses'][6]['categoryId'];\n            this.seventh.categoryName = expenses['previousMonthExpenses'][6]['categoryName'];\n          }\n          if (expenses['previousMonthExpenses'].length > 7) {\n            if (expenses['previousMonthExpenses'][7]['expenses'].length > 0) {\n              this.eigth.expenses = expenses['previousMonthExpenses'][7]['expenses'];\n              this.eigth.categoryId = expenses['previousMonthExpenses'][7]['categoryId'];\n              this.eigth.categoryName = expenses['previousMonthExpenses'][7]['categoryName'];\n            }\n            if (expenses['previousMonthExpenses'].length > 8) {\n              if (expenses['previousMonthExpenses'][8]['expenses'].length > 0) {\n                this.nineth.expenses = expenses['previousMonthExpenses'][8]['expenses'];\n                this.nineth.categoryId = expenses['previousMonthExpenses'][8]['categoryId'];\n                this.nineth.categoryName = expenses['previousMonthExpenses'][8]['categoryName'];\n              }\n              if (expenses['previousMonthExpenses'].length > 9) {\n                if (expenses['previousMonthExpenses'][9]['expenses'].length > 0) {\n                  this.tenth.expenses = expenses['previousMonthExpenses'][9]['expenses'];\n                  this.tenth.categoryId = expenses['previousMonthExpenses'][9]['categoryId'];\n                  this.tenth.categoryName = expenses['previousMonthExpenses'][9]['categoryName'];\n                }\n              }\n            }\n          }\n        }\n      }\n      this.isLoading = false;\n      //console.log(this.isLoading);\n    });\n  }\n\n  previousMonth() {\n    this.date = new Date(Date.now());\n    this.monthNumber++;\n    this.date.setMonth(this.date.getMonth() - this.monthNumber);\n    console.log(this.date);\n    console.log(this.monthNumber);\n    \n    this.monthName = this.date.toLocaleString('default', { month: 'long' });\n    this.clearData();\n    this.getData();\n  }\n\n  next() {\n    if (this.monthNumber - 1 !== 0) {\n      this.monthNumber--;\n      this.date = new Date(Date.now());\n      this.date.setMonth(this.date.getMonth() - this.monthNumber);\n     \n      this.monthName = this.date.toLocaleString('default', { month: 'long' });\n      this.clearData();\n      this.getData();\n\n    }\n  }\n\n  clearData() {\n    this.first = { categoryName: '', expenses: [], categoryId: 0 };\n    this.second = { categoryName: '', expenses: [], categoryId: 0 };\n    this.third = { categoryName: '', expenses: [], categoryId: 0 };\n    this.fourth = { categoryName: '', expenses: [], categoryId: 0 };\n    this.fifth = { categoryName: '', expenses: [], categoryId: 0 };\n    this.sixth = { categoryName: '', expenses: [], categoryId: 0 };\n    this.seventh = { categoryName: '', expenses: [], categoryId: 0 };\n    this.eigth = { categoryName: '', expenses: [], categoryId: 0 };\n    this.nineth = { categoryName: '', expenses: [], categoryId: 0 };\n    this.tenth = { categoryName: '', expenses: [], categoryId: 0 };\n    this.topFiveUsers = null;\n    this.barExpenses = null;\n  }\n}\n","<div *ngIf=\"isLoading\" class=\"loader-wrapper\">\n    <div class=\"loader\">\n        <div class=\"face\">\n            <div class=\"circle\"></div>\n        </div>\n        <div class=\"face\">\n            <div class=\"circle\"></div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"!isLoading\">\n    <div class=\"container-fluid mr-5\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-xl-4 col-lg-7 col-md-7\">\n                <div class=\"card card-stats\">\n                    <div class=\"card-body \">\n                        <div class=\"row\">\n                            <div class=\"col-5 col-md-4\">\n                                <div class=\"icon-big text-center icon-warning\">\n                                    <i class=\"fas fa-plus text-success\"></i>\n                                </div>\n                            </div>\n                            <div class=\"col-7 col-md-8\">\n                                <div class=\"numbers\">\n                                    <p class=\"card-category add-expense\"> <button (click)=\"previousMonth()\" class=\"btn btn-outline-success btn-block\">Previous</button>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer \">\n                        <hr>\n                        <div class=\"stats\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-xl-4 col-lg-7 col-md-7\">\n                <div class=\"card card-stats\">\n                    <div class=\"card-body \">\n                        <div class=\"row\">\n                            <div class=\"col-5 col-md-4\">\n                                <div class=\"icon-big text-center icon-warning\">\n                                    <i class=\"fas fa-plus text-success\"></i>\n                                </div>\n                            </div>\n                            <div class=\"col-7 col-md-8\">\n                                <div class=\"numbers\">\n                                    <p class=\"card-category add-expense\"> <button (click)=\"next()\" class=\"btn btn-outline-success btn-block\">Next</button>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer \">\n                        <hr>\n                        <div class=\"stats\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-8\">\n                <div class=\"content\">\n                    <div *ngIf=\"first.categoryId != 0\" class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"card card-img\">\n                                <div class=\"image\">\n                                    <div style=\"width: 100%; height: 100%; background-color: #cafcfa;\"></div>\n                                </div>\n                                <div class=\"card-header\">\n                                    <h4 class=\"card-title text-center\">{{first.categoryName}} expenses</h4>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"table-responsive \">\n                                        <table class=\"table\">\n                                            <thead class=\"text-primary text-center\">\n                                                <tr class=\"d-flex text-center\">\n                                                    <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                                    <th class=\"col-lg-2 col-md-3\">Title</th>\n                                                    <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                                    <th class=\"col-lg-3 col-md-3\">Date</th>\n                                                    <th class=\"col-lg-2 col-md-3\">$</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr class=\"d-flex text-center\" *ngFor=\"let expense of first.expenses\">\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                                    <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                                    <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"second.categoryId != 0\" class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"card card-img\">\n                                <div class=\"image\">\n                                    <div style=\"width: 100%; height: 100%; background-color: #cafcdf;\"></div>\n                                </div>\n                                <div class=\"card-header\">\n                                    <h4 class=\"card-title text-center\">{{second.categoryName}} expenses</h4>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table\">\n                                            <thead class=\"text-primary text-center\">\n                                                <tr class=\"d-flex text-center\">\n                                                    <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                                    <th class=\"col-lg-2 col-md-3\">Title</th>\n                                                    <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                                    <th class=\"col-lg-3 col-md-3\">Date</th>\n                                                    <th class=\"col-lg-2 col-md-3\">$</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr class=\"d-flex text-center\" *ngFor=\"let expense of second.expenses\">\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                                    <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                                    <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"third.categoryId != 0\" class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"card card-img\">\n                                <div class=\"image\">\n                                    <div style=\"width: 100%; height: 100%; background-color: #dafcca;\"></div>\n                                </div>\n                                <div class=\"card-header\">\n                                    <h4 class=\"card-title text-center\">{{third.categoryName}} expenses</h4>\n                                </div>\n\n                                <div class=\"card-body\">\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table\">\n                                            <thead class=\"text-primary text-center\">\n                                                <tr class=\"d-flex text-center\">\n                                                    <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                                    <th class=\"col-lg-2 col-md-3\">Title</th>\n                                                    <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                                    <th class=\"col-lg-3 col-md-3\">Date</th>\n                                                    <th class=\"col-lg-2 col-md-3\">$</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr class=\"d-flex text-center\" *ngFor=\"let expense of third.expenses\">\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                                    <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                                    <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"fourth.categoryId != 0\" class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"card card-img\">\n                                <div class=\"image\">\n                                    <div style=\"width: 100%; height: 100%; background-color: #fcf0ca;\"></div>\n                                </div>\n                                <div class=\"card-header\">\n                                    <h4 class=\"card-title text-center\">{{fourth.categoryName}} expenses</h4>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table\">\n                                            <thead class=\"text-primary text-center\">\n                                                <tr class=\"d-flex text-center\">\n                                                    <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                                    <th class=\"col-lg-2 col-md-3\">Title</th>\n                                                    <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                                    <th class=\"col-lg-3 col-md-3\">Date</th>\n                                                    <th class=\"col-lg-2 col-md-3\">$</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr class=\"d-flex text-center\" *ngFor=\"let expense of fourth.expenses\">\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                                    <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                                    <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"fifth.categoryId != 0\" class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"card card-img\">\n                                <div class=\"image\">\n                                    <div style=\"width: 100%; height: 100%; background-color: #fcd9ca;\"></div>\n                                </div>\n                                <div class=\"card-header\">\n                                    <h4 class=\"card-title text-center\">{{fifth.categoryName}} expenses</h4>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table\">\n                                            <thead class=\"text-primary text-center\">\n                                                <tr class=\"d-flex text-center\">\n                                                    <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                                    <th class=\"col-lg-2 col-md-3\">Title</th>\n                                                    <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                                    <th class=\"col-lg-3 col-md-3\">Date</th>\n                                                    <th class=\"col-lg-2 col-md-3\">$</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr class=\"d-flex text-center\" *ngFor=\"let expense of fifth.expenses\">\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                                    <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                                    <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"sixth.categoryId != 0\" class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"card card-img\">\n                                <div class=\"image\">\n                                    <div style=\"width: 100%; height: 100%; background-color: #fccaca;\"></div>\n                                </div>\n                                <div class=\"card-header\">\n                                    <h4 class=\"card-title text-center\">{{sixth.categoryName}} expenses</h4>\n                                    <p class=\"card-category\">Check out how much you have spent this month at {{sixth.categoryName}}!\n                                    </p>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table\">\n                                            <thead class=\"text-primary text-center\">\n                                                <tr class=\"d-flex text-center\">\n                                                    <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                                    <th class=\"col-lg-2 col-md-3\">Title</th>\n                                                    <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                                    <th class=\"col-lg-3 col-md-3\">Date</th>\n                                                    <th class=\"col-lg-2 col-md-3\">$</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr class=\"d-flex text-center\" *ngFor=\"let expense of sixth.expenses\">\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                                    <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                                    <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"seventh.categoryId != 0\" class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"card card-img\">\n                                <div class=\"image\">\n                                    <div style=\"width: 100%; height: 100%; background-color: #fccaea;\"></div>\n                                </div>\n                                <div class=\"card-header\">\n                                    <h4 class=\"card-title text-center\">{{seventh.categoryName}} expenses</h4>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table\">\n                                            <thead class=\"text-primary text-center\">\n                                                <tr class=\"d-flex text-center\">\n                                                    <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                                    <th class=\"col-lg-2 col-md-3\">Title</th>\n                                                    <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                                    <th class=\"col-lg-3 col-md-3\">Date</th>\n                                                    <th class=\"col-lg-2 col-md-3\">$</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr class=\"d-flex text-center\" *ngFor=\"let expense of seventh.expenses\">\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                                    <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                                    <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"eigth.categoryId != 0\" class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"card card-img\">\n                                <div class=\"image\">\n                                    <div style=\"width: 100%; height: 100%; background-color: #eccafc;\"></div>\n                                </div>\n                                <div class=\"card-header\">\n                                    <h4 class=\"card-title text-center\">{{eigth.categoryName}} expenses</h4>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table\">\n                                            <thead class=\"text-primary text-center\">\n                                                <tr class=\"d-flex text-center\">\n                                                    <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                                    <th class=\"col-lg-2 col-md-3\">Title</th>\n                                                    <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                                    <th class=\"col-lg-3 col-md-3\">Date</th>\n                                                    <th class=\"col-lg-2 col-md-3\">$</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr class=\"d-flex text-center\" *ngFor=\"let expense of eigth.expenses\">\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                                    <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                                    <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"nineth.categoryId != 0\" class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"card card-img\">\n                                <div class=\"image\">\n                                    <div style=\"width: 100%; height: 100%; background-color: #d1cafc;\"></div>\n                                </div>\n                                <div class=\"card-header\">\n                                    <h4 class=\"card-title text-center\">{{nineth.categoryName}} expenses</h4>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table\">\n                                            <thead class=\"text-primary text-center\">\n                                                <tr class=\"d-flex text-center\">\n                                                    <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                                    <th class=\"col-lg-2 col-md-3\">Title</th>\n                                                    <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                                    <th class=\"col-lg-3 col-md-3\">Date</th>\n                                                    <th class=\"col-lg-2 col-md-3\">$</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr class=\"d-flex text-center\" *ngFor=\"let expense of nineth.expenses\">\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                                    <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                                    <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"tenth.categoryId != 0\" class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"card card-img\">\n                                <div class=\"image\">\n                                    <div style=\"width: 100%; height: 100%; background-color: #cad8fc;\"></div>\n                                </div>\n                                <div class=\"card-header\">\n                                    <h4 class=\"card-title text-center\">{{tenth.categoryName}} expenses</h4>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"table-responsive\">\n                                        <table class=\"table\">\n                                            <thead class=\"text-primary text-center\">\n                                                <tr class=\"d-flex text-center\">\n                                                    <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                                    <th class=\"col-lg-2 col-md-3\">Title</th>\n                                                    <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                                    <th class=\"col-lg-3 col-md-3\">Date</th>\n                                                    <th class=\"col-lg-2 col-md-3\">$</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr class=\"d-flex text-center\" *ngFor=\"let expense of tenth.expenses\">\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                                    <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                                    <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                                    <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-4\">\n                <div class=\"card\" style=\"border-radius: 12px;\">\n                    <div class=\"card-header\">\n                        <h5 class=\"card-title\">Top 5 users</h5>\n                        <p class=\"card-category\">In {{monthName}}</p>\n                    </div>\n                    <div class=\"card-body \">\n                        <div *ngIf=\"topFiveUsers != null\">\n                            <app-pie-graph [topFiveUsers]=\"topFiveUsers\"></app-pie-graph>\n                        </div>\n                        <p *ngIf=\"topFiveUsers == null\" class=\"text-uppercase\">No one was spending in {{monthName}}\n                        </p>\n                    </div>\n                    <div class=\"card-footer\">\n                        <hr>\n                        <div class=\"stats\">\n                            <i class=\"fa fa-money\"></i> Number expenses made\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\" style=\"border-radius: 12px;\">\n                    <div class=\"card-header\">\n                        <h5 class=\"card-title\">Category comparison</h5>\n                        <p class=\"card-category\">In {{monthName}}</p>\n                    </div>\n                    <div class=\"card-body \">\n                        <div *ngIf=\"barExpenses != null && categories.length > 0\">\n                            <app-donut-chart-categories [categories]=\"categories\" [barExpensesList]=\"barExpenses\"></app-donut-chart-categories>\n                        </div>\n                        <p *ngIf=\"topFiveUsers == null\" class=\"text-uppercase\">No one was spending in {{monthName}}\n                        </p>\n                    </div>\n                    <div class=\"card-footer\">\n                        <hr>\n                        <div class=\"stats\">\n                            <i class=\"fa fa-money\"></i> Number expenses made\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ExpenseService } from 'src/app/_services/expense.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { WalletForPage } from 'src/app/_model/wallet-for-page';\nimport { CreateExpenseComponent } from 'src/app/expenses/create-expense/create-expense.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Notification } from 'src/app/_model/notification';\nimport { NotificationService } from 'src/app/_services/notification.service';\nimport { ExpensesWithCategories } from 'src/app/_model/expensesWithCategories';\nimport { WalletService } from 'src/app/_services/wallet.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CategoryData } from 'src/app/_model/categoryData';\n\n@Component({\n  selector: 'app-show-wallet-table',\n  templateUrl: './show-wallet-table.component.html',\n  styleUrls: ['./show-wallet-table.component.css', '../../css/spinner.css']\n})\nexport class ShowWalletTableComponent implements OnInit {\n\n  constructor(private expenseService: ExpenseService,\n    private authService: AuthService,\n    public dialog: MatDialog,\n    private noteService: NotificationService,\n    private route: ActivatedRoute) { }\n  first: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  second: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  third: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  fourth: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  fifth: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  sixth: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  seventh: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  eigth: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  nineth: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n  tenth: ExpensesWithCategories = { categoryName: '', expenses: [], categoryId: 0 };\n\n  walletTitle: string;\n  walletLimit: number;\n  walletExpenses: number;\n  type: string;\n  private id;\n  expensesToShow: number;\n  notifications: Notification[] = [];\n  categories: CategoryData[] = [];\n  isLoading: boolean;\n\n  ngOnInit(): void {\n    this.id = this.authService.getToken().nameid;\n    this.isLoading = true;\n    this.expenseService.getWalletData(this.id).subscribe((walletData: WalletForPage) => {\n      this.walletTitle = walletData['title'];\n      this.expenseService.expensesSubject.subscribe(expData => {\n        this.walletExpenses = expData;\n        this.expensesToShow = expData;\n        this.checkLimit();\n      });\n\n      this.walletLimit = walletData['monthlyLimit'];\n      this.checkLimit();\n      this.expenseService.showAllExpenses();\n      this.expenseService.firstSubject.subscribe(exp => {\n        if (exp != null) {\n          this.first.expenses = exp;\n          this.first.categoryName = this.expenseService.firstExpenses.categoryName;\n          this.first.categoryId = this.expenseService.firstExpenses.categoryId;\n        }\n      });\n\n      this.expenseService.secondSubject.subscribe(exp => {\n        if (exp != null) {\n          this.second.expenses = exp;\n          this.second.categoryName = this.expenseService.secondExpenses.categoryName;\n          this.second.categoryId = this.expenseService.secondExpenses.categoryId;\n        }\n      });\n      this.expenseService.thirdSubject.subscribe(exp => {\n        if (exp != null) {\n          this.third.expenses = exp;\n          this.third.categoryName = this.expenseService.thirdExpenses.categoryName;\n          this.third.categoryId = this.expenseService.thirdExpenses.categoryId;\n        }\n      });\n      this.expenseService.fourthSubject.subscribe(exp => {\n        if (exp != null) {\n          this.fourth.expenses = exp;\n          this.fourth.categoryName = this.expenseService.fourthExpenses.categoryName;\n          this.fourth.categoryId = this.expenseService.fourthExpenses.categoryId;\n        }\n      });\n      this.expenseService.fifthSubject.subscribe(exp => {\n        if (exp != null) {\n          this.fifth.expenses = exp;\n          this.fifth.categoryName = this.expenseService.fifthExpenses.categoryName;\n          this.fifth.categoryId = this.expenseService.fifthExpenses.categoryId;\n        }\n      });\n\n      this.expenseService.sixthSubject.subscribe(exp => {\n        if (exp != null) {\n          this.sixth.expenses = exp;\n          this.sixth.categoryName = this.expenseService.sixthExpenses.categoryName;\n          this.sixth.categoryId = this.expenseService.sixthExpenses.categoryId;\n        }\n      });\n\n      this.expenseService.seventhSubject.subscribe(exp => {\n        if (exp != null) {\n          this.seventh.expenses = exp;\n          this.seventh.categoryName = this.expenseService.seventhExpenses.categoryName;\n          this.seventh.categoryId = this.expenseService.seventhExpenses.categoryId;\n        }\n      });\n\n      this.expenseService.eightthSubject.subscribe(exp => {\n        if (exp != null) {\n          this.eigth.expenses = exp;\n          this.eigth.categoryName = this.expenseService.eightthExpenses.categoryName;\n          this.eigth.categoryId = this.expenseService.eightthExpenses.categoryId;\n        }\n      });\n\n      this.expenseService.ninethSubject.subscribe(exp => {\n        if (exp != null) {\n          this.nineth.expenses = exp;\n          this.nineth.categoryName = this.expenseService.ninethExpenses.categoryName;\n          this.nineth.categoryId = this.expenseService.ninethExpenses.categoryId;\n        }\n      });\n\n      this.expenseService.tenthSubject.subscribe(exp => {\n        if (exp != null) {\n          this.tenth.expenses = exp;\n          this.tenth.categoryName = this.expenseService.tenthExpenses.categoryName;\n          this.tenth.categoryId = this.expenseService.tenthExpenses.categoryId;\n        }\n      });\n      this.isLoading = false;\n    });\n    this.route.data.subscribe(data => {\n      this.categories = data['categories'];\n    })\n\n\n\n    this.noteService.getNotifications().subscribe((notifications: Notification[]) => {\n      this.notifications = notifications;\n    })\n  }\n\n  checkLimit() {\n    if (this.walletLimit != 0) {\n      this.expensesToShow = this.walletExpenses;\n\n      if (this.walletExpenses < 0.25 * this.walletLimit) {\n        this.type = 'success';\n      } else if (this.walletExpenses < 0.5 * this.walletLimit) {\n        this.type = 'info';\n      } else if (this.walletExpenses < 0.75 * this.walletLimit) {\n        this.type = 'warning';\n      } else if (this.walletExpenses < 0.90 * this.walletLimit) {\n        this.type = 'danger';\n      }\n      else if (this.walletExpenses >= this.walletLimit) {\n        this.expensesToShow = this.walletLimit;\n        this.type = 'danger';\n      }\n    }\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(CreateExpenseComponent);\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  showNotifications() {\n    this.notifications.forEach(element => {\n      console.log(element.message);\n    });\n    this.noteService.deleteNotifications().subscribe(() => {\n      console.log('Success');\n\n    })\n  }\n}\n","<div *ngIf=\"isLoading\" class=\"loader-wrapper\">\n    <div class=\"loader\">\n        <div class=\"face\">\n            <div class=\"circle\"></div>\n        </div>\n        <div class=\"face\">\n            <div class=\"circle\"></div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"!isLoading\">\n    <div class=\"container-fluid mr-5\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-xl-4 col-lg-7 col-md-7\">\n                <div class=\"card card-stats\">\n                    <div class=\"card-body \">\n                        <div class=\"row\">\n                            <div class=\"col-5 col-md-4\">\n                                <div class=\"icon-big text-center icon-warning\">\n                                    <i class=\"fas fa-plus text-success\"></i>\n                                </div>\n                            </div>\n                            <div class=\"col-7 col-md-8\">\n                                <div class=\"numbers\">\n                                    <p class=\"card-category add-expense\"> <button matTooltip=\"Добавить новый расход\" (click)=\"openDialog()\"\n                                            class=\"btn btn-outline-success btn-block\">Add Expense</button>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer \">\n                        <hr>\n                        <div class=\"stats\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-xl-4 col-lg-6 col-md-6 col-sm-6\">\n                <div class=\"card card-stats\">\n                    <div class=\"card-body \">\n                        <div class=\"row\">\n                            <div class=\"col-5 col-md-4\">\n                                <div class=\"icon-big text-center icon-warning\">\n                                    <i class=\"fas fa-wallet text-primary\"></i>\n                                </div>\n                            </div>\n                            <div class=\"col-7 col-md-8\">\n                                <div class=\"numbers\">\n                                    <p matTooltip=\"Название кошелька\" class=\"card-category mb-2\">Wallet Title</p>\n                                    <p class=\"card-title text-capitalize\">{{walletTitle}}</p>\n                                    <p>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer \">\n                        <hr>\n                        <div class=\"stats\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-xl-4 col-lg-6 col-md-6 col-sm-6\">\n                <div class=\"card card-stats\">\n                    <div class=\"card-body \">\n                        <div class=\"row\">\n                            <div class=\"col-5 col-md-4\">\n                                <div class=\"icon-big text-center icon-warning\">\n                                    <i class=\"fas fa-circle-notch text-warning\"></i>\n                                </div>\n                            </div>\n                            <div class=\"col-7 col-md-8\">\n                                <div class=\"numbers\">\n                                    <p matTooltip=\"Лимит кошелька\" class=\"card-category mb-2\">Wallet Limit</p>\n                                    <p class=\"card-title text-capitalize\">${{walletLimit}}</p>\n                                    <p>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer \">\n                        <hr>\n                        <div class=\"stats\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-xl-12\">\n                <div class=\"card card-stats\">\n                    <div class=\"card-body\">\n                        <div class=\"numbers\">\n                            <p class=\"card-category mb-3\">Limit: {{walletExpenses}} / {{walletLimit}}</p>\n                        </div>\n                        <progressbar class=\"progress-striped active mb-2\" [max]=\"walletLimit\" [value]=\"expensesToShow\"\n                            [type]=\"type\"></progressbar>\n                    </div>\n                    <div class=\"card-footer\">\n                        <hr>\n                        <div class=\"stats \">\n                            <i class=\"fa fa-refresh\"></i>\n                            <span class=\"\">Updated - указать когда было последнее обновление</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"content\">\n            <div *ngIf=\"first\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card card-img\">\n                        <div class=\"image\">\n                            <div style=\"width: 100%; height: 100%; background-color: #cafcfa;\"></div>\n                        </div>\n                        <div class=\"card-header\">\n                            <h4 class=\"card-title text-center\">{{first.categoryName}} expenses</h4>\n                        </div>\n                        <div class=\"card-body\">\n                            <div class=\"table-responsive \">\n                                <table class=\"table\">\n                                    <thead class=\"text-primary text-center\">\n                                        <tr class=\"d-flex text-center\">\n                                            <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                            <th class=\"col-lg-2 col-md-3\">Title</th>\n                                            <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                            <th class=\"col-lg-3 col-md-3\">Date</th>\n                                            <th class=\"col-lg-2 col-md-3\">$</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr class=\"d-flex text-center\" *ngFor=\"let expense of first.expenses\">\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                            <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                            <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                        </tr>   \n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"second\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card card-img\">\n                        <div class=\"image\">\n                            <div style=\"width: 100%; height: 100%; background-color: #cafcdf;\"></div>\n                        </div>\n                        <div class=\"card-header\">\n                            <h4 class=\"card-title text-center\">{{second.categoryName}} expenses</h4>\n                        </div>\n                        <div class=\"card-body\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead class=\"text-primary text-center\">\n                                        <tr class=\"d-flex text-center\">\n                                            <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                            <th class=\"col-lg-2 col-md-3\">Title</th>\n                                            <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                            <th class=\"col-lg-3 col-md-3\">Date</th>\n                                            <th class=\"col-lg-2 col-md-3\">$</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr class=\"d-flex text-center\" *ngFor=\"let expense of second.expenses\">\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                            <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                            <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"third\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card card-img\">\n                        <div class=\"image\">\n                            <div style=\"width: 100%; height: 100%; background-color: #dafcca;\"></div>\n                        </div>\n                        <div class=\"card-header\">\n                            <h4 class=\"card-title text-center\">{{third.categoryName}} expenses</h4>\n                        </div>\n\n                        <div class=\"card-body\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead class=\"text-primary text-center\">\n                                        <tr class=\"d-flex text-center\">\n                                            <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                            <th class=\"col-lg-2 col-md-3\">Title</th>\n                                            <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                            <th class=\"col-lg-3 col-md-3\">Date</th>\n                                            <th class=\"col-lg-2 col-md-3\">$</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr class=\"d-flex text-center\" *ngFor=\"let expense of third.expenses\">\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                            <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                            <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"fourth\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card card-img\">\n                        <div class=\"image\">\n                            <div style=\"width: 100%; height: 100%; background-color: #fcf0ca;\"></div>\n                        </div>\n                        <div class=\"card-header\">\n                            <h4 class=\"card-title text-center\">{{fourth.categoryName}} expenses</h4>\n                        </div>\n                        <div class=\"card-body\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead class=\"text-primary text-center\">\n                                        <tr class=\"d-flex text-center\">\n                                            <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                            <th class=\"col-lg-2 col-md-3\">Title</th>\n                                            <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                            <th class=\"col-lg-3 col-md-3\">Date</th>\n                                            <th class=\"col-lg-2 col-md-3\">$</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr class=\"d-flex text-center\" *ngFor=\"let expense of fourth.expenses\">\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                            <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                            <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"fifth\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card card-img\">\n                        <div class=\"image\">\n                            <div style=\"width: 100%; height: 100%; background-color: #fcd9ca;\"></div>\n                        </div>\n                        <div class=\"card-header\">\n                            <h4 class=\"card-title text-center\">{{fifth.categoryName}} expenses</h4>\n                        </div>\n                        <div class=\"card-body\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead class=\"text-primary text-center\">\n                                        <tr class=\"d-flex text-center\">\n                                            <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                            <th class=\"col-lg-2 col-md-3\">Title</th>\n                                            <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                            <th class=\"col-lg-3 col-md-3\">Date</th>\n                                            <th class=\"col-lg-2 col-md-3\">$</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr class=\"d-flex text-center\" *ngFor=\"let expense of fifth.expenses\">\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                            <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                            <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"sixth.categoryId != 0\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card card-img\">\n                        <div class=\"image\">\n                            <div style=\"width: 100%; height: 100%; background-color: #fccaca;\"></div>\n                        </div>\n                        <div class=\"card-header\">\n                            <h4 class=\"card-title text-center\">{{sixth.categoryName}} expenses</h4>\n                            <p class=\"card-category\">Check out how much you have spent this month at\n                                {{sixth.categoryName}}!</p>\n                        </div>\n                        <div class=\"card-body\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead class=\"text-primary text-center\">\n                                        <tr class=\"d-flex text-center\">\n                                            <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                            <th class=\"col-lg-2 col-md-3\">Title</th>\n                                            <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                            <th class=\"col-lg-3 col-md-3\">Date</th>\n                                            <th class=\"col-lg-2 col-md-3\">$</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr class=\"d-flex text-center\" *ngFor=\"let expense of sixth.expenses\">\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                            <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                            <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"seventh.categoryId != 0\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card card-img\">\n                        <div class=\"image\">\n                            <div style=\"width: 100%; height: 100%; background-color: #fccaea;\"></div>\n                        </div>\n                        <div class=\"card-header\">\n                            <h4 class=\"card-title text-center\">{{seventh.categoryName}} expenses</h4>\n                        </div>\n                        <div class=\"card-body\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead class=\"text-primary text-center\">\n                                        <tr class=\"d-flex text-center\">\n                                            <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                            <th class=\"col-lg-2 col-md-3\">Title</th>\n                                            <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                            <th class=\"col-lg-3 col-md-3\">Date</th>\n                                            <th class=\"col-lg-2 col-md-3\">$</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr class=\"d-flex text-center\" *ngFor=\"let expense of seventh.expenses\">\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                            <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                            <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"eigth.categoryId != 0\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card card-img\">\n                        <div class=\"image\">\n                            <div style=\"width: 100%; height: 100%; background-color: #eccafc;\"></div>\n                        </div>\n                        <div class=\"card-header\">\n                            <h4 class=\"card-title text-center\">{{eigth.categoryName}} expenses</h4>\n                        </div>\n                        <div class=\"card-body\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead class=\"text-primary text-center\">\n                                        <tr class=\"d-flex text-center\">\n                                            <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                            <th class=\"col-lg-2 col-md-3\">Title</th>\n                                            <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                            <th class=\"col-lg-3 col-md-3\">Date</th>\n                                            <th class=\"col-lg-2 col-md-3\">$</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr class=\"d-flex text-center\" *ngFor=\"let expense of eigth.expenses\">\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                            <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                            <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"nineth.categoryId != 0\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card card-img\">\n                        <div class=\"image\">\n                            <div style=\"width: 100%; height: 100%; background-color: #d1cafc;\"></div>\n                        </div>\n                        <div class=\"card-header\">\n                            <h4 class=\"card-title text-center\">{{nineth.categoryName}} expenses</h4>\n                        </div>\n                        <div class=\"card-body\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead class=\"text-primary text-center\">\n                                        <tr class=\"d-flex text-center\">\n                                            <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                            <th class=\"col-lg-2 col-md-3\">Title</th>\n                                            <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                            <th class=\"col-lg-3 col-md-3\">Date</th>\n                                            <th class=\"col-lg-2 col-md-3\">$</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr class=\"d-flex text-center\" *ngFor=\"let expense of nineth.expenses\">\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                            <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                            <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"tenth.categoryId != 0\" class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card card-img\">\n                        <div class=\"image\">\n                            <div style=\"width: 100%; height: 100%; background-color: #cad8fc;\"></div>\n                        </div>\n                        <div class=\"card-header\">\n                            <h4 class=\"card-title text-center\">{{tenth.categoryName}} expenses</h4>\n                        </div>\n                        <div class=\"card-body\">\n                            <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                    <thead class=\"text-primary text-center\">\n                                        <tr class=\"d-flex text-center\">\n                                            <th class=\"col-lg-2 col-lg-2 col-md-3\">User</th>\n                                            <th class=\"col-lg-2 col-md-3\">Title</th>\n                                            <th class=\"col-lg-3 d-none d-lg-table-cell\">Details</th>\n                                            <th class=\"col-lg-3 col-md-3\">Date</th>\n                                            <th class=\"col-lg-2 col-md-3\">$</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr class=\"d-flex text-center\" *ngFor=\"let expense of tenth.expenses\">\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.userName}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.expenseTitle}}</td>\n                                            <td class=\"col-lg-3 d-none d-lg-table-cell\">{{expense.expenseDescription}}</td>\n                                            <td class=\"col-lg-3\">{{expense.creationDate | date :\"medium\"}}</td>\n                                            <td class=\"col-lg-2 col-md-3\">{{expense.moneySpent}}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, Inject } from '@angular/core';\nimport { ExpenseList } from 'src/app/_model/expense-list';\nimport { LastMonthStat } from 'src/app/_model/lastMonthStat';\nimport { ExpenseForTable } from 'src/app/_model/expense-for-table';\nimport { ExpenseService } from 'src/app/_services/expense.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditExpenseModalComponent } from 'src/app/expenses/edit-expense-modal/edit-expense-modal.component';\nimport { WalletService } from 'src/app/_services/wallet.service';\nimport { CategoryData } from 'src/app/_model/categoryData';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-user-statistics',\n  templateUrl: './user-statistics.component.html',\n  styleUrls: ['./user-statistics.component.css', '../../css/spinner.css']\n})\nexport class UserStatisticsComponent implements OnInit {\n\n  constructor(private expService: ExpenseService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService,\n    public dialog: MatDialog,\n    private walletService: WalletService,\n    private authService: AuthService,\n    private router: Router) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n  }\n\n\n  columnsForExpenses: string[] = ['expenseTitle', 'category', 'moneySpent', 'expenseDescription', 'creationDate', 'actions'];\n  expenses = new MatTableDataSource<ExpenseForTable>();\n\n\n  spentAll: number;\n  avgDailyExpenses: number = 0;\n  amountOfMoneySpent: number = 0;\n  barExpenses: ExpenseList;\n  currentMonthDataToCompare: ExpenseList[];\n  lastMonthDataToCompare: ExpenseList[];\n  mostSpentCategory: string;\n  mostUsedCategory: string;\n  lastSixMonths: LastMonthStat[];\n  categories: CategoryData[] = [];\n\n  isLoading: boolean;\n  showComparisonData = false;\n  isThisUser: boolean;\n  private id;\n\n  ngOnInit(): void {\n    this.isThisUser = false;\n    let userId = this.authService.decodedToken.nameid;\n    this.id = this.route.snapshot.params['id'];\n    if (userId === this.id)\n      this.isThisUser = true;\n    if (this.walletService.currentCategories.length === 0) {\n      this.walletService.getWalletsCategories().subscribe((categories: CategoryData[]) => {\n        this.walletService.currentCategories = categories;\n        this.categories = this.walletService.currentCategories;\n      });\n    } else\n      this.categories = this.walletService.currentCategories;\n\n\n    this.isLoading = true;\n    this.expService.getUserStatistics(this.id).subscribe(response => {\n      this.expService.getUserExpenses(this.id).subscribe((expensesRecieved: ExpenseForTable[]) => {\n        this.expenses.data = expensesRecieved;\n      })\n      if (response['amountOfMoneySpent'] != 0) {\n        this.avgDailyExpenses = response['averageDailyExpense'];\n        let showCurrentComparison = false;\n        this.currentMonthDataToCompare = response['barCompareExpensesWithLastMonth']['currentMonthData'];\n        for (let i = 0; i < this.currentMonthDataToCompare.length; i++) {\n          if (this.currentMonthDataToCompare[i].categoryExpenses !== 0)\n            showCurrentComparison = true;\n        }\n        let showPreviousComparison = false;\n        this.lastMonthDataToCompare = response['barCompareExpensesWithLastMonth']['lastMonthData'];\n        for (let i = 0; i < this.lastMonthDataToCompare.length; i++) {\n          if (this.lastMonthDataToCompare[i].categoryExpenses !== 0)\n            showPreviousComparison = true;\n        }\n        if (showCurrentComparison && showPreviousComparison)\n          this.showComparisonData = true;\n        this.barExpenses = response['barExpenses'];\n        this.lastSixMonths = response['lastSixMonths'];\n        this.mostUsedCategory = response['mostUsedCategory'];\n        this.mostSpentCategory = response['mostSpentCategory'];\n        this.amountOfMoneySpent = response['amountOfMoneySpent'];\n      }\n      this.isLoading = false;\n    })\n  }\n\n  expenseDelete(id: number, rowIndex: number) {\n    this.expService.onExpenseDelete(id).subscribe((response: any) => {\n      this.alertify.success(response);\n      this.expenses.data.splice(rowIndex, 1);\n      this.expenses.data = this.expenses.data;\n    }, error => {\n      this.alertify.error(error.error);\n    });\n  }\n\n  openDialog(id: number, rowIndex: number): void {\n    var exp = this.expenses.data.find(x => x.id === id);\n    const dialogRef = this.dialog.open(EditExpenseModalComponent, {\n      width: '550px',\n      data: exp\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result != null) {\n        this.expenses.data[rowIndex].expenseTitle = result['expenseTitle'];\n        this.expenses.data[rowIndex].expenseDescription = result['expenseDescription'];\n        this.expenses.data[rowIndex].moneySpent = result['moneySpent'];\n        this.expenses.data[rowIndex].creationDate = result['creationDate'];\n      }\n    });\n  }\n\n\n}\n","<div *ngIf=\"isLoading\" class=\"loader-wrapper\">\n    <div class=\"loader\">\n        <div class=\"face\">\n            <div class=\"circle\"></div>\n        </div>\n        <div class=\"face\">\n            <div class=\"circle\"></div>\n        </div>\n    </div>\n</div>\n<div>\n    <div *ngIf=\"amountOfMoneySpent > 0 && barExpenses != null\">\n        <div class=\"row\">\n            <div class=\"col-lg-4 col-md-12\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card card-stats\">\n                            <div class=\"card-body \">\n                                <div class=\"row\">\n                                    <div class=\"col-5 col-md-4\">\n                                        <div class=\"icon-big text-center icon-success\">\n                                            <i class=\"nc-icon nc-chart-bar-32 text-success\"></i>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-7 col-md-8\">\n                                        <div class=\"numbers\">\n                                            <p class=\"card-category mb-2\">Most used category</p>\n                                            <p class=\"card-title\">{{mostUsedCategory}}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card-footer \">\n                                <hr>\n                                <div class=\"stats\">\n                                    <i class=\"fa fa-sort-amount-asc\"></i> Number of expenses\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card card-stats\">\n                            <div class=\"card-body \">\n                                <div class=\"row\">\n                                    <div class=\"col-5 col-md-4\">\n                                        <div class=\"icon-big text-center icon-primary\">\n                                            <i class=\"nc-icon nc-chart-bar-32 text-primary\"></i>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-7 col-md-8\">\n                                        <div class=\"numbers\">\n                                            <p class=\"card-category mb-2\">Most spent category</p>\n                                            <p class=\"card-title\">{{mostSpentCategory}}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card-footer \">\n                                <hr>\n                                <div class=\"stats\">\n                                    <i class=\"fa fa-money\"></i> Total sum of expenses\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"lastSixMonths\" class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card \" style=\"border-radius: 12px;\">\n                            <div class=\"card-header \">\n                                <h5 class=\"card-title\">Last 6 Months</h5>\n                                <p class=\"card-category\">Line Comparison</p>\n                            </div>\n                            <div class=\"card-body \">\n                                <div>\n                                    <app-line-chart [lastSixMonths]=\"lastSixMonths\"></app-line-chart>\n                                </div>\n                            </div>\n                            <div class=\"card-footer \">\n                                <hr>\n                                <div class=\"stats\">\n                                    <i class=\"fa fa-calendar\"></i> Add text\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"showComparisonData && currentMonthDataToCompare && lastMonthDataToCompare\" class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card \" style=\"border-radius: 12px;\">\n                            <div class=\"card-header \">\n                                <h5 class=\"card-title\">Expenses Comparison</h5>\n                                <p class=\"card-category\">Last And Current Months</p>\n                            </div>\n                            <div class=\"card-body \">\n                                <div>\n                                    <app-bar-comparison [currentMonthbarExpensesList]=\"currentMonthDataToCompare\" [lastMonthbarExpensesList]=\"lastMonthDataToCompare\"></app-bar-comparison>\n                                </div>\n                            </div>\n                            <div class=\"card-footer \">\n                                <hr>\n                                <div class=\"stats\">\n                                    <i class=\"fa fa-calendar\"></i> Add text\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-lg-8 col-md-12\">\n                <div class=\"card\" style=\"border-radius: 12px;\">\n                    <div class=\"card-header \">\n                        <h5 class=\"card-title\">Expenses For Each Category</h5>\n                        <p class=\"card-category\">For this user</p>\n                    </div>\n                    <div *ngIf=\"barExpenses\" class=\"card-body \">\n                        <div *ngIf=\"barExpenses != null && categories.length > 0\">\n                            <app-single-bar-chart [categories]=\"categories\" [barExpensesList]=\"barExpenses\">\n                            </app-single-bar-chart>\n                        </div>\n                    </div>\n                    <div class=\"card-footer \">\n                        <hr>\n                        <div class=\"stats\">\n                            <i class=\"fa fa-calendar\"></i> Add text\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"mat-elevation-z8 text-center\" style=\"box-shadow: none;\">\n                        <table style=\"width: 100%;\" mat-table [dataSource]=\"expenses\">\n                            <ng-container matColumnDef=\"expenseTitle\">\n                                <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Expense </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.expenseTitle}} </td>\n                            </ng-container>\n                            <ng-container matColumnDef=\"category\">\n                                <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Category </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.expenseCategory}} </td>\n                            </ng-container>\n                            <ng-container matColumnDef=\"moneySpent\">\n                                <th class=\"text-center\" mat-header-cell *matHeaderCellDef> $ </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.moneySpent}} </td>\n                            </ng-container>\n                            <ng-container matColumnDef=\"expenseDescription\">\n                                <th class=\"text-center d-none d-xl-table-cell\" mat-header-cell *matHeaderCellDef> Description </th>\n                                <td class=\"d-none d-xl-table-cell\" mat-cell *matCellDef=\"let element\"> {{element.expenseDescription}} </td>\n                            </ng-container>\n                            <ng-container matColumnDef=\"creationDate\">\n                                <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Date </th>\n                                <td mat-cell *matCellDef=\"let element\"> {{element.creationDate | date :'short'}}\n                                </td>\n                            </ng-container>\n                            <ng-container matColumnDef=\"actions\">\n                                <th class=\"text-center\" mat-header-cell *matHeaderCellDef> Actions </th>\n                                <td mat-cell *matCellDef=\"let element; let i = index\">\n                                    <a *ngIf=\"isThisUser\" (click)=\"openDialog(element.id, i)\" class=\"btn\">\n                                        <span style=\"color: green;\">\n                                                <i class=\"fa fa-cog\"></i>\n                                            </span>\n                                    </a>\n                                    <a *ngIf=\"isThisUser\" (click)=\"expenseDelete(element.id, i)\" class=\"btn\">\n                                        <span class=\"mr\" style=\"color: red;\">\n                                                <i class=\"fa fa-times\"></i>\n                                            </span>\n                                    </a>\n                                </td>\n                            </ng-container>\n\n                            <tr mat-header-row *matHeaderRowDef=\"columnsForExpenses\"></tr>\n                            <tr mat-row *matRowDef=\"let row; columns: columnsForExpenses;\"></tr>\n                        </table>\n                        <div class=\"matpaginator\">\n                            <mat-paginator #expPaginator [pageSizeOptions]=\"[10]\" [hidePageSize]=\"true\" showFirstLastButtons>\n                            </mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"amountOfMoneySpent === 0 && barExpenses == null && isLoading == false\">\n        <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-lg-3 col-md-6 col-sm-6\">\n                <div class=\"card card-stats\">\n                    <div class=\"card-body \">\n                        <div class=\"row\">\n                            <div class=\"col-5 col-md-4\">\n                                <div class=\"icon-big text-center icon-warning\">\n                                    <i class=\"fa fa-exclamation-triangle text-warning\"></i>\n                                </div>\n                            </div>\n                            <div class=\"col-7 col-md-8\">\n                                <div class=\"numbers\">\n                                    <p class=\"card-category mb-2\">Add Some Expenses!</p>\n                                    <p class=\"card-title\">Please!</p>\n                                    <p>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-footer \">\n                        <hr>\n                        <div class=\"stats\">\n                            <i class=\"fa fa-refresh\"></i> Please, add expenses to see your statistics\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>","import { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-wallet-section',\n  templateUrl: './wallet-section.component.html',\n  styleUrls: ['./wallet-section.component.css']\n})\nexport class WalletSectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  @ViewChild(\"drawer\", { static: false }) drawer;\n  toggleState = false;\n\n\n  onToggle($event) {\n    this.drawer.toggle();\n    this.toggleState = !this.toggleState;\n  }\n\n\n}\n","<app-navbar (toggleDrawer)=\"onToggle($event)\"></app-navbar>\n<mat-sidenav-container class=\"example-container\">\n  <mat-sidenav class=\"mat-sidenav\" #drawer mode=\"side\" disableClose=\"true\" opened=\"true\">\n    <app-sidebar [toggle]=\"toggleState\" class=\"h-100\"></app-sidebar>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"mat-sidenav-content\">\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { ExpenseService } from 'src/app/_services/expense.service';\nimport { ExpenseList } from 'src/app/_model/expense-list';\nimport { LastMonthStat } from 'src/app/_model/lastMonthStat';\nimport { TopUsersStat } from 'src/app/_model/top-users-stat';\nimport { User } from 'src/app/_model/user';\nimport { Router } from '@angular/router';\nimport { WalletService } from 'src/app/_services/wallet.service';\nimport { CategoryData } from 'src/app/_model/categoryData';\n\n@Component({\n  selector: 'app-wallet-statistics',\n  templateUrl: './wallet-statistics.component.html',\n  styleUrls: ['./wallet-statistics.component.css', '../../css/spinner.css']\n})\nexport class WalletStatisticsComponent implements OnInit {\n\n  constructor(private expService: ExpenseService,\n    private router: Router,\n    private walletService: WalletService) { }\n\n  isLoading: boolean;\n  showComparisonData = false;\n\n  avgDailyExpenses: number;\n  mostSpentCategory: string;\n  mostUsedCategory: string;\n\n  currentMonthDataToCompare: ExpenseList[];\n  lastMonthDataToCompare: ExpenseList[];\n  barExpenses: ExpenseList[];\n  lastSixMonths: LastMonthStat[];\n  topFiveUsers: TopUsersStat[];\n  walletMembers: User[];\n  amountOfMoneySpent: number;\n  categories: CategoryData[] = [];\n  ngOnInit(): void {\n    if (this.walletService.currentCategories.length === 0) {\n      this.walletService.getWalletsCategories().subscribe((data: CategoryData[]) => {\n        this.walletService.currentCategories = data;\n        this.categories = this.walletService.currentCategories;\n      });\n    } else {\n      this.categories = this.walletService.currentCategories;\n    }\n\n    this.isLoading = true;\n    this.expService.getWalletStatistics().subscribe(response => {\n      console.log(response);\n      this.avgDailyExpenses = response['averageDailyExpense'];\n      this.amountOfMoneySpent = response['amountOfMoneySpent'];\n      if (response['hasExpenseData'] === true) {\n        this.currentMonthDataToCompare = response['barCompareExpensesWithLastMonth']['currentMonthData'];\n        let showCurrentComparison = false;\n        for (let i = 0; i < this.currentMonthDataToCompare.length; i++) {\n          if (this.currentMonthDataToCompare[i].categoryExpenses !== 0)\n            showCurrentComparison = true;\n        }\n        let showPreviousComparison = false;\n        this.lastMonthDataToCompare = response['barCompareExpensesWithLastMonth']['lastMonthData'];\n        for (let i = 0; i < this.lastMonthDataToCompare.length; i++) {\n          if (this.lastMonthDataToCompare[i].categoryExpenses !== 0)\n            showPreviousComparison = true;\n        }\n        \n        if (showCurrentComparison && showPreviousComparison)\n          this.showComparisonData = true;\n\n        this.barExpenses = response['barExpenses'];\n        this.lastSixMonths = response['lastSixMonths'];\n        this.topFiveUsers = response['topFiveUsers'];\n        this.mostUsedCategory = response['mostUsedCategory'];\n        this.mostSpentCategory = response['mostSpentCategory'];\n\n      }\n      this.walletMembers = response['walletUsers'];\n      this.isLoading = false;\n    });\n\n  }\n\n  getUserStatistics(id: string) {\n    console.log(id);\n\n    this.router.navigate(['/wallet/userStatistics', id]);\n  }\n\n}\n","<div *ngIf=\"isLoading\" class=\"loader-wrapper\">\n    <div class=\"loader\">\n        <div class=\"face\">\n            <div class=\"circle\"></div>\n        </div>\n        <div class=\"face\">\n            <div class=\"circle\"></div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"!isLoading\">\n    <div class=\"row\">\n        <div class=\"col-xl-3 col-lg-6 col-md-6 col-sm-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h4 class=\"card-title\">Team Members</h4>\n                </div>\n                <div class=\"card-body\">\n                    <ul *ngFor=\"let user of walletMembers\" class=\"list-unstyled team-members\">\n                        <li>\n                            <div class=\"row\">\n                                <div class=\"col-md-2 col-2\">\n                                    <div class=\"avatar\">\n                                    </div>\n                                </div>\n                                <div class=\"col-md-7 col-7 text-capitalize\">\n                                    {{user.username}}\n                                    <br>\n                                    <span class=\"text-muted\"><small>Add Here Role!</small></span>\n                                </div>\n                                <div class=\"col-md-3 col-3 text-right\">\n                                    <button (click)=\"getUserStatistics(user.id)\" class=\"btn btn-sm btn-outline-success btn-round btn-icon\"><i\n                                            class=\"fa fa-user\"></i></button>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-6 col-xs-6\">\n            <div class=\"card card-stats\">\n                <div class=\"card-body \">\n                    <div class=\"row\">\n                        <div class=\"col-5 col-md-4\">\n                            <div class=\"icon-big text-center icon-success\">\n                                <i class=\"nc-icon nc-chart-bar-32 text-success\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 col-md-8\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category mb-2\">Most used category</p>\n                                <p *ngIf=\"mostUsedCategory != null\" class=\"card-title\">{{mostUsedCategory}}</p>\n                                <p *ngIf=\"mostUsedCategory == null\" class=\"card-title\">None found</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer \">\n                    <hr>\n                    <div class=\"stats\">\n                        <i class=\"fa fa-sort-amount-asc\"></i>\n                        <span *ngIf=\"mostUsedCategory != null\">Number of expenses</span>\n                        <span *ngIf=\"mostUsedCategory == null\">Please, add expenses</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-6 col-xs-6\">\n            <div class=\"card card-stats\">\n                <div class=\"card-body \">\n                    <div class=\"row\">\n                        <div class=\"col-5 col-md-4\">\n                            <div class=\"icon-big text-center icon-primary\">\n                                <i class=\"nc-icon nc-chart-bar-32 text-primary\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 col-md-8\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category mb-2\">Most spent category</p>\n                                <p *ngIf=\"mostSpentCategory != null\" class=\"card-title\">{{mostSpentCategory}}</p>\n                                <p *ngIf=\"mostSpentCategory == null\" class=\"card-title\">None found</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer \">\n                    <hr>\n                    <div class=\"stats\">\n                        <i class=\"fa fa-money\"></i>\n                        <span *ngIf=\"mostSpentCategory != null\">Total $ for category</span>\n                        <span *ngIf=\"mostSpentCategory == null\">Please, add expenses</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-6 col-xs-6\">\n            <div class=\"card card-stats\">\n                <div class=\"card-body \">\n                    <div class=\"row\">\n                        <div class=\"col-5 col-md-4\">\n                            <div class=\"icon-big text-center icon-secondary\">\n                                <i class=\"nc-icon nc-money-coins text-secondary\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 col-md-8\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category mb-2\">Average daily expenses</p>\n                                <p *ngIf=\"avgDailyExpenses != 0\" class=\"card-title\">{{avgDailyExpenses}}</p>\n                                <p *ngIf=\"avgDailyExpenses == 0\" class=\"card-title\">0</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer \">\n                    <hr>\n                    <div class=\"stats\">\n                        <i class=\"fa fa-refresh\"></i>\n                        <span *ngIf=\"avgDailyExpenses != 0\" class=\"card-title\">Per day</span>\n                        <span *ngIf=\"avgDailyExpenses == 0\" class=\"card-title\">Please, add expenses</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-6 col-xs-6\">\n            <div class=\"card card-stats\">\n                <div class=\"card-body \">\n                    <div class=\"row\">\n                        <div class=\"col-5 col-md-4\">\n                            <div class=\"icon-big text-center icon-primary\">\n                                <i class=\"nc-icon nc-money-coins text-primary\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 col-md-8\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category mb-2\">Total money spent</p>\n                                <p *ngIf=\"amountOfMoneySpent != 0\" class=\"card-title\">{{amountOfMoneySpent}}</p>\n                                <p *ngIf=\"amountOfMoneySpent == 0\" class=\"card-title\">0</p>\n                                <p>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer \">\n                    <hr>\n                    <div class=\"stats\">\n                        <i class=\"fa fa-refresh\"></i>\n                        <span *ngIf=\"amountOfMoneySpent != 0\" class=\"card-title\">Total sum</span>\n                        <span *ngIf=\"amountOfMoneySpent == 0\" class=\"card-title\">Please, add expenses</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-xl-4 col-md-4 col-sm-12\">\n            <div class=\"card\" style=\"border-radius: 12px;\">\n                <div class=\"card-header\">\n                    <h5 class=\"card-title\">Top 5 users</h5>\n                    <p class=\"card-category\">Users with most expenses</p>\n                </div>\n                <div class=\"card-body \">\n                    <div *ngIf=\"topFiveUsers != null\">\n                        <app-pie-graph [topFiveUsers]=\"topFiveUsers\"></app-pie-graph>\n                    </div>\n                    <p *ngIf=\"topFiveUsers == null\" class=\"text-uppercase\">Please, add some expenses to see statistics\n                    </p>\n                </div>\n                <div class=\"card-footer\">\n                    <hr>\n                    <div class=\"stats\">\n                        <i class=\"fa fa-money\"></i> Number expenses made\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-xl-8 col-md-8 col-sm-12\">\n            <div class=\"card \" style=\"border-radius: 12px;\">\n                <div class=\"card-header \">\n                    <h5 class=\"card-title\">Wallet Statistics</h5>\n                    <p class=\"card-category\">Expenses For Each Category</p>\n                </div>\n                <div class=\"card-body \">\n                    <div *ngIf=\"barExpenses != null && categories.length > 0\">\n                        <app-single-bar-chart [categories]=\"categories\" [barExpensesList]=\"barExpenses\">\n                        </app-single-bar-chart>\n                        <p *ngIf=\"barExpenses == null\" class=\"text-uppercase\">Please, add some expenses to see statistics\n                        </p>\n                    </div>\n                </div>\n                <div class=\"card-footer \">\n                    <hr>\n                    <div class=\"stats\">\n                        <i class=\"fa fa-calendar\"></i> Add text\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-6 col-sm-12\" [ngClass]=\"{'col-md-12': !showComparisonData}\">\n            <div class=\"card \" style=\"border-radius: 12px;\">\n                <div class=\"card-header \">\n                    <h5 class=\"card-title\">Last 6 Months</h5>\n                    <p class=\"card-category\">Line Comparison</p>\n                </div>\n                <div class=\"card-body \">\n                    <div>\n                        <app-line-chart *ngIf=\"lastSixMonths != null\" [lastSixMonths]=\"lastSixMonths\"></app-line-chart>\n                        <p *ngIf=\"lastSixMonths == null\" class=\"text-uppercase\">Please, add some expenses to see statistics\n                        </p>\n                    </div>\n                </div>\n                <div class=\"card-footer \">\n                    <hr>\n                    <div class=\"stats\">\n                        <i class=\"fa fa-calendar\"></i> Add text\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-6 col-sm-12\" *ngIf=\"showComparisonData\">\n            <div class=\"card \" style=\"border-radius: 12px;\">\n                <div class=\"card-header \">\n                    <h5 class=\"card-title\">Expenses Comparison</h5>\n                    <p class=\"card-category\">Last And Current Months</p>\n                </div>\n                <div class=\"card-body \">\n                    <div>\n                        <app-bar-comparison *ngIf=\"currentMonthDataToCompare != null && lastMonthDataToCompare != null\" [categories]=\"categories\" [currentMonthbarExpensesList]=\"currentMonthDataToCompare\" [lastMonthbarExpensesList]=\"lastMonthDataToCompare\"></app-bar-comparison>\n                        <p *ngIf=\"currentMonthDataToCompare == null && lastMonthDataToCompare == null\" class=\"text-uppercase\">Please, add some expenses to see statistics\n                        </p>\n                    </div>\n                </div>\n                <div class=\"card-footer \">\n                    <hr>\n                    <div class=\"stats\">\n                        <i class=\"fa fa-calendar\"></i> Add text\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:5000/api/\"\n\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}